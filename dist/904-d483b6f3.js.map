{"version":3,"sources":["webpack://checkout/./node_modules/compute-scroll-into-view/index.js","webpack://checkout/./node_modules/downshift/dist/downshift.cjs.js"],"names":["isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","style","getComputedStyle","overflowY","overflowX","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","exports","target","options","scrollMode","block","inline","boundary","checkBoundary","node","TypeError","scrollingElement","document","documentElement","frames","cursor","parentNode","push","body","viewportWidth","window","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","_target$getBoundingCl","getBoundingClientRect","targetHeight","targetWidth","targetTop","top","targetRight","right","targetBottom","bottom","targetLeft","left","targetBlock","targetInline","computations","index","length","frame","_frame$getBoundingCli","_height","_width","_top","_left","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","Math","max","scrollLeft","scrollTop","min","module","default","_interopDefault","ex","cleanupTimerID","_objectWithoutPropertiesLoose","require","_extends","_assertThisInitialized","_inheritsLoose","React","React__default","computeScrollIntoView","statusDiv","getElementById","setStatus","status","div","createElement","setAttribute","Object","assign","border","clip","margin","padding","position","appendChild","getStatusDiv","clearTimeout","textContent","setTimeout","unknown","itemMouseEnter","keyDownArrowUp","keyDownArrowDown","keyDownEscape","keyDownEnter","keyDownHome","keyDownEnd","clickItem","blurInput","changeInput","keyDownSpaceButton","clickButton","blurButton","stateChangeTypes","freeze","mouseUp","controlledPropUpdatedSelectedItem","touchEnd","idCounter","cbToCb","cb","noop","isOrContainsNode","parent","child","contains","callAllEventHandlers","_len2","arguments","fns","Array","_key2","event","_len3","args","_key3","some","fn","apply","concat","preventDownshiftDefault","hasOwnProperty","nativeEvent","unwrapArray","arg","defaultValue","isArray","isDOMElement","element","type","getElementProps","props","stateKeys","pickState","state","result","forEach","k","normalizeArrowKey","key","keyCode","indexOf","getNextWrappingIndex","moveAmount","baseIndex","itemCount","itemsLastIndex","newIndex","Downshift","_Component","_props","_this","call","this","id","String","menuId","labelId","inputId","getItemId","input","items","previousResultCount","timeoutIds","internalSetTimeout","time","filter","i","setItemCount","count","unsetItemCount","setHighlightedIndex","highlightedIndex","otherStateToSet","defaultHighlightedIndex","internalSetState","clearSelection","selectedItem","inputValue","isOpen","defaultIsOpen","selectItem","item","itemToString","selectItemAtIndex","itemIndex","selectHighlightedItem","getState","stateToSet","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","setState","newStateToSet","stateReducer","nextState","nextFullState","keys","isControlledProp","onStateChange","onSelect","undefined","onChange","onUserAction","rootRef","_rootNode","getRootProps","_temp","_temp2","_extends2","_ref","_ref$refKey","refKey","rest","_ref2$suppressRefErro","suppressRefError","called","role","keyDownHandlers","ArrowDown","_this2","preventDefault","amount","shiftKey","moveHighlightedIndex","getItemCount","ArrowUp","_this3","Enter","_this$getState2","itemNode","getItemNodeFromIndex","hasAttribute","Escape","reset","buttonKeyDownHandlers","toggleMenu","inputKeyDownHandlers","Home","highlightFirstOrLastIndex","End","getToggleButtonProps","_temp3","_ref3","onClick","onKeyDown","onPress","onKeyUp","onBlur","enabledEventHandlers","buttonHandleClick","buttonHandleKeyDown","buttonHandleKeyUp","buttonHandleBlur","eventHandlers","disabled","environment","activeElement","focus","blurTarget","isMouseDown","getLabelProps","htmlFor","getInputProps","_temp4","_ref4","onInput","onChangeText","_eventHandlers","_this$getState4","inputHandleChange","inputHandleKeyDown","inputHandleBlur","autoComplete","value","inputHandleTextChange","text","downshiftButtonIsActive","dataset","toggle","menuRef","_menuNode","getMenuProps","_temp5","_temp6","_extends3","_ref5","_ref5$refKey","ref","_ref6$suppressRefErro","_len4","_key4","_len5","_key5","callAll","getItemProps","_temp7","_enabledEventHandlers","_ref7","onMouseMove","onMouseDown","_ref7$item","customClickHandler","avoidScrolling","clearItems","_ref8","_ref9","_this$getState5","openMenu","closeMenu","updateStatus","timeoutId","cancel","wrapper","_len","_key","debounce","resultCount","getA11yStatusMessage","highlightedItem","_this$props","_this$props$initialHi","initialHighlightedIndex","_highlightedIndex","_this$props$initialIs","initialIsOpen","_isOpen","_this$props$initialIn","initialInputValue","_inputValue","_this$props$initialSe","initialSelectedItem","_selectedItem","_state","_proto","prototype","internalClearTimeouts","stateToMerge","_this4","reduce","scrollHighlightedItemIntoView","scrollIntoView","nextHighlightedIndex","first","_this$getState6","componentDidMount","_this5","targetWithinDownshift","checkActiveElement","contextNode","onMouseUp","onOuterClick","onTouchStart","isTouchMove","onTouchMove","onTouchEnd","contextWithinDownshift","addEventListener","cleanup","removeEventListener","shouldScroll","prevState","prevProps","currentHighlightedIndex","prevHighlightedIndex","componentDidUpdate","selectedItemChanged","componentWillUnmount","render","children","cloneElement","process","Component","defaultProps","_ref2","prevItem","menuNode"],"mappings":"yUAKA,SAASA,EAAUC,GACjB,OAAa,MAANA,GAA4B,WAAd,EAAOA,IAAmC,IAAhBA,EAAGC,SAGpD,SAASC,EAAYC,EAAUC,GAC7B,QAAIA,GAA2C,WAAbD,KAId,YAAbA,GAAuC,SAAbA,GAGnC,SAASE,EAAaL,EAAII,GACxB,GAAIJ,EAAGM,aAAeN,EAAGO,cAAgBP,EAAGQ,YAAcR,EAAGS,YAAa,CACxE,IAAIC,EAAQC,iBAAiBX,EAAI,MACjC,OAAOE,EAAYQ,EAAME,UAAWR,IAA+BF,EAAYQ,EAAMG,UAAWT,GAGlG,OAAO,EAGT,SAASU,EAAaC,EAAoBC,EAAkBC,EAAeC,EAAsBC,EAAoBC,EAAkBC,EAAgBC,GACrJ,OAAIF,EAAmBL,GAAsBM,EAAiBL,GAAoBI,EAAmBL,GAAsBM,EAAiBL,EACnI,EAGLI,GAAoBL,GAAsBO,GAAeL,GAAiBI,GAAkBL,GAAoBM,GAAeL,EAC1HG,EAAmBL,EAAqBG,EAG7CG,EAAiBL,GAAoBM,EAAcL,GAAiBG,EAAmBL,GAAsBO,EAAcL,EACtHI,EAAiBL,EAAmBG,EAGtC,E,uEArCTI,EAAQA,YAAa,EACrBA,eAAkB,EAkLlBA,UA3Ie,SAAkBC,EAAQC,GACvC,IAAIC,EAAaD,EAAQC,WACrBC,EAAQF,EAAQE,MAChBC,EAASH,EAAQG,OACjBC,EAAWJ,EAAQI,SACnBzB,EAA6BqB,EAAQrB,2BACrC0B,EAAoC,mBAAbD,EAA0BA,EAAW,SAAUE,GACxE,OAAOA,IAASF,GAGlB,IAAK9B,EAAUyB,GACb,MAAM,IAAIQ,UAAU,kBAOtB,IAJA,IAAIC,EAAmBC,SAASD,kBAAoBC,SAASC,gBACzDC,EAAS,GACTC,EAASb,EAENzB,EAAUsC,IAAWP,EAAcO,IAAS,CAGjD,IAFAA,EAASA,EAAOC,cAEDL,EAAkB,CAC/BG,EAAOG,KAAKF,GACZ,MAGEA,IAAWH,SAASM,MAAQnC,EAAagC,KAAYhC,EAAa6B,SAASC,kBAI3E9B,EAAagC,EAAQjC,IACvBgC,EAAOG,KAAKF,GAqBhB,IAjBA,IAAII,EAAgBC,OAAOC,eAAiBA,eAAeC,MAAQC,WAC/DC,EAAiBJ,OAAOC,eAAiBA,eAAeI,OAASC,YACjEC,EAAYP,OAAOQ,SAAWC,YAC9BC,EAAYV,OAAOW,SAAWC,YAE9BC,EAAwB/B,EAAOgC,wBAC/BC,EAAeF,EAAsBR,OACrCW,EAAcH,EAAsBX,MACpCe,EAAYJ,EAAsBK,IAClCC,EAAcN,EAAsBO,MACpCC,EAAeR,EAAsBS,OACrCC,EAAaV,EAAsBW,KAEnCC,EAAwB,UAAVxC,GAA+B,YAAVA,EAAsBgC,EAAsB,QAAVhC,EAAkBoC,EAAeJ,EAAYF,EAAe,EACjIW,EAA0B,WAAXxC,EAAsBqC,EAAaP,EAAc,EAAe,QAAX9B,EAAmBiC,EAAcI,EACrGI,EAAe,GAEVC,EAAQ,EAAGA,EAAQlC,EAAOmC,OAAQD,IAAS,CAClD,IAAIE,EAAQpC,EAAOkC,GAEfG,EAAwBD,EAAMhB,wBAC9BkB,EAAUD,EAAsB1B,OAChC4B,EAASF,EAAsB7B,MAC/BgC,EAAOH,EAAsBb,IAC7BE,EAAQW,EAAsBX,MAC9BE,EAASS,EAAsBT,OAC/Ba,EAAQJ,EAAsBP,KAElC,GAAmB,cAAfxC,GAA8BiC,GAAa,GAAKM,GAAc,GAAKF,GAAgBjB,GAAkBe,GAAepB,GAAiBkB,GAAaiB,GAAQb,GAAgBC,GAAUC,GAAcY,GAAShB,GAAeC,EAC5N,OAAOO,EAGT,IAAIS,EAAanE,iBAAiB6D,GAC9BO,EAAaC,SAASF,EAAWG,gBAAiB,IAClDC,EAAYF,SAASF,EAAWK,eAAgB,IAChDC,EAAcJ,SAASF,EAAWO,iBAAkB,IACpDC,EAAeN,SAASF,EAAWS,kBAAmB,IACtDC,EAAc,EACdC,EAAe,EACfC,EAAiB,gBAAiBlB,EAAQA,EAAMmB,YAAcnB,EAAMhE,YAAcuE,EAAaK,EAAc,EAC7GQ,EAAkB,iBAAkBpB,EAAQA,EAAMqB,aAAerB,EAAMlE,aAAe4E,EAAYI,EAAe,EAErH,GAAIrD,IAAqBuC,EAErBgB,EADY,UAAV7D,EACYwC,EACK,QAAVxC,EACKwC,EAAcrB,EACT,YAAVnB,EACKb,EAAasC,EAAWA,EAAYN,EAAgBA,EAAgBoC,EAAWI,EAAclC,EAAYe,EAAaf,EAAYe,EAAcV,EAAcA,GAE9JU,EAAcrB,EAAiB,EAI7C2C,EADa,UAAX7D,EACawC,EACK,WAAXxC,EACMwC,EAAe3B,EAAgB,EAC1B,QAAXb,EACMwC,EAAe3B,EAEf3B,EAAamC,EAAWA,EAAYR,EAAeA,EAAesC,EAAYK,EAAanC,EAAYmB,EAAcnB,EAAYmB,EAAeV,EAAaA,GAG9K8B,EAAcM,KAAKC,IAAI,EAAGP,EAAcpC,GACxCqC,EAAeK,KAAKC,IAAI,EAAGN,EAAexC,OACrC,CAEHuC,EADY,UAAV7D,EACYwC,EAAcS,EAAOM,EAChB,QAAVvD,EACKwC,EAAcH,EAASsB,EAAeM,EACjC,YAAVjE,EACKb,EAAa8D,EAAMZ,EAAQU,EAASQ,EAAWI,EAAeM,EAAiBzB,EAAaA,EAAcV,EAAcA,GAExHU,GAAeS,EAAOF,EAAU,GAAKkB,EAAkB,EAIrEH,EADa,UAAX7D,EACawC,EAAeS,EAAQE,EAClB,WAAXnD,EACMwC,GAAgBS,EAAQF,EAAS,GAAKe,EAAiB,EAClD,QAAX9D,EACMwC,EAAeN,EAAQsB,EAAcM,EAErC5E,EAAa+D,EAAOf,EAAOa,EAAQI,EAAYK,EAAcM,EAAgBtB,EAAcA,EAAeV,EAAaA,GAGxI,IAAIsC,EAAaxB,EAAMwB,WACnBC,EAAYzB,EAAMyB,UAGtB9B,GAAe8B,GAFfT,EAAcM,KAAKC,IAAI,EAAGD,KAAKI,IAAID,EAAYT,EAAahB,EAAMjE,aAAemE,EAAUkB,KAG3FxB,GAAgB4B,GAFhBP,EAAeK,KAAKC,IAAI,EAAGD,KAAKI,IAAIF,EAAaP,EAAcjB,EAAM/D,YAAckE,EAASe,KAK9FrB,EAAa9B,KAAK,CAChBvC,GAAIwE,EACJZ,IAAK4B,EACLtB,KAAMuB,IAIV,OAAOpB,GAIT8B,EAAO5E,QAAUA,EAAQ6E,S,oPClLzB,SAASC,EAAiBC,GAAM,OAAQA,GAAqB,WAAd,EAAOA,IAAoB,YAAaA,EAAMA,EAAE,QAAcA,E,qIAE7G,IAYIC,EAZAC,EAAgCH,EAAgBI,EAAQ,OACxDC,EAAWL,EAAgBI,EAAQ,QACnCE,EAAyBN,EAAgBI,EAAQ,QACjDG,EAAiBP,EAAgBI,EAAQ,QAEzCI,GADYR,EAAgBI,EAAQ,QAC5BA,EAAQ,QAChBK,EAAiBT,EAAgBQ,GAEjCE,GADUN,EAAQ,OACMJ,EAAgBI,EAAQ,SAGhDO,EAAgC,oBAAb9E,SAA2B,KAAOA,SAAS+E,eAAe,uBAMjF,SAASC,EAAUC,GACjB,IAAIC,EAuBN,WACE,GAAIJ,EACF,OAAOA,EAmBT,OAhBAA,EAAY9E,SAASmF,cAAc,QACzBC,aAAa,KAAM,uBAC7BN,EAAUM,aAAa,OAAQ,UAC/BN,EAAUM,aAAa,YAAa,UACpCN,EAAUM,aAAa,gBAAiB,kBACxCC,OAAOC,OAAOR,EAAUtG,MAAO,CAC7B+G,OAAQ,IACRC,KAAM,gBACN3E,OAAQ,MACR4E,OAAQ,OACRxH,SAAU,SACVyH,QAAS,IACTC,SAAU,WACVjF,MAAO,QAETV,SAASM,KAAKsF,YAAYd,GACnBA,EA5CGe,GAELZ,IAIDZ,IACFyB,aAAazB,GACbA,EAAiB,MAGnBa,EAAIa,YAAcd,EAClBZ,EAAiB2B,YAAW,WAC1Bd,EAAIa,YAAc,GAClB1B,EAAiB,OAChB,MAgCL,IAAI4B,EAA+E,EAE/EC,EAA8F,EAC9FC,EAA+F,EAC/FC,EAAmG,EACnGC,EAA4F,EAC5FC,EAA0F,EAC1FC,EAAwF,EACxFC,EAAsF,EACtFC,EAAoF,EACpFC,EAAoF,GACpFC,EAAwF,GACxFC,EAAuG,GACvGC,EAAwF,GACxFC,EAAsF,GAItFC,EAAgC1B,OAAO2B,OAAO,CAChDf,QAASA,EACTgB,QAnBiF,EAoBjFf,eAAgBA,EAChBC,eAAgBA,EAChBC,iBAAkBA,EAClBC,cAAeA,EACfC,aAAcA,EACdC,YAAaA,EACbC,WAAYA,EACZC,UAAWA,EACXC,UAAWA,EACXC,YAAaA,EACbC,mBAAoBA,EACpBC,YAAaA,EACbC,WAAYA,EACZI,kCAnByI,GAoBzIC,SAnBmF,KAsBjFC,EAAY,EAUhB,SAASC,EAAOC,GACd,MAAqB,mBAAPA,EAAoBA,EAAKC,EAGzC,SAASA,KAiCT,SAASC,EAAiBC,EAAQC,GAChC,OAAOD,IAAWC,GAASD,EAAOE,UAAYF,EAAOE,SAASD,GA6ChE,SAASE,IACP,IAAK,IAAIC,EAAQC,UAAUzF,OAAQ0F,EAAM,IAAIC,MAAMH,GAAQI,EAAQ,EAAGA,EAAQJ,EAAOI,IACnFF,EAAIE,GAASH,UAAUG,GAGzB,OAAO,SAAUC,GACf,IAAK,IAAIC,EAAQL,UAAUzF,OAAQ+F,EAAO,IAAIJ,MAAMG,EAAQ,EAAIA,EAAQ,EAAI,GAAIE,EAAQ,EAAGA,EAAQF,EAAOE,IACxGD,EAAKC,EAAQ,GAAKP,UAAUO,GAG9B,OAAON,EAAIO,MAAK,SAAUC,GAKxB,OAJIA,GACFA,EAAGC,WAAM,EAAQ,CAACN,GAAOO,OAAOL,IAG3BF,EAAMQ,yBAA2BR,EAAMS,eAAe,gBAAkBT,EAAMU,YAAYF,4BAmFvG,SAASG,EAAYC,EAAKC,GAKxB,QAJAD,EAAMd,MAAMgB,QAAQF,GAEpBA,EAAI,GAAKA,IAEGC,EACHA,EAEAD,EASX,SAASG,EAAaC,GAEpB,MAA+B,iBAAjBA,EAAQC,KAQxB,SAASC,EAAgBF,GACvB,OAAOA,EAAQG,MAejB,IAAIC,EAAY,CAAC,mBAAoB,aAAc,SAAU,eAAgB,QAM7E,SAASC,EAAUC,QACH,IAAVA,IACFA,EAAQ,IAGV,IAAIC,EAAS,GAMb,OALAH,EAAUI,SAAQ,SAAUC,GACtBH,EAAMb,eAAegB,KACvBF,EAAOE,GAAKH,EAAMG,OAGfF,EAST,SAASG,EAAkB1B,GACzB,IAAI2B,EAAM3B,EAAM2B,IACZC,EAAU5B,EAAM4B,QAGpB,OAAIA,GAAW,IAAMA,GAAW,IAA+B,IAAzBD,EAAIE,QAAQ,SACzC,QAAUF,EAGZA,EAuBT,SAASG,EAAqBC,EAAYC,EAAWC,GACnD,IAAIC,EAAiBD,EAAY,GAER,iBAAdD,GAA0BA,EAAY,GAAKA,GAAaC,KACjED,EAAYD,EAAa,GAAK,EAAIG,EAAiB,GAGrD,IAAIC,EAAWH,EAAYD,EAQ3B,OANII,EAAW,EACbA,EAAWD,EACFC,EAAWD,IACpBC,EAAW,GAGNA,EAGT,IAAIC,EAEJ,SAAUC,GAGR,SAASD,EAAUE,GACjB,IAAIC,EAAQF,EAAWG,KAAKC,KAAMH,IAAWG,KAE7CF,EAAMG,GAAKH,EAAMpB,MAAMuB,IAAM,aA7KxBC,OAAOzD,KA8KZqD,EAAMK,OAASL,EAAMpB,MAAMyB,QAAUL,EAAMG,GAAK,QAChDH,EAAMM,QAAUN,EAAMpB,MAAM0B,SAAWN,EAAMG,GAAK,SAClDH,EAAMO,QAAUP,EAAMpB,MAAM2B,SAAWP,EAAMG,GAAK,SAElDH,EAAMQ,UAAYR,EAAMpB,MAAM4B,WAAa,SAAU7I,GACnD,OAAOqI,EAAMG,GAAK,SAAWxI,GAG/BqI,EAAMS,MAAQ,KACdT,EAAMU,MAAQ,GACdV,EAAMN,UAAY,KAClBM,EAAMW,oBAAsB,EAC5BX,EAAMY,WAAa,GAEnBZ,EAAMa,mBAAqB,SAAU/C,EAAIgD,GACvC,IAAIX,EAAK5E,YAAW,WAClByE,EAAMY,WAAaZ,EAAMY,WAAWG,QAAO,SAAUC,GACnD,OAAOA,IAAMb,KAEfrC,MACCgD,GAEHd,EAAMY,WAAWhL,KAAKuK,IAGxBH,EAAMiB,aAAe,SAAUC,GAC7BlB,EAAMN,UAAYwB,GAGpBlB,EAAMmB,eAAiB,WACrBnB,EAAMN,UAAY,MAGpBM,EAAMoB,oBAAsB,SAAUC,EAAkBC,QAC7B,IAArBD,IACFA,EAAmBrB,EAAMpB,MAAM2C,8BAGT,IAApBD,IACFA,EAAkB,IAGpBA,EAAkBxC,EAAUwC,GAE5BtB,EAAMwB,iBAAiBzH,EAAS,CAC9BsH,iBAAkBA,GACjBC,KAGLtB,EAAMyB,eAAiB,SAAU5E,GAC/BmD,EAAMwB,iBAAiB,CACrBE,aAAc,KACdC,WAAY,GACZN,iBAAkBrB,EAAMpB,MAAM2C,wBAC9BK,OAAQ5B,EAAMpB,MAAMiD,eACnBhF,IAGLmD,EAAM8B,WAAa,SAAUC,EAAMT,EAAiBzE,GAClDyE,EAAkBxC,EAAUwC,GAE5BtB,EAAMwB,iBAAiBzH,EAAS,CAC9B6H,OAAQ5B,EAAMpB,MAAMiD,cACpBR,iBAAkBrB,EAAMpB,MAAM2C,wBAC9BG,aAAcK,EACdJ,WAAY3B,EAAMpB,MAAMoD,aAAaD,IACpCT,GAAkBzE,IAGvBmD,EAAMiC,kBAAoB,SAAUC,EAAWZ,EAAiBzE,GAC9D,IAAIkF,EAAO/B,EAAMU,MAAMwB,GAEX,MAARH,GAIJ/B,EAAM8B,WAAWC,EAAMT,EAAiBzE,IAG1CmD,EAAMmC,sBAAwB,SAAUb,EAAiBzE,GACvD,OAAOmD,EAAMiC,kBAAkBjC,EAAMoC,WAAWf,iBAAkBC,EAAiBzE,IAGrFmD,EAAMwB,iBAAmB,SAAUa,EAAYxF,GAC7C,IAAIyF,EAAgBC,EAChBC,EAAmB,GACnBC,EAA6C,mBAAfJ,EAUlC,OAJKI,GAAwBJ,EAAWnE,eAAe,eACrD8B,EAAMpB,MAAM8D,mBAAmBL,EAAWV,WAAY5H,EAAS,GAAIiG,EAAM2C,qBAAsBN,IAG1FrC,EAAM4C,UAAS,SAAU7D,GAC9BA,EAAQiB,EAAMoC,SAASrD,GACvB,IAAI8D,EAAgBJ,EAAuBJ,EAAWtD,GAASsD,EAE/DQ,EAAgB7C,EAAMpB,MAAMkE,aAAa/D,EAAO8D,GAIhDP,EAAiBO,EAAc3E,eAAe,gBAE9C,IAAI6E,EAAY,GAEZC,EAAgB,GAsCpB,OAlCIV,GAAkBO,EAAcnB,eAAiB3C,EAAM2C,eACzDa,EAAcM,EAAcnB,cAG9BmB,EAAcnE,KAAOmE,EAAcnE,MAAQlD,EAC3CZ,OAAOqI,KAAKJ,GAAe5D,SAAQ,SAAUG,GAGvCL,EAAMK,KAASyD,EAAczD,KAC/BoD,EAAiBpD,GAAOyD,EAAczD,IAS5B,SAARA,IAIJ4D,EAAc5D,GAAOyD,EAAczD,GAE9BY,EAAMkD,iBAAiB9D,KAC1B2D,EAAU3D,GAAOyD,EAAczD,QAK/BqD,GAAwBI,EAAc3E,eAAe,eACvD8B,EAAMpB,MAAM8D,mBAAmBG,EAAclB,WAAY5H,EAAS,GAAIiG,EAAM2C,qBAAsBE,IAG7FE,KACN,WAEDnG,EAAOC,EAAPD,GAG2BhC,OAAOqI,KAAKT,GAAkB5K,OAAS,GAGhEoI,EAAMpB,MAAMuE,cAAcX,EAAkBxC,EAAM2C,sBAGhDL,GACFtC,EAAMpB,MAAMwE,SAASf,EAAWX,aAAc1B,EAAM2C,2BAGlCU,IAAhBd,GACFvC,EAAMpB,MAAM0E,SAASf,EAAavC,EAAM2C,sBAK1C3C,EAAMpB,MAAM2E,aAAaf,EAAkBxC,EAAM2C,0BAIrD3C,EAAMwD,QAAU,SAAUpO,GACxB,OAAO4K,EAAMyD,UAAYrO,GAG3B4K,EAAM0D,aAAe,SAAUC,EAAOC,GACpC,IAAIC,EAEAC,OAAiB,IAAVH,EAAmB,GAAKA,EAC/BI,EAAcD,EAAKE,OACnBA,OAAyB,IAAhBD,EAAyB,MAAQA,EAC1CE,EAAOpK,EAA8BiK,EAAM,CAAC,WAG5CI,QADmB,IAAXN,EAAoB,GAAKA,GACHO,iBAC9BA,OAA6C,IAA1BD,GAA2CA,EAIlElE,EAAM0D,aAAaU,QAAS,EAC5BpE,EAAM0D,aAAaM,OAASA,EAC5BhE,EAAM0D,aAAaS,iBAAmBA,EAEtC,IACIvC,EADiB5B,EAAMoC,WACCR,OAE5B,OAAO7H,IAAU8J,EAAY,IAAcG,GAAUhE,EAAMwD,QAASK,EAAUQ,KAAO,WAAYR,EAAU,iBAAmBjC,EAAQiC,EAAU,iBAAmB,UAAWA,EAAU,aAAejC,EAAS5B,EAAMK,OAAS,KAAMwD,EAAU,mBAAqB7D,EAAMM,QAASuD,GAAYI,IAGjSjE,EAAMsE,gBAAkB,CACtBC,UAAW,SAAmB9G,GAC5B,IAAI+G,EAAStE,KAIb,GAFAzC,EAAMgH,iBAEFvE,KAAKkC,WAAWR,OAAQ,CAC1B,IAAI8C,EAASjH,EAAMkH,SAAW,EAAI,EAClCzE,KAAK0E,qBAAqBF,EAAQ,CAChChG,KAAM/C,SAGRuE,KAAKsB,iBAAiB,CACpBI,QAAQ,EACRlD,KAAM/C,IACL,WACD,IAAI+D,EAAY8E,EAAOK,eAEnBnF,EAAY,GACd8E,EAAOpD,oBAAoB7B,EAAqB,EAAGiF,EAAOpC,WAAWf,iBAAkB3B,GAAY,CACjGhB,KAAM/C,QAMhBmJ,QAAS,SAAiBrH,GACxB,IAAIsH,EAAS7E,KAIb,GAFAzC,EAAMgH,iBAEFvE,KAAKkC,WAAWR,OAAQ,CAC1B,IAAI8C,EAASjH,EAAMkH,UAAY,GAAK,EACpCzE,KAAK0E,qBAAqBF,EAAQ,CAChChG,KAAMhD,SAGRwE,KAAKsB,iBAAiB,CACpBI,QAAQ,EACRlD,KAAMhD,IACL,WACD,IAAIgE,EAAYqF,EAAOF,eAEnBnF,EAAY,GACdqF,EAAO3D,oBAAoB7B,GAAsB,EAAGwF,EAAO3C,WAAWf,iBAAkB3B,GAAY,CAClGhB,KAAM/C,QAMhBqJ,MAAO,SAAevH,GACpB,IAAIwH,EAAkB/E,KAAKkC,WACvBR,EAASqD,EAAgBrD,OACzBP,EAAmB4D,EAAgB5D,iBAEvC,GAAIO,GAA8B,MAApBP,EAA0B,CACtC5D,EAAMgH,iBACN,IAAI1C,EAAO7B,KAAKQ,MAAMW,GAClB6D,EAAWhF,KAAKiF,qBAAqB9D,GAEzC,GAAY,MAARU,GAAgBmD,GAAYA,EAASE,aAAa,YACpD,OAGFlF,KAAKiC,sBAAsB,CACzBzD,KAAM7C,MAIZwJ,OAAQ,SAAgB5H,GACtBA,EAAMgH,iBACNvE,KAAKoF,MAAM,CACT5G,KAAM9C,EACN8F,aAAc,KACdC,WAAY,OAIlB3B,EAAMuF,sBAAwBxL,EAAS,GAAIiG,EAAMsE,gBAAiB,CAChE,IAAK,SAAW7G,GACdA,EAAMgH,iBACNvE,KAAKsF,WAAW,CACd9G,KAAMvC,OAIZ6D,EAAMyF,qBAAuB1L,EAAS,GAAIiG,EAAMsE,gBAAiB,CAC/DoB,KAAM,SAAcjI,GAClByC,KAAKyF,0BAA0BlI,GAAO,EAAM,CAC1CiB,KAAM5C,KAGV8J,IAAK,SAAanI,GAChByC,KAAKyF,0BAA0BlI,GAAO,EAAO,CAC3CiB,KAAM3C,OAKZiE,EAAM6F,qBAAuB,SAAUC,GACrC,IAAIC,OAAmB,IAAXD,EAAoB,GAAKA,EACjCE,EAAUD,EAAMC,QAEhBC,GADUF,EAAMG,QACJH,EAAME,WAClBE,EAAUJ,EAAMI,QAChBC,EAASL,EAAMK,OACfnC,EAAOpK,EAA8BkM,EAAO,CAAC,UAAW,UAAW,YAAa,UAAW,WAG3FnE,EADkB5B,EAAMoC,WACCR,OAEzByE,EAAuB,CACzBL,QAAS7I,EAAqB6I,EAAShG,EAAMsG,mBAC7CL,UAAW9I,EAAqB8I,EAAWjG,EAAMuG,qBACjDJ,QAAShJ,EAAqBgJ,EAASnG,EAAMwG,mBAC7CJ,OAAQjJ,EAAqBiJ,EAAQpG,EAAMyG,mBAEzCC,EAAgBzC,EAAK0C,SAAW,GAAKN,EACzC,OAAOtM,EAAS,CACd2E,KAAM,SACN2F,KAAM,SACN,aAAczC,EAAS,aAAe,YACtC,iBAAiB,EACjB,eAAe,GACd8E,EAAezC,IAGpBjE,EAAMwG,kBAAoB,SAAU/I,GAElCA,EAAMgH,kBAGRzE,EAAMuG,oBAAsB,SAAU9I,GACpC,IAAI2B,EAAMD,EAAkB1B,GAExBuC,EAAMuF,sBAAsBnG,IAC9BY,EAAMuF,sBAAsBnG,GAAKa,KAAKjG,EAAuBgG,GAAQvC,IAIzEuC,EAAMsG,kBAAoB,SAAU7I,GAClCA,EAAMgH,iBAKFzE,EAAMpB,MAAMgI,YAAYrR,SAASsR,gBAAkB7G,EAAMpB,MAAMgI,YAAYrR,SAASM,MACtF4H,EAAM5I,OAAOiS,QAYb9G,EAAMa,oBAAmB,WACvB,OAAOb,EAAMwF,WAAW,CACtB9G,KAAMtC,QAMd4D,EAAMyG,iBAAmB,SAAUhJ,GACjC,IAAIsJ,EAAatJ,EAAM5I,OAGvBmL,EAAMa,oBAAmB,WAClBb,EAAMgH,aAAkE,MAAlDhH,EAAMpB,MAAMgI,YAAYrR,SAASsR,eAAyB7G,EAAMpB,MAAMgI,YAAYrR,SAASsR,cAAc1G,KAAOH,EAAMO,SAAYP,EAAMpB,MAAMgI,YAAYrR,SAASsR,gBAAkBE,GAE5M/G,EAAMsF,MAAM,CACV5G,KAAMrC,QAMhB2D,EAAMiH,cAAgB,SAAUrI,GAC9B,OAAO7E,EAAS,CACdmN,QAASlH,EAAMO,QACfJ,GAAIH,EAAMM,SACT1B,IAGLoB,EAAMmH,cAAgB,SAAUC,GAC9B,IAAIC,OAAmB,IAAXD,EAAoB,GAAKA,EACjCnB,EAAYoB,EAAMpB,UAClBG,EAASiB,EAAMjB,OACf9C,EAAW+D,EAAM/D,SACjBgE,EAAUD,EAAMC,QAEhBrD,GADeoD,EAAME,aACd1N,EAA8BwN,EAAO,CAAC,YAAa,SAAU,WAAY,UAAW,kBAG3FX,EAAgB,GAKpB,IAMMc,EANFC,EAAkBzH,EAAMoC,WACxBT,EAAa8F,EAAgB9F,WAC7BC,EAAS6F,EAAgB7F,OACzBP,EAAmBoG,EAAgBpG,iBAElC4C,EAAK0C,YAGSa,EAAiB,IAAkB,SAAgBrK,EAAqBmG,EAAUgE,EAAStH,EAAM0H,mBAAoBF,EAAevB,UAAY9I,EAAqB8I,EAAWjG,EAAM2H,oBAAqBH,EAAepB,OAASjJ,EAAqBiJ,EAAQpG,EAAM4H,iBAAvRlB,EAAySc,GAK3S,OAAOzN,EAAS,CACd,oBAAqB,OACrB,wBAAyB6H,GAAsC,iBAArBP,GAAiCA,GAAoB,EAAIrB,EAAMQ,UAAUa,GAAoB,KACvI,gBAAiBO,EAAS5B,EAAMK,OAAS,KACzC,kBAAmBL,EAAMM,QAGzBuH,aAAc,MACdC,MAAOnG,EACPxB,GAAIH,EAAMO,SACTmG,EAAezC,IAGpBjE,EAAM2H,mBAAqB,SAAUlK,GACnC,IAAI2B,EAAMD,EAAkB1B,GAExB2B,GAAOY,EAAMyF,qBAAqBrG,IACpCY,EAAMyF,qBAAqBrG,GAAKa,KAAKjG,EAAuBgG,GAAQvC,IAIxEuC,EAAM0H,kBAAoB,SAAUjK,GAClCuC,EAAMwB,iBAAiB,CACrB9C,KAAMxC,EACN0F,QAAQ,EACRD,WAAYlE,EAAM5I,OAAOiT,MACzBzG,iBAAkBrB,EAAMpB,MAAM2C,2BAIlCvB,EAAM+H,sBAEJ,SAAUC,GACVhI,EAAMwB,iBAAiB,CACrB9C,KAAMxC,EACN0F,QAAQ,EACRD,WAAYqG,EACZ3G,iBAAkBrB,EAAMpB,MAAM2C,2BAIlCvB,EAAM4H,gBAAkB,WAEtB5H,EAAMa,oBAAmB,WACvB,IAAIoH,EAA0BjI,EAAMpB,MAAMgI,YAAYrR,YAAcyK,EAAMpB,MAAMgI,YAAYrR,SAASsR,iBAAmB7G,EAAMpB,MAAMgI,YAAYrR,SAASsR,cAAcqB,SAAWlI,EAAMpB,MAAMgI,YAAYrR,SAASsR,cAAcqB,QAAQC,QAAUnI,EAAMyD,WAAazD,EAAMyD,UAAUvG,SAAS8C,EAAMpB,MAAMgI,YAAYrR,SAASsR,eAE3T7G,EAAMgH,aAAgBiB,GACzBjI,EAAMsF,MAAM,CACV5G,KAAMzC,QAMd+D,EAAMoI,QAAU,SAAUhT,GACxB4K,EAAMqI,UAAYjT,GAGpB4K,EAAMsI,aAAe,SAAUC,EAAQC,GACrC,IAAIC,EAEAC,OAAmB,IAAXH,EAAoB,GAAKA,EACjCI,EAAeD,EAAM1E,OACrBA,OAA0B,IAAjB2E,EAA0B,MAAQA,EAC3CC,EAAMF,EAAME,IACZhK,EAAQ/E,EAA8B6O,EAAO,CAAC,SAAU,QAGxDG,QADmB,IAAXL,EAAoB,GAAKA,GACHrE,iBAC9BA,OAA6C,IAA1B0E,GAA2CA,EAKlE,OAHA7I,EAAMsI,aAAalE,QAAS,EAC5BpE,EAAMsI,aAAatE,OAASA,EAC5BhE,EAAMsI,aAAanE,iBAAmBA,EAC/BpK,IAAU0O,EAAY,IAAczE,GAjrBjD,WACE,IAAK,IAAI8E,EAAQzL,UAAUzF,OAAQ0F,EAAM,IAAIC,MAAMuL,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACnFzL,EAAIyL,GAAS1L,UAAU0L,GAGzB,OAAO,WACL,IAAK,IAAIC,EAAQ3L,UAAUzF,OAAQ+F,EAAO,IAAIJ,MAAMyL,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFtL,EAAKsL,GAAS5L,UAAU4L,GAG1B3L,EAAI2B,SAAQ,SAAUnB,GAChBA,GACFA,EAAGC,WAAM,EAAQJ,OAqqBkCuL,CAAQN,EAAK5I,EAAMoI,SAAUK,EAAUpE,KAAO,UAAWoE,EAAU,mBAAqB7J,GAASA,EAAM,cAAgB,KAAOoB,EAAMM,QAASmI,EAAUtI,GAAKH,EAAMK,OAAQoI,GAAY7J,IAG7OoB,EAAMmJ,aAAe,SAAUC,GAC7B,IAAIC,EAEAC,OAAmB,IAAXF,EAAoB,GAAKA,EACjCG,EAAcD,EAAMC,YACpBC,EAAcF,EAAME,YACpBxD,EAAUsD,EAAMtD,QAEhBrO,GADU2R,EAAMpD,QACRoD,EAAM3R,OACd8R,EAAaH,EAAMvH,KACnBA,OAAsB,IAAf0H,OAEXpG,EAAmDoG,EAC/CxF,EAAOpK,EAA8ByP,EAAO,CAAC,cAAe,cAAe,UAAW,UAAW,QAAS,cAEhGjG,IAAV1L,GACFqI,EAAMU,MAAM9K,KAAKmM,GAEjBpK,EAAQqI,EAAMU,MAAMpB,QAAQyC,IAE5B/B,EAAMU,MAAM/I,GAASoK,EAGvB,IACI2H,EAAqB1D,EACrBK,IAAwBgD,EAAwB,CAIlDE,YAAapM,EAAqBoM,GAAa,WACzC5R,IAAUqI,EAAMoC,WAAWf,mBAI/BrB,EAAMoB,oBAAoBzJ,EAAO,CAC/B+G,KAAMjD,IAORuE,EAAM2J,gBAAiB,EAEvB3J,EAAMa,oBAAmB,WACvB,OAAOb,EAAM2J,gBAAiB,IAC7B,SAELH,YAAarM,EAAqBqM,GAAa,SAAU/L,GAIvDA,EAAMgH,sBAEc,QAAgBtH,EAAqBuM,GAAoB,WAC/E1J,EAAMiC,kBAAkBtK,EAAO,CAC7B+G,KAAM1C,OAENqN,GAGA3C,EAAgBzC,EAAK0C,SAAW,CAClC6C,YAAanD,EAAqBmD,aAChCnD,EACJ,OAAOtM,EAAS,CACdoG,GAAIH,EAAMQ,UAAU7I,GACpB0M,KAAM,SACN,gBAAiBrE,EAAMoC,WAAWf,mBAAqB1J,GACtD+O,EAAezC,IAGpBjE,EAAM4J,WAAa,WACjB5J,EAAMU,MAAQ,IAGhBV,EAAMsF,MAAQ,SAAUhE,EAAiBzE,QACf,IAApByE,IACFA,EAAkB,IAGpBA,EAAkBxC,EAAUwC,GAE5BtB,EAAMwB,kBAAiB,SAAUqI,GAC/B,IAAInI,EAAemI,EAAMnI,aACzB,OAAO3H,EAAS,CACd6H,OAAQ5B,EAAMpB,MAAMiD,cACpBR,iBAAkBrB,EAAMpB,MAAM2C,wBAC9BI,WAAY3B,EAAMpB,MAAMoD,aAAaN,IACpCJ,KACFzE,IAGLmD,EAAMwF,WAAa,SAAUlE,EAAiBzE,QACpB,IAApByE,IACFA,EAAkB,IAGpBA,EAAkBxC,EAAUwC,GAE5BtB,EAAMwB,kBAAiB,SAAUsI,GAC/B,IAAIlI,EAASkI,EAAMlI,OACnB,OAAO7H,EAAS,CACd6H,QAASA,GACRA,GAAU,CACXP,iBAAkBrB,EAAMpB,MAAM2C,yBAC7BD,MACF,WACD,IAAIyI,EAAkB/J,EAAMoC,WACxBR,EAASmI,EAAgBnI,OACzBP,EAAmB0I,EAAgB1I,iBAEnCO,GACE5B,EAAM6E,eAAiB,GAAiC,iBAArBxD,GACrCrB,EAAMoB,oBAAoBC,EAAkBC,GAIhD1E,EAAOC,EAAPD,OAIJoD,EAAMgK,SAAW,SAAUnN,GACzBmD,EAAMwB,iBAAiB,CACrBI,QAAQ,GACP/E,IAGLmD,EAAMiK,UAAY,SAAUpN,GAC1BmD,EAAMwB,iBAAiB,CACrBI,QAAQ,GACP/E,IAGLmD,EAAMkK,aAt3BV,SAAkBpM,EAAIgD,GACpB,IAAIqJ,EAEJ,SAASC,IACHD,GACF9O,aAAa8O,GAIjB,SAASE,IACP,IAAK,IAAIC,EAAOjN,UAAUzF,OAAQ+F,EAAO,IAAIJ,MAAM+M,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC/E5M,EAAK4M,GAAQlN,UAAUkN,GAGzBH,IACAD,EAAY5O,YAAW,WACrB4O,EAAY,KACZrM,EAAGC,WAAM,EAAQJ,KAChBmD,GAIL,OADAuJ,EAAQD,OAASA,EACVC,EAg2BgBG,EAAS,WAC5B,IAAIzL,EAAQiB,EAAMoC,WAEdL,EAAO/B,EAAMU,MAAM3B,EAAMsC,kBAEzBoJ,EAAczK,EAAM6E,eAEpBrK,EAASwF,EAAMpB,MAAM8L,qBAAqB3Q,EAAS,CACrDiI,aAAchC,EAAMpB,MAAMoD,aAC1BrB,oBAAqBX,EAAMW,oBAC3B8J,YAAaA,EACbE,gBAAiB5I,GAChBhD,IAEHiB,EAAMW,oBAAsB8J,EAC5BlQ,EAAUC,KACT,KAKH,IAAIoQ,EAAc5K,EAAMpB,MACpB2C,EAA0BqJ,EAAYrJ,wBACtCsJ,EAAwBD,EAAYE,wBACpCC,OAA8C,IAA1BF,EAAmCtJ,EAA0BsJ,EACjFhJ,EAAgB+I,EAAY/I,cAC5BmJ,EAAwBJ,EAAYK,cACpCC,OAAoC,IAA1BF,EAAmCnJ,EAAgBmJ,EAC7DG,EAAwBP,EAAYQ,kBACpCC,OAAwC,IAA1BF,EAAmC,GAAKA,EACtDG,EAAwBV,EAAYW,oBACpCC,OAA0C,IAA1BF,EAAmC,KAAOA,EAE1DG,EAASzL,EAAMoC,SAAS,CAC1Bf,iBAAkB0J,EAClBnJ,OAAQsJ,EACRvJ,WAAY0J,EACZ3J,aAAc8J,IAQhB,OAL2B,MAAvBC,EAAO/J,mBAA0D2B,IAAlCrD,EAAMpB,MAAMwM,oBAC7CK,EAAO9J,WAAa3B,EAAMpB,MAAMoD,aAAayJ,EAAO/J,eAGtD1B,EAAMjB,MAAQ0M,EACPzL,EAtqBT/F,EAAe4F,EAAWC,GAyqB1B,IAAI4L,EAAS7L,EAAU8L,UAiWvB,OA5VAD,EAAOE,sBAAwB,WAC7B1L,KAAKU,WAAW3B,SAAQ,SAAUkB,GAChC9E,aAAa8E,MAEfD,KAAKU,WAAa,IAmBpB8K,EAAOtJ,SAAW,SAAkByJ,GAClC,IAAIC,EAAS5L,KAMb,YAJqB,IAAjB2L,IACFA,EAAe3L,KAAKnB,OAGfnE,OAAOqI,KAAK4I,GAAcE,QAAO,SAAUhN,EAAOK,GAEvD,OADAL,EAAMK,GAAO0M,EAAO5I,iBAAiB9D,GAAO0M,EAAOlN,MAAMQ,GAAOyM,EAAazM,GACtEL,IACN,KAWL2M,EAAOxI,iBAAmB,SAA0B9D,GAClD,YAA2BiE,IAApBnD,KAAKtB,MAAMQ,IAGpBsM,EAAO7G,aAAe,WAKpB,IAAInF,EAAYQ,KAAKQ,MAAM9I,OAQ3B,OANsB,MAAlBsI,KAAKR,UACPA,EAAYQ,KAAKR,eACiB2D,IAAzBnD,KAAKtB,MAAMc,YACpBA,EAAYQ,KAAKtB,MAAMc,WAGlBA,GAGTgM,EAAOvG,qBAAuB,SAA8BxN,GAC1D,OAAOuI,KAAKtB,MAAMgI,YAAYrR,SAAS+E,eAAe4F,KAAKM,UAAU7I,KAGvE+T,EAAOM,8BAAgC,WAGnC,IAAI5W,EAAO8K,KAAKiF,qBAAqBjF,KAAKkC,WAAWf,kBACrDnB,KAAKtB,MAAMqN,eAAe7W,EAAM8K,KAAKmI,YAIzCqD,EAAO9G,qBAAuB,SAA8BF,EAAQpD,GAClE,IAAI5B,EAAYQ,KAAK2E,eAErB,GAAInF,EAAY,EAAG,CACjB,IAAIwM,EAAuB3M,EAAqBmF,EAAQxE,KAAKkC,WAAWf,iBAAkB3B,GAC1FQ,KAAKkB,oBAAoB8K,EAAsB5K,KAInDoK,EAAO/F,0BAA4B,SAAmClI,EAAO0O,EAAO7K,GAClF,IAAI3B,EAAiBO,KAAK2E,eAAiB,EAEvClF,EAAiB,IAAMO,KAAKkC,WAAWR,SAI3CnE,EAAMgH,iBACNvE,KAAKkB,oBAAoB+K,EAAQ,EAAIxM,EAAgB2B,KAGvDoK,EAAO/I,mBAAqB,WAC1B,IAAIyJ,EAAkBlM,KAAKkC,WACvBf,EAAmB+K,EAAgB/K,iBACnCM,EAAayK,EAAgBzK,WAC7BD,EAAe0K,EAAgB1K,aAC/BE,EAASwK,EAAgBxK,OAEzBI,EAAe9B,KAAKtB,MAAMoD,aAC1B7B,EAAKD,KAAKC,GACVuD,EAAexD,KAAKwD,aACpBmC,EAAuB3F,KAAK2F,qBAC5BoB,EAAgB/G,KAAK+G,cACrBqB,EAAepI,KAAKoI,aACpBnB,EAAgBjH,KAAKiH,cACrBgC,EAAejJ,KAAKiJ,aACpBa,EAAW9J,KAAK8J,SAChBC,EAAY/J,KAAK+J,UACjBzE,EAAatF,KAAKsF,WAClB1D,EAAa5B,KAAK4B,WAClBG,EAAoB/B,KAAK+B,kBACzBE,EAAwBjC,KAAKiC,sBAC7Bf,EAAsBlB,KAAKkB,oBAC3BK,EAAiBvB,KAAKuB,eACtBmI,EAAa1J,KAAK0J,WAKtB,MAAO,CAELlG,aAAcA,EACdmC,qBAAsBA,EACtBoB,cAAeA,EACfqB,aAAcA,EACdnB,cAAeA,EACfgC,aAAcA,EAEd7D,MAbUpF,KAAKoF,MAcf0E,SAAUA,EACVC,UAAWA,EACXzE,WAAYA,EACZ1D,WAAYA,EACZG,kBAAmBA,EACnBE,sBAAuBA,EACvBf,oBAAqBA,EACrBK,eAAgBA,EAChBmI,WAAYA,EACZ3I,aAtBiBf,KAAKe,aAuBtBE,eAtBmBjB,KAAKiB,eAuBxByB,SAtBa1C,KAAKsB,iBAwBlBQ,aAAcA,EAEd7B,GAAIA,EAEJkB,iBAAkBA,EAClBM,WAAYA,EACZC,OAAQA,EACRF,aAAcA,IAKlBgK,EAAOW,kBAAoB,WACzB,IAAIC,EAASpM,KAUX,IAAIqM,EAAwB,SAAU1X,EAAQ2X,QACjB,IAAvBA,IACFA,GAAqB,GAGvB,IAAIjX,EAAW+W,EAAO1N,MAAMgI,YAAYrR,SACxC,MAAO,CAAC+W,EAAO7I,UAAW6I,EAAOjE,WAAWxK,MAAK,SAAU4O,GACzD,OAAOA,IAAgB1P,EAAiB0P,EAAa5X,IAAW2X,GAAsBzP,EAAiB0P,EAAalX,EAASsR,oBAS7H2C,EAAc,WAChB8C,EAAOtF,aAAc,GAGnB0F,EAAY,SAAUjP,GACxB6O,EAAOtF,aAAc,GAGQuF,EAAsB9O,EAAM5I,SAE1ByX,EAAOlK,WAAWR,QAC/C0K,EAAOhH,MAAM,CACX5G,KAltCuE,IAmtCtE,WACD,OAAO4N,EAAO1N,MAAM+N,aAAaL,EAAO3J,0BAW1CiK,EAAe,WACjBN,EAAOO,aAAc,GAGnBC,EAAc,WAChBR,EAAOO,aAAc,GAGnBE,EAAa,SAAUtP,GACzB,IAAIuP,EAAyBT,EAAsB9O,EAAM5I,QAAQ,GAE5DyX,EAAOO,aAAgBG,IAA0BV,EAAOlK,WAAWR,QACtE0K,EAAOhH,MAAM,CACX5G,KA7tCyE,KA8tCxE,WACD,OAAO4N,EAAO1N,MAAM+N,aAAaL,EAAO3J,0BAK9CzC,KAAKtB,MAAMgI,YAAYqG,iBAAiB,YAAazD,GACrDtJ,KAAKtB,MAAMgI,YAAYqG,iBAAiB,UAAWP,GACnDxM,KAAKtB,MAAMgI,YAAYqG,iBAAiB,aAAcL,GACtD1M,KAAKtB,MAAMgI,YAAYqG,iBAAiB,YAAaH,GACrD5M,KAAKtB,MAAMgI,YAAYqG,iBAAiB,WAAYF,GAEpD7M,KAAKgN,QAAU,WACbZ,EAAOV,wBAEPU,EAAOpC,aAAaE,SAEpBkC,EAAO1N,MAAMgI,YAAYuG,oBAAoB,YAAa3D,GAE1D8C,EAAO1N,MAAMgI,YAAYuG,oBAAoB,UAAWT,GAExDJ,EAAO1N,MAAMgI,YAAYuG,oBAAoB,aAAcP,GAE3DN,EAAO1N,MAAMgI,YAAYuG,oBAAoB,YAAaL,GAE1DR,EAAO1N,MAAMgI,YAAYuG,oBAAoB,WAAYJ,KAK/DrB,EAAO0B,aAAe,SAAsBC,EAAWC,GACrD,IACIC,QADyClK,IAAhCnD,KAAKtB,MAAMyC,iBAAiCnB,KAAKkC,WAAalC,KAAKtB,OAC3CyC,iBAGjCmM,QADwCnK,IAA/BiK,EAAUjM,iBAAiCgM,EAAYC,GAClCjM,iBAGlC,OADqBkM,GAA2BrN,KAAKkC,WAAWR,SAAWyL,EAAUzL,QAC5D2L,IAA4BC,GAGvD9B,EAAO+B,mBAAqB,SAA4BH,EAAWD,GAU7DnN,KAAKgD,iBAAiB,iBAAmBhD,KAAKtB,MAAM8O,oBAAoBJ,EAAU5L,aAAcxB,KAAKtB,MAAM8C,eAC7GxB,KAAKsB,iBAAiB,CACpB9C,KApxCmI,GAqxCnIiD,WAAYzB,KAAKtB,MAAMoD,aAAa9B,KAAKtB,MAAM8C,iBAI9CxB,KAAKyJ,gBAAkBzJ,KAAKkN,aAAaC,EAAWC,IACvDpN,KAAK8L,gCAKP9L,KAAKgK,gBAGPwB,EAAOiC,qBAAuB,WAC5BzN,KAAKgN,WAGPxB,EAAOkC,OAAS,WACd,IAAIC,EAAWzP,EAAY8B,KAAKtB,MAAMiP,SAAU/Q,GAIhDoD,KAAK0J,aAKL1J,KAAKwD,aAAaU,QAAS,EAC3BlE,KAAKwD,aAAaM,YAASX,EAC3BnD,KAAKwD,aAAaS,sBAAmBd,EAErCnD,KAAKoI,aAAalE,QAAS,EAC3BlE,KAAKoI,aAAatE,YAASX,EAC3BnD,KAAKoI,aAAanE,sBAAmBd,EAErCnD,KAAK+G,cAAc7C,QAAS,EAE5BlE,KAAKiH,cAAc/C,QAAS,EAC5B,IAAI3F,EAAUL,EAAYyP,EAAS3N,KAAKyC,uBAExC,OAAKlE,EAIDyB,KAAKwD,aAAaU,QAAUlE,KAAKtB,MAAMuF,iBAKlC1F,EACED,EAAaC,GAGftE,EAAe2T,aAAarP,EAASyB,KAAKwD,aAAa/E,EAAgBF,UAK5EsP,EAjBK,MA4BJlO,EA3gCT,CA4gCE3F,EAAM8T,WAERnO,EAAUoO,aAAe,CACvB1M,wBAAyB,KACzBM,eAAe,EACf6I,qBAxqCF,SAA8BwD,GAC5B,IAAItM,EAASsM,EAAMtM,OACfF,EAAewM,EAAMxM,aACrB+I,EAAcyD,EAAMzD,YACpB9J,EAAsBuN,EAAMvN,oBAC5BqB,EAAekM,EAAMlM,aAEzB,OAAKJ,EAIA6I,EAIDA,IAAgB9J,EACX8J,EAAc,WAA6B,IAAhBA,EAAoB,MAAQ,SAAW,iFAGpE,GAPE,4BAJA/I,EAAeM,EAAaN,GAAgB,IAiqCrDM,aAAc,SAAsBhB,GAClC,OAAS,MAALA,EACK,GAQFZ,OAAOY,IAEhBmC,cAAerG,EACf4F,mBAAoB5F,EACpByG,aAAczG,EACdwG,SAAUxG,EACVsG,SAAUtG,EACV6P,aAAc7P,EACd4Q,oBAAqB,SAA6BS,EAAUpM,GAC1D,OAAOoM,IAAapM,GAEtB6E,YAA+B,oBAAX7Q,OAElB,GAAKA,OACP+M,aAAc,SAAsB/D,EAAOsD,GACzC,OAAOA,GAET8B,kBAAkB,EAClB8H,eAh1CF,SAAwB7W,EAAMgZ,GACf,OAAThZ,GAIUgF,EAAsBhF,EAAM,CACxCF,SAAUkZ,EACVpZ,MAAO,UACPD,WAAY,cAENkK,SAAQ,SAAU6E,GACxB,IAAIzQ,EAAKyQ,EAAKzQ,GACV4D,EAAM6M,EAAK7M,IACXM,EAAOuM,EAAKvM,KAChBlE,EAAGiG,UAAYrC,EACf5D,EAAGgG,WAAa9B,OAm0CpBsI,EAAUvD,iBAAmBA,EAyF7B1H,EAAQA,GAAUiL","file":"904-d483b6f3.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nfunction isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize || elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nvar _default = function _default(target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        _height = _frame$getBoundingCli.height,\n        _width = _frame$getBoundingCli.width,\n        _top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        _left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= _top && targetBottom <= bottom && targetLeft >= _left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - _top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(_top, bottom, _height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (_top + _height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - _left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (_left + _width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(_left, right, _width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - _height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - _width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar _objectWithoutPropertiesLoose = _interopDefault(require('@babel/runtime/helpers/objectWithoutPropertiesLoose'));\nvar _extends = _interopDefault(require('@babel/runtime/helpers/extends'));\nvar _assertThisInitialized = _interopDefault(require('@babel/runtime/helpers/assertThisInitialized'));\nvar _inheritsLoose = _interopDefault(require('@babel/runtime/helpers/inheritsLoose'));\nvar PropTypes = _interopDefault(require('prop-types'));\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar reactIs = require('react-is');\nvar computeScrollIntoView = _interopDefault(require('compute-scroll-into-view'));\n\n// istanbul ignore next\nvar statusDiv = typeof document === 'undefined' ? null : document.getElementById('a11y-status-message');\nvar cleanupTimerID;\n/**\n * @param {String} status the status message\n */\n\nfunction setStatus(status) {\n  var div = getStatusDiv();\n\n  if (!status) {\n    return;\n  }\n\n  if (cleanupTimerID) {\n    clearTimeout(cleanupTimerID);\n    cleanupTimerID = null;\n  }\n\n  div.textContent = status;\n  cleanupTimerID = setTimeout(function () {\n    div.textContent = '';\n    cleanupTimerID = null;\n  }, 500);\n}\n/**\n * Get the status node or create it if it does not already exist\n * @return {HTMLElement} the status node\n */\n\n\nfunction getStatusDiv() {\n  if (statusDiv) {\n    return statusDiv;\n  }\n\n  statusDiv = document.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'polite');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  document.body.appendChild(statusDiv);\n  return statusDiv;\n}\n\nvar unknown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_unknown__' : 0;\nvar mouseUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_mouseup__' : 1;\nvar itemMouseEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_item_mouseenter__' : 2;\nvar keyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_up__' : 3;\nvar keyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_down__' : 4;\nvar keyDownEscape = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_escape__' : 5;\nvar keyDownEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_enter__' : 6;\nvar keyDownHome = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_home__' : 7;\nvar keyDownEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_end__' : 8;\nvar clickItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_item__' : 9;\nvar blurInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_input__' : 10;\nvar changeInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_change_input__' : 11;\nvar keyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_space_button__' : 12;\nvar clickButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_button__' : 13;\nvar blurButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_button__' : 14;\nvar controlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_controlled_prop_updated_selected_item__' : 15;\nvar touchEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_touchend__' : 16;\n\nvar stateChangeTypes = /*#__PURE__*/Object.freeze({\n  unknown: unknown,\n  mouseUp: mouseUp,\n  itemMouseEnter: itemMouseEnter,\n  keyDownArrowUp: keyDownArrowUp,\n  keyDownArrowDown: keyDownArrowDown,\n  keyDownEscape: keyDownEscape,\n  keyDownEnter: keyDownEnter,\n  keyDownHome: keyDownHome,\n  keyDownEnd: keyDownEnd,\n  clickItem: clickItem,\n  blurInput: blurInput,\n  changeInput: changeInput,\n  keyDownSpaceButton: keyDownSpaceButton,\n  clickButton: clickButton,\n  blurButton: blurButton,\n  controlledPropUpdatedSelectedItem: controlledPropUpdatedSelectedItem,\n  touchEnd: touchEnd\n});\n\nvar idCounter = 0;\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\n\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\n\nfunction noop() {}\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} menuNode the menu element of the component\n */\n\n\nfunction scrollIntoView(node, menuNode) {\n  if (node === null) {\n    return;\n  }\n\n  var actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed'\n  });\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\n\n\nfunction isOrContainsNode(parent, child) {\n  return parent === child || parent.contains && parent.contains(child);\n}\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\n\n\nfunction debounce(fn, time) {\n  var timeoutId;\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  function wrapper() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    cancel();\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      fn.apply(void 0, args);\n    }, time);\n  }\n\n  wrapper.cancel = cancel;\n  return wrapper;\n}\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\n\n\nfunction callAllEventHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return fns.some(function (fn) {\n      if (fn) {\n        fn.apply(void 0, [event].concat(args));\n      }\n\n      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;\n    });\n  };\n}\n/**\n * This return a function that will call all the given functions with\n * the arguments with which it's called. It does a null-check before\n * attempting to call the functions and can take any number of functions.\n * @param {...Function} fns the functions to call\n * @return {Function} the function that calls all the functions\n */\n\n\nfunction callAll() {\n  for (var _len4 = arguments.length, fns = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    fns[_key4] = arguments[_key4];\n  }\n\n  return function () {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    fns.forEach(function (fn) {\n      if (fn) {\n        fn.apply(void 0, args);\n      }\n    });\n  };\n}\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\n\n\nfunction generateId() {\n  return String(idCounter++);\n}\n/**\n * Resets idCounter to 0. Used for SSR.\n */\n\n\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n/**\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\n\nfunction getA11yStatusMessage(_ref2) {\n  var isOpen = _ref2.isOpen,\n      selectedItem = _ref2.selectedItem,\n      resultCount = _ref2.resultCount,\n      previousResultCount = _ref2.previousResultCount,\n      itemToString = _ref2.itemToString;\n\n  if (!isOpen) {\n    return selectedItem ? itemToString(selectedItem) : '';\n  }\n\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n\n  if (resultCount !== previousResultCount) {\n    return resultCount + \" result\" + (resultCount === 1 ? ' is' : 's are') + \" available, use up and down arrow keys to navigate. Press Enter key to select.\";\n  }\n\n  return '';\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\n\n\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ?\n  /* istanbul ignore next (preact) */\n  arg[0] : arg;\n\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\n\n\nfunction isDOMElement(element) {\n  // then we assume this is react\n  return typeof element.type === 'string';\n}\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\n\n\nfunction getElementProps(element) {\n  return element.props;\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\n\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(\"The property \\\"\" + propName + \"\\\" is required in \\\"\" + fnName + \"\\\"\");\n}\n\nvar stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\n\nfunction pickState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var result = {};\n  stateKeys.forEach(function (k) {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\n\n\nfunction normalizeArrowKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  /* istanbul ignore next (ie) */\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return \"Arrow\" + key;\n  }\n\n  return key;\n}\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\n\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @returns {number} The new index after the move.\n */\n\n\nfunction getNextWrappingIndex(moveAmount, baseIndex, itemCount) {\n  var itemsLastIndex = itemCount - 1;\n\n  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  var newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = itemsLastIndex;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = 0;\n  }\n\n  return newIndex;\n}\n\nvar Downshift =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Downshift, _Component);\n\n  function Downshift(_props) {\n    var _this = _Component.call(this, _props) || this;\n\n    _this.id = _this.props.id || \"downshift-\" + generateId();\n    _this.menuId = _this.props.menuId || _this.id + \"-menu\";\n    _this.labelId = _this.props.labelId || _this.id + \"-label\";\n    _this.inputId = _this.props.inputId || _this.id + \"-input\";\n\n    _this.getItemId = _this.props.getItemId || function (index) {\n      return _this.id + \"-item-\" + index;\n    };\n\n    _this.input = null;\n    _this.items = [];\n    _this.itemCount = null;\n    _this.previousResultCount = 0;\n    _this.timeoutIds = [];\n\n    _this.internalSetTimeout = function (fn, time) {\n      var id = setTimeout(function () {\n        _this.timeoutIds = _this.timeoutIds.filter(function (i) {\n          return i !== id;\n        });\n        fn();\n      }, time);\n\n      _this.timeoutIds.push(id);\n    };\n\n    _this.setItemCount = function (count) {\n      _this.itemCount = count;\n    };\n\n    _this.unsetItemCount = function () {\n      _this.itemCount = null;\n    };\n\n    _this.setHighlightedIndex = function (highlightedIndex, otherStateToSet) {\n      if (highlightedIndex === void 0) {\n        highlightedIndex = _this.props.defaultHighlightedIndex;\n      }\n\n      if (otherStateToSet === void 0) {\n        otherStateToSet = {};\n      }\n\n      otherStateToSet = pickState(otherStateToSet);\n\n      _this.internalSetState(_extends({\n        highlightedIndex: highlightedIndex\n      }, otherStateToSet));\n    };\n\n    _this.clearSelection = function (cb) {\n      _this.internalSetState({\n        selectedItem: null,\n        inputValue: '',\n        highlightedIndex: _this.props.defaultHighlightedIndex,\n        isOpen: _this.props.defaultIsOpen\n      }, cb);\n    };\n\n    _this.selectItem = function (item, otherStateToSet, cb) {\n      otherStateToSet = pickState(otherStateToSet);\n\n      _this.internalSetState(_extends({\n        isOpen: _this.props.defaultIsOpen,\n        highlightedIndex: _this.props.defaultHighlightedIndex,\n        selectedItem: item,\n        inputValue: _this.props.itemToString(item)\n      }, otherStateToSet), cb);\n    };\n\n    _this.selectItemAtIndex = function (itemIndex, otherStateToSet, cb) {\n      var item = _this.items[itemIndex];\n\n      if (item == null) {\n        return;\n      }\n\n      _this.selectItem(item, otherStateToSet, cb);\n    };\n\n    _this.selectHighlightedItem = function (otherStateToSet, cb) {\n      return _this.selectItemAtIndex(_this.getState().highlightedIndex, otherStateToSet, cb);\n    };\n\n    _this.internalSetState = function (stateToSet, cb) {\n      var isItemSelected, onChangeArg;\n      var onStateChangeArg = {};\n      var isStateToSetFunction = typeof stateToSet === 'function'; // we want to call `onInputValueChange` before the `setState` call\n      // so someone controlling the `inputValue` state gets notified of\n      // the input change as soon as possible. This avoids issues with\n      // preserving the cursor position.\n      // See https://github.com/downshift-js/downshift/issues/217 for more info.\n\n      if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n        _this.props.onInputValueChange(stateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), stateToSet));\n      }\n\n      return _this.setState(function (state) {\n        state = _this.getState(state);\n        var newStateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet; // Your own function that could modify the state that will be set.\n\n        newStateToSet = _this.props.stateReducer(state, newStateToSet); // checks if an item is selected, regardless of if it's different from\n        // what was selected before\n        // used to determine if onSelect and onChange callbacks should be called\n\n        isItemSelected = newStateToSet.hasOwnProperty('selectedItem'); // this keeps track of the object we want to call with setState\n\n        var nextState = {}; // this is just used to tell whether the state changed\n\n        var nextFullState = {}; // we need to call on change if the outside world is controlling any of our state\n        // and we're trying to update that state. OR if the selection has changed and we're\n        // trying to update the selection\n\n        if (isItemSelected && newStateToSet.selectedItem !== state.selectedItem) {\n          onChangeArg = newStateToSet.selectedItem;\n        }\n\n        newStateToSet.type = newStateToSet.type || unknown;\n        Object.keys(newStateToSet).forEach(function (key) {\n          // onStateChangeArg should only have the state that is\n          // actually changing\n          if (state[key] !== newStateToSet[key]) {\n            onStateChangeArg[key] = newStateToSet[key];\n          } // the type is useful for the onStateChangeArg\n          // but we don't actually want to set it in internal state.\n          // this is an undocumented feature for now... Not all internalSetState\n          // calls support it and I'm not certain we want them to yet.\n          // But it enables users controlling the isOpen state to know when\n          // the isOpen state changes due to mouseup events which is quite handy.\n\n\n          if (key === 'type') {\n            return;\n          }\n\n          nextFullState[key] = newStateToSet[key]; // if it's coming from props, then we don't care to set it internally\n\n          if (!_this.isControlledProp(key)) {\n            nextState[key] = newStateToSet[key];\n          }\n        }); // if stateToSet is a function, then we weren't able to call onInputValueChange\n        // earlier, so we'll call it now that we know what the inputValue state will be.\n\n        if (isStateToSetFunction && newStateToSet.hasOwnProperty('inputValue')) {\n          _this.props.onInputValueChange(newStateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), newStateToSet));\n        }\n\n        return nextState;\n      }, function () {\n        // call the provided callback if it's a function\n        cbToCb(cb)(); // only call the onStateChange and onChange callbacks if\n        // we have relevant information to pass them.\n\n        var hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n\n        if (hasMoreStateThanType) {\n          _this.props.onStateChange(onStateChangeArg, _this.getStateAndHelpers());\n        }\n\n        if (isItemSelected) {\n          _this.props.onSelect(stateToSet.selectedItem, _this.getStateAndHelpers());\n        }\n\n        if (onChangeArg !== undefined) {\n          _this.props.onChange(onChangeArg, _this.getStateAndHelpers());\n        } // this is currently undocumented and therefore subject to change\n        // We'll try to not break it, but just be warned.\n\n\n        _this.props.onUserAction(onStateChangeArg, _this.getStateAndHelpers());\n      });\n    };\n\n    _this.rootRef = function (node) {\n      return _this._rootNode = node;\n    };\n\n    _this.getRootProps = function (_temp, _temp2) {\n      var _extends2;\n\n      var _ref = _temp === void 0 ? {} : _temp,\n          _ref$refKey = _ref.refKey,\n          refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n          rest = _objectWithoutPropertiesLoose(_ref, [\"refKey\"]);\n\n      var _ref2 = _temp2 === void 0 ? {} : _temp2,\n          _ref2$suppressRefErro = _ref2.suppressRefError,\n          suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;\n\n      // this is used in the render to know whether the user has called getRootProps.\n      // It uses that to know whether to apply the props automatically\n      _this.getRootProps.called = true;\n      _this.getRootProps.refKey = refKey;\n      _this.getRootProps.suppressRefError = suppressRefError;\n\n      var _this$getState = _this.getState(),\n          isOpen = _this$getState.isOpen;\n\n      return _extends((_extends2 = {}, _extends2[refKey] = _this.rootRef, _extends2.role = 'combobox', _extends2['aria-expanded'] = isOpen, _extends2['aria-haspopup'] = 'listbox', _extends2['aria-owns'] = isOpen ? _this.menuId : null, _extends2['aria-labelledby'] = _this.labelId, _extends2), rest);\n    };\n\n    _this.keyDownHandlers = {\n      ArrowDown: function ArrowDown(event) {\n        var _this2 = this;\n\n        event.preventDefault();\n\n        if (this.getState().isOpen) {\n          var amount = event.shiftKey ? 5 : 1;\n          this.moveHighlightedIndex(amount, {\n            type: keyDownArrowDown\n          });\n        } else {\n          this.internalSetState({\n            isOpen: true,\n            type: keyDownArrowDown\n          }, function () {\n            var itemCount = _this2.getItemCount();\n\n            if (itemCount > 0) {\n              _this2.setHighlightedIndex(getNextWrappingIndex(1, _this2.getState().highlightedIndex, itemCount), {\n                type: keyDownArrowDown\n              });\n            }\n          });\n        }\n      },\n      ArrowUp: function ArrowUp(event) {\n        var _this3 = this;\n\n        event.preventDefault();\n\n        if (this.getState().isOpen) {\n          var amount = event.shiftKey ? -5 : -1;\n          this.moveHighlightedIndex(amount, {\n            type: keyDownArrowUp\n          });\n        } else {\n          this.internalSetState({\n            isOpen: true,\n            type: keyDownArrowUp\n          }, function () {\n            var itemCount = _this3.getItemCount();\n\n            if (itemCount > 0) {\n              _this3.setHighlightedIndex(getNextWrappingIndex(-1, _this3.getState().highlightedIndex, itemCount), {\n                type: keyDownArrowDown\n              });\n            }\n          });\n        }\n      },\n      Enter: function Enter(event) {\n        var _this$getState2 = this.getState(),\n            isOpen = _this$getState2.isOpen,\n            highlightedIndex = _this$getState2.highlightedIndex;\n\n        if (isOpen && highlightedIndex != null) {\n          event.preventDefault();\n          var item = this.items[highlightedIndex];\n          var itemNode = this.getItemNodeFromIndex(highlightedIndex);\n\n          if (item == null || itemNode && itemNode.hasAttribute('disabled')) {\n            return;\n          }\n\n          this.selectHighlightedItem({\n            type: keyDownEnter\n          });\n        }\n      },\n      Escape: function Escape(event) {\n        event.preventDefault();\n        this.reset({\n          type: keyDownEscape,\n          selectedItem: null,\n          inputValue: ''\n        });\n      }\n    };\n    _this.buttonKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n      ' ': function _(event) {\n        event.preventDefault();\n        this.toggleMenu({\n          type: keyDownSpaceButton\n        });\n      }\n    });\n    _this.inputKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n      Home: function Home(event) {\n        this.highlightFirstOrLastIndex(event, true, {\n          type: keyDownHome\n        });\n      },\n      End: function End(event) {\n        this.highlightFirstOrLastIndex(event, false, {\n          type: keyDownEnd\n        });\n      }\n    });\n\n    _this.getToggleButtonProps = function (_temp3) {\n      var _ref3 = _temp3 === void 0 ? {} : _temp3,\n          onClick = _ref3.onClick,\n          onPress = _ref3.onPress,\n          onKeyDown = _ref3.onKeyDown,\n          onKeyUp = _ref3.onKeyUp,\n          onBlur = _ref3.onBlur,\n          rest = _objectWithoutPropertiesLoose(_ref3, [\"onClick\", \"onPress\", \"onKeyDown\", \"onKeyUp\", \"onBlur\"]);\n\n      var _this$getState3 = _this.getState(),\n          isOpen = _this$getState3.isOpen;\n\n      var enabledEventHandlers = {\n        onClick: callAllEventHandlers(onClick, _this.buttonHandleClick),\n        onKeyDown: callAllEventHandlers(onKeyDown, _this.buttonHandleKeyDown),\n        onKeyUp: callAllEventHandlers(onKeyUp, _this.buttonHandleKeyUp),\n        onBlur: callAllEventHandlers(onBlur, _this.buttonHandleBlur)\n      };\n      var eventHandlers = rest.disabled ? {} : enabledEventHandlers;\n      return _extends({\n        type: 'button',\n        role: 'button',\n        'aria-label': isOpen ? 'close menu' : 'open menu',\n        'aria-haspopup': true,\n        'data-toggle': true\n      }, eventHandlers, rest);\n    };\n\n    _this.buttonHandleKeyUp = function (event) {\n      // Prevent click event from emitting in Firefox\n      event.preventDefault();\n    };\n\n    _this.buttonHandleKeyDown = function (event) {\n      var key = normalizeArrowKey(event);\n\n      if (_this.buttonKeyDownHandlers[key]) {\n        _this.buttonKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n      }\n    };\n\n    _this.buttonHandleClick = function (event) {\n      event.preventDefault(); // handle odd case for Safari and Firefox which\n      // don't give the button the focus properly.\n\n      /* istanbul ignore if (can't reasonably test this) */\n\n      if (_this.props.environment.document.activeElement === _this.props.environment.document.body) {\n        event.target.focus();\n      } // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n      // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n      // when building for production and should therefore have no impact on production code.\n\n\n      if (process.env.NODE_ENV === 'test') {\n        _this.toggleMenu({\n          type: clickButton\n        });\n      } else {\n        // Ensure that toggle of menu occurs after the potential blur event in iOS\n        _this.internalSetTimeout(function () {\n          return _this.toggleMenu({\n            type: clickButton\n          });\n        });\n      }\n    };\n\n    _this.buttonHandleBlur = function (event) {\n      var blurTarget = event.target; // Save blur target for comparison with activeElement later\n      // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n\n      _this.internalSetTimeout(function () {\n        if (!_this.isMouseDown && (_this.props.environment.document.activeElement == null || _this.props.environment.document.activeElement.id !== _this.inputId) && _this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n        ) {\n            _this.reset({\n              type: blurButton\n            });\n          }\n      });\n    };\n\n    _this.getLabelProps = function (props) {\n      return _extends({\n        htmlFor: _this.inputId,\n        id: _this.labelId\n      }, props);\n    };\n\n    _this.getInputProps = function (_temp4) {\n      var _ref4 = _temp4 === void 0 ? {} : _temp4,\n          onKeyDown = _ref4.onKeyDown,\n          onBlur = _ref4.onBlur,\n          onChange = _ref4.onChange,\n          onInput = _ref4.onInput,\n          onChangeText = _ref4.onChangeText,\n          rest = _objectWithoutPropertiesLoose(_ref4, [\"onKeyDown\", \"onBlur\", \"onChange\", \"onInput\", \"onChangeText\"]);\n\n      var onChangeKey;\n      var eventHandlers = {};\n      /* istanbul ignore next (preact) */\n\n      onChangeKey = 'onChange';\n\n      var _this$getState4 = _this.getState(),\n          inputValue = _this$getState4.inputValue,\n          isOpen = _this$getState4.isOpen,\n          highlightedIndex = _this$getState4.highlightedIndex;\n\n      if (!rest.disabled) {\n        var _eventHandlers;\n\n        eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, _this.inputHandleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, _this.inputHandleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, _this.inputHandleBlur), _eventHandlers);\n      }\n      /* istanbul ignore if (react-native) */\n\n\n      return _extends({\n        'aria-autocomplete': 'list',\n        'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this.getItemId(highlightedIndex) : null,\n        'aria-controls': isOpen ? _this.menuId : null,\n        'aria-labelledby': _this.labelId,\n        // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n        // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n        autoComplete: 'off',\n        value: inputValue,\n        id: _this.inputId\n      }, eventHandlers, rest);\n    };\n\n    _this.inputHandleKeyDown = function (event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && _this.inputKeyDownHandlers[key]) {\n        _this.inputKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n      }\n    };\n\n    _this.inputHandleChange = function (event) {\n      _this.internalSetState({\n        type: changeInput,\n        isOpen: true,\n        inputValue: event.target.value,\n        highlightedIndex: _this.props.defaultHighlightedIndex\n      });\n    };\n\n    _this.inputHandleTextChange\n    /* istanbul ignore next (react-native) */\n    = function (text) {\n      _this.internalSetState({\n        type: changeInput,\n        isOpen: true,\n        inputValue: text,\n        highlightedIndex: _this.props.defaultHighlightedIndex\n      });\n    };\n\n    _this.inputHandleBlur = function () {\n      // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n      _this.internalSetTimeout(function () {\n        var downshiftButtonIsActive = _this.props.environment.document && !!_this.props.environment.document.activeElement && !!_this.props.environment.document.activeElement.dataset && _this.props.environment.document.activeElement.dataset.toggle && _this._rootNode && _this._rootNode.contains(_this.props.environment.document.activeElement);\n\n        if (!_this.isMouseDown && !downshiftButtonIsActive) {\n          _this.reset({\n            type: blurInput\n          });\n        }\n      });\n    };\n\n    _this.menuRef = function (node) {\n      _this._menuNode = node;\n    };\n\n    _this.getMenuProps = function (_temp5, _temp6) {\n      var _extends3;\n\n      var _ref5 = _temp5 === void 0 ? {} : _temp5,\n          _ref5$refKey = _ref5.refKey,\n          refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n          ref = _ref5.ref,\n          props = _objectWithoutPropertiesLoose(_ref5, [\"refKey\", \"ref\"]);\n\n      var _ref6 = _temp6 === void 0 ? {} : _temp6,\n          _ref6$suppressRefErro = _ref6.suppressRefError,\n          suppressRefError = _ref6$suppressRefErro === void 0 ? false : _ref6$suppressRefErro;\n\n      _this.getMenuProps.called = true;\n      _this.getMenuProps.refKey = refKey;\n      _this.getMenuProps.suppressRefError = suppressRefError;\n      return _extends((_extends3 = {}, _extends3[refKey] = callAll(ref, _this.menuRef), _extends3.role = 'listbox', _extends3['aria-labelledby'] = props && props['aria-label'] ? null : _this.labelId, _extends3.id = _this.menuId, _extends3), props);\n    };\n\n    _this.getItemProps = function (_temp7) {\n      var _enabledEventHandlers;\n\n      var _ref7 = _temp7 === void 0 ? {} : _temp7,\n          onMouseMove = _ref7.onMouseMove,\n          onMouseDown = _ref7.onMouseDown,\n          onClick = _ref7.onClick,\n          onPress = _ref7.onPress,\n          index = _ref7.index,\n          _ref7$item = _ref7.item,\n          item = _ref7$item === void 0 ? process.env.NODE_ENV === 'production' ?\n      /* istanbul ignore next */\n      undefined : requiredProp('getItemProps', 'item') : _ref7$item,\n          rest = _objectWithoutPropertiesLoose(_ref7, [\"onMouseMove\", \"onMouseDown\", \"onClick\", \"onPress\", \"index\", \"item\"]);\n\n      if (index === undefined) {\n        _this.items.push(item);\n\n        index = _this.items.indexOf(item);\n      } else {\n        _this.items[index] = item;\n      }\n\n      var onSelectKey = 'onClick';\n      var customClickHandler = onClick;\n      var enabledEventHandlers = (_enabledEventHandlers = {\n        // onMouseMove is used over onMouseEnter here. onMouseMove\n        // is only triggered on actual mouse movement while onMouseEnter\n        // can fire on DOM changes, interrupting keyboard navigation\n        onMouseMove: callAllEventHandlers(onMouseMove, function () {\n          if (index === _this.getState().highlightedIndex) {\n            return;\n          }\n\n          _this.setHighlightedIndex(index, {\n            type: itemMouseEnter\n          }); // We never want to manually scroll when changing state based\n          // on `onMouseMove` because we will be moving the element out\n          // from under the user which is currently scrolling/moving the\n          // cursor\n\n\n          _this.avoidScrolling = true;\n\n          _this.internalSetTimeout(function () {\n            return _this.avoidScrolling = false;\n          }, 250);\n        }),\n        onMouseDown: callAllEventHandlers(onMouseDown, function (event) {\n          // This prevents the activeElement from being changed\n          // to the item so it can remain with the current activeElement\n          // which is a more common use case.\n          event.preventDefault();\n        })\n      }, _enabledEventHandlers[onSelectKey] = callAllEventHandlers(customClickHandler, function () {\n        _this.selectItemAtIndex(index, {\n          type: clickItem\n        });\n      }), _enabledEventHandlers); // Passing down the onMouseDown handler to prevent redirect\n      // of the activeElement if clicking on disabled items\n\n      var eventHandlers = rest.disabled ? {\n        onMouseDown: enabledEventHandlers.onMouseDown\n      } : enabledEventHandlers;\n      return _extends({\n        id: _this.getItemId(index),\n        role: 'option',\n        'aria-selected': _this.getState().highlightedIndex === index\n      }, eventHandlers, rest);\n    };\n\n    _this.clearItems = function () {\n      _this.items = [];\n    };\n\n    _this.reset = function (otherStateToSet, cb) {\n      if (otherStateToSet === void 0) {\n        otherStateToSet = {};\n      }\n\n      otherStateToSet = pickState(otherStateToSet);\n\n      _this.internalSetState(function (_ref8) {\n        var selectedItem = _ref8.selectedItem;\n        return _extends({\n          isOpen: _this.props.defaultIsOpen,\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          inputValue: _this.props.itemToString(selectedItem)\n        }, otherStateToSet);\n      }, cb);\n    };\n\n    _this.toggleMenu = function (otherStateToSet, cb) {\n      if (otherStateToSet === void 0) {\n        otherStateToSet = {};\n      }\n\n      otherStateToSet = pickState(otherStateToSet);\n\n      _this.internalSetState(function (_ref9) {\n        var isOpen = _ref9.isOpen;\n        return _extends({\n          isOpen: !isOpen\n        }, isOpen && {\n          highlightedIndex: _this.props.defaultHighlightedIndex\n        }, otherStateToSet);\n      }, function () {\n        var _this$getState5 = _this.getState(),\n            isOpen = _this$getState5.isOpen,\n            highlightedIndex = _this$getState5.highlightedIndex;\n\n        if (isOpen) {\n          if (_this.getItemCount() > 0 && typeof highlightedIndex === 'number') {\n            _this.setHighlightedIndex(highlightedIndex, otherStateToSet);\n          }\n        }\n\n        cbToCb(cb)();\n      });\n    };\n\n    _this.openMenu = function (cb) {\n      _this.internalSetState({\n        isOpen: true\n      }, cb);\n    };\n\n    _this.closeMenu = function (cb) {\n      _this.internalSetState({\n        isOpen: false\n      }, cb);\n    };\n\n    _this.updateStatus = debounce(function () {\n      var state = _this.getState();\n\n      var item = _this.items[state.highlightedIndex];\n\n      var resultCount = _this.getItemCount();\n\n      var status = _this.props.getA11yStatusMessage(_extends({\n        itemToString: _this.props.itemToString,\n        previousResultCount: _this.previousResultCount,\n        resultCount: resultCount,\n        highlightedItem: item\n      }, state));\n\n      _this.previousResultCount = resultCount;\n      setStatus(status);\n    }, 200);\n\n    // fancy destructuring + defaults + aliases\n    // this basically says each value of state should either be set to\n    // the initial value or the default value if the initial value is not provided\n    var _this$props = _this.props,\n        defaultHighlightedIndex = _this$props.defaultHighlightedIndex,\n        _this$props$initialHi = _this$props.initialHighlightedIndex,\n        _highlightedIndex = _this$props$initialHi === void 0 ? defaultHighlightedIndex : _this$props$initialHi,\n        defaultIsOpen = _this$props.defaultIsOpen,\n        _this$props$initialIs = _this$props.initialIsOpen,\n        _isOpen = _this$props$initialIs === void 0 ? defaultIsOpen : _this$props$initialIs,\n        _this$props$initialIn = _this$props.initialInputValue,\n        _inputValue = _this$props$initialIn === void 0 ? '' : _this$props$initialIn,\n        _this$props$initialSe = _this$props.initialSelectedItem,\n        _selectedItem = _this$props$initialSe === void 0 ? null : _this$props$initialSe;\n\n    var _state = _this.getState({\n      highlightedIndex: _highlightedIndex,\n      isOpen: _isOpen,\n      inputValue: _inputValue,\n      selectedItem: _selectedItem\n    });\n\n    if (_state.selectedItem != null && _this.props.initialInputValue === undefined) {\n      _state.inputValue = _this.props.itemToString(_state.selectedItem);\n    }\n\n    _this.state = _state;\n    return _this;\n  }\n\n  var _proto = Downshift.prototype;\n\n  /**\n   * Clear all running timeouts\n   */\n  _proto.internalClearTimeouts = function internalClearTimeouts() {\n    this.timeoutIds.forEach(function (id) {\n      clearTimeout(id);\n    });\n    this.timeoutIds = [];\n  }\n  /**\n   * Gets the state based on internal state or props\n   * If a state value is passed via props, then that\n   * is the value given, otherwise it's retrieved from\n   * stateToMerge\n   *\n   * This will perform a shallow merge of the given state object\n   * with the state coming from props\n   * (for the controlled component scenario)\n   * This is used in state updater functions so they're referencing\n   * the right state regardless of where it comes from.\n   *\n   * @param {Object} stateToMerge defaults to this.state\n   * @return {Object} the state\n   */\n  ;\n\n  _proto.getState = function getState(stateToMerge) {\n    var _this4 = this;\n\n    if (stateToMerge === void 0) {\n      stateToMerge = this.state;\n    }\n\n    return Object.keys(stateToMerge).reduce(function (state, key) {\n      state[key] = _this4.isControlledProp(key) ? _this4.props[key] : stateToMerge[key];\n      return state;\n    }, {});\n  }\n  /**\n   * This determines whether a prop is a \"controlled prop\" meaning it is\n   * state which is controlled by the outside of this component rather\n   * than within this component.\n   * @param {String} key the key to check\n   * @return {Boolean} whether it is a controlled controlled prop\n   */\n  ;\n\n  _proto.isControlledProp = function isControlledProp(key) {\n    return this.props[key] !== undefined;\n  };\n\n  _proto.getItemCount = function getItemCount() {\n    // things read better this way. They're in priority order:\n    // 1. `this.itemCount`\n    // 2. `this.props.itemCount`\n    // 3. `this.items.length`\n    var itemCount = this.items.length;\n\n    if (this.itemCount != null) {\n      itemCount = this.itemCount;\n    } else if (this.props.itemCount !== undefined) {\n      itemCount = this.props.itemCount;\n    }\n\n    return itemCount;\n  };\n\n  _proto.getItemNodeFromIndex = function getItemNodeFromIndex(index) {\n    return this.props.environment.document.getElementById(this.getItemId(index));\n  };\n\n  _proto.scrollHighlightedItemIntoView = function scrollHighlightedItemIntoView() {\n    /* istanbul ignore else (react-native) */\n    {\n      var node = this.getItemNodeFromIndex(this.getState().highlightedIndex);\n      this.props.scrollIntoView(node, this._menuNode);\n    }\n  };\n\n  _proto.moveHighlightedIndex = function moveHighlightedIndex(amount, otherStateToSet) {\n    var itemCount = this.getItemCount();\n\n    if (itemCount > 0) {\n      var nextHighlightedIndex = getNextWrappingIndex(amount, this.getState().highlightedIndex, itemCount);\n      this.setHighlightedIndex(nextHighlightedIndex, otherStateToSet);\n    }\n  };\n\n  _proto.highlightFirstOrLastIndex = function highlightFirstOrLastIndex(event, first, otherStateToSet) {\n    var itemsLastIndex = this.getItemCount() - 1;\n\n    if (itemsLastIndex < 0 || !this.getState().isOpen) {\n      return;\n    }\n\n    event.preventDefault();\n    this.setHighlightedIndex(first ? 0 : itemsLastIndex, otherStateToSet);\n  };\n\n  _proto.getStateAndHelpers = function getStateAndHelpers() {\n    var _this$getState6 = this.getState(),\n        highlightedIndex = _this$getState6.highlightedIndex,\n        inputValue = _this$getState6.inputValue,\n        selectedItem = _this$getState6.selectedItem,\n        isOpen = _this$getState6.isOpen;\n\n    var itemToString = this.props.itemToString;\n    var id = this.id;\n    var getRootProps = this.getRootProps,\n        getToggleButtonProps = this.getToggleButtonProps,\n        getLabelProps = this.getLabelProps,\n        getMenuProps = this.getMenuProps,\n        getInputProps = this.getInputProps,\n        getItemProps = this.getItemProps,\n        openMenu = this.openMenu,\n        closeMenu = this.closeMenu,\n        toggleMenu = this.toggleMenu,\n        selectItem = this.selectItem,\n        selectItemAtIndex = this.selectItemAtIndex,\n        selectHighlightedItem = this.selectHighlightedItem,\n        setHighlightedIndex = this.setHighlightedIndex,\n        clearSelection = this.clearSelection,\n        clearItems = this.clearItems,\n        reset = this.reset,\n        setItemCount = this.setItemCount,\n        unsetItemCount = this.unsetItemCount,\n        setState = this.internalSetState;\n    return {\n      // prop getters\n      getRootProps: getRootProps,\n      getToggleButtonProps: getToggleButtonProps,\n      getLabelProps: getLabelProps,\n      getMenuProps: getMenuProps,\n      getInputProps: getInputProps,\n      getItemProps: getItemProps,\n      // actions\n      reset: reset,\n      openMenu: openMenu,\n      closeMenu: closeMenu,\n      toggleMenu: toggleMenu,\n      selectItem: selectItem,\n      selectItemAtIndex: selectItemAtIndex,\n      selectHighlightedItem: selectHighlightedItem,\n      setHighlightedIndex: setHighlightedIndex,\n      clearSelection: clearSelection,\n      clearItems: clearItems,\n      setItemCount: setItemCount,\n      unsetItemCount: unsetItemCount,\n      setState: setState,\n      // props\n      itemToString: itemToString,\n      // derived\n      id: id,\n      // state\n      highlightedIndex: highlightedIndex,\n      inputValue: inputValue,\n      isOpen: isOpen,\n      selectedItem: selectedItem\n    };\n  } //////////////////////////// ROOT\n  ;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this5 = this;\n\n    /* istanbul ignore if (react-native) */\n    if (process.env.NODE_ENV !== 'production' && !false && this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n      validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n    }\n    /* istanbul ignore if (react-native) */\n\n\n    {\n      var targetWithinDownshift = function (target, checkActiveElement) {\n        if (checkActiveElement === void 0) {\n          checkActiveElement = true;\n        }\n\n        var document = _this5.props.environment.document;\n        return [_this5._rootNode, _this5._menuNode].some(function (contextNode) {\n          return contextNode && (isOrContainsNode(contextNode, target) || checkActiveElement && isOrContainsNode(contextNode, document.activeElement));\n        });\n      }; // this.isMouseDown helps us track whether the mouse is currently held down.\n      // This is useful when the user clicks on an item in the list, but holds the mouse\n      // down long enough for the list to disappear (because the blur event fires on the input)\n      // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n      // trigger hiding the menu.\n\n\n      var onMouseDown = function () {\n        _this5.isMouseDown = true;\n      };\n\n      var onMouseUp = function (event) {\n        _this5.isMouseDown = false; // if the target element or the activeElement is within a downshift node\n        // then we don't want to reset downshift\n\n        var contextWithinDownshift = targetWithinDownshift(event.target);\n\n        if (!contextWithinDownshift && _this5.getState().isOpen) {\n          _this5.reset({\n            type: mouseUp\n          }, function () {\n            return _this5.props.onOuterClick(_this5.getStateAndHelpers());\n          });\n        }\n      }; // Touching an element in iOS gives focus and hover states, but touching out of\n      // the element will remove hover, and persist the focus state, resulting in the\n      // blur event not being triggered.\n      // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n      // If the user taps outside of Downshift, the component should be reset,\n      // but not if the user is swiping\n\n\n      var onTouchStart = function () {\n        _this5.isTouchMove = false;\n      };\n\n      var onTouchMove = function () {\n        _this5.isTouchMove = true;\n      };\n\n      var onTouchEnd = function (event) {\n        var contextWithinDownshift = targetWithinDownshift(event.target, false);\n\n        if (!_this5.isTouchMove && !contextWithinDownshift && _this5.getState().isOpen) {\n          _this5.reset({\n            type: touchEnd\n          }, function () {\n            return _this5.props.onOuterClick(_this5.getStateAndHelpers());\n          });\n        }\n      };\n\n      this.props.environment.addEventListener('mousedown', onMouseDown);\n      this.props.environment.addEventListener('mouseup', onMouseUp);\n      this.props.environment.addEventListener('touchstart', onTouchStart);\n      this.props.environment.addEventListener('touchmove', onTouchMove);\n      this.props.environment.addEventListener('touchend', onTouchEnd);\n\n      this.cleanup = function () {\n        _this5.internalClearTimeouts();\n\n        _this5.updateStatus.cancel();\n\n        _this5.props.environment.removeEventListener('mousedown', onMouseDown);\n\n        _this5.props.environment.removeEventListener('mouseup', onMouseUp);\n\n        _this5.props.environment.removeEventListener('touchstart', onTouchStart);\n\n        _this5.props.environment.removeEventListener('touchmove', onTouchMove);\n\n        _this5.props.environment.removeEventListener('touchend', onTouchEnd);\n      };\n    }\n  };\n\n  _proto.shouldScroll = function shouldScroll(prevState, prevProps) {\n    var _ref10 = this.props.highlightedIndex === undefined ? this.getState() : this.props,\n        currentHighlightedIndex = _ref10.highlightedIndex;\n\n    var _ref11 = prevProps.highlightedIndex === undefined ? prevState : prevProps,\n        prevHighlightedIndex = _ref11.highlightedIndex;\n\n    var scrollWhenOpen = currentHighlightedIndex && this.getState().isOpen && !prevState.isOpen;\n    return scrollWhenOpen || currentHighlightedIndex !== prevHighlightedIndex;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateControlledUnchanged(prevProps, this.props);\n      /* istanbul ignore if (react-native) */\n\n      if (this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n        validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n      }\n    }\n\n    if (this.isControlledProp('selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n      this.internalSetState({\n        type: controlledPropUpdatedSelectedItem,\n        inputValue: this.props.itemToString(this.props.selectedItem)\n      });\n    }\n\n    if (!this.avoidScrolling && this.shouldScroll(prevState, prevProps)) {\n      this.scrollHighlightedItemIntoView();\n    }\n    /* istanbul ignore else (react-native) */\n\n\n    this.updateStatus();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cleanup(); // avoids memory leak\n  };\n\n  _proto.render = function render() {\n    var children = unwrapArray(this.props.children, noop); // because the items are rerendered every time we call the children\n    // we clear this out each render and it will be populated again as\n    // getItemProps is called.\n\n    this.clearItems(); // we reset this so we know whether the user calls getRootProps during\n    // this render. If they do then we don't need to do anything,\n    // if they don't then we need to clone the element they return and\n    // apply the props for them.\n\n    this.getRootProps.called = false;\n    this.getRootProps.refKey = undefined;\n    this.getRootProps.suppressRefError = undefined; // we do something similar for getMenuProps\n\n    this.getMenuProps.called = false;\n    this.getMenuProps.refKey = undefined;\n    this.getMenuProps.suppressRefError = undefined; // we do something similar for getLabelProps\n\n    this.getLabelProps.called = false; // and something similar for getInputProps\n\n    this.getInputProps.called = false;\n    var element = unwrapArray(children(this.getStateAndHelpers()));\n\n    if (!element) {\n      return null;\n    }\n\n    if (this.getRootProps.called || this.props.suppressRefError) {\n      if (process.env.NODE_ENV !== 'production' && !this.getRootProps.suppressRefError && !this.props.suppressRefError) {\n        validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n      }\n\n      return element;\n    } else if (isDOMElement(element)) {\n      // they didn't apply the root props, but we can clone\n      // this and apply the props ourselves\n      return React__default.cloneElement(element, this.getRootProps(getElementProps(element)));\n    }\n    /* istanbul ignore else */\n\n\n    if (process.env.NODE_ENV !== 'production') {\n      // they didn't apply the root props, but they need to\n      // otherwise we can't query around the autocomplete\n      throw new Error('downshift: If you return a non-DOM element, you must use apply the getRootProps function');\n    }\n    /* istanbul ignore next */\n\n\n    return undefined;\n  };\n\n  return Downshift;\n}(React.Component);\n\nDownshift.defaultProps = {\n  defaultHighlightedIndex: null,\n  defaultIsOpen: false,\n  getA11yStatusMessage: getA11yStatusMessage,\n  itemToString: function itemToString(i) {\n    if (i == null) {\n      return '';\n    }\n\n    if (process.env.NODE_ENV !== 'production' && isPlainObject(i) && !i.hasOwnProperty('toString')) {\n      // eslint-disable-next-line no-console\n      console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n    }\n\n    return String(i);\n  },\n  onStateChange: noop,\n  onInputValueChange: noop,\n  onUserAction: noop,\n  onChange: noop,\n  onSelect: noop,\n  onOuterClick: noop,\n  selectedItemChanged: function selectedItemChanged(prevItem, item) {\n    return prevItem !== item;\n  },\n  environment: typeof window === 'undefined'\n  /* istanbul ignore next (ssr) */\n  ? {} : window,\n  stateReducer: function stateReducer(state, stateToSet) {\n    return stateToSet;\n  },\n  suppressRefError: false,\n  scrollIntoView: scrollIntoView\n};\nDownshift.stateChangeTypes = stateChangeTypes;\nprocess.env.NODE_ENV !== \"production\" ? Downshift.propTypes = {\n  children: PropTypes.func,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultIsOpen: PropTypes.bool,\n  initialHighlightedIndex: PropTypes.number,\n  initialSelectedItem: PropTypes.any,\n  initialInputValue: PropTypes.string,\n  initialIsOpen: PropTypes.bool,\n  getA11yStatusMessage: PropTypes.func,\n  itemToString: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  onUserAction: PropTypes.func,\n  onOuterClick: PropTypes.func,\n  selectedItemChanged: PropTypes.func,\n  stateReducer: PropTypes.func,\n  itemCount: PropTypes.number,\n  id: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  }),\n  suppressRefError: PropTypes.bool,\n  scrollIntoView: PropTypes.func,\n  // things we keep in state for uncontrolled components\n  // but can accept as props for controlled components\n\n  /* eslint-disable react/no-unused-prop-types */\n  selectedItem: PropTypes.any,\n  isOpen: PropTypes.bool,\n  inputValue: PropTypes.string,\n  highlightedIndex: PropTypes.number,\n  labelId: PropTypes.string,\n  inputId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func\n  /* eslint-enable react/no-unused-prop-types */\n\n} : void 0;\n\nfunction validateGetMenuPropsCalledCorrectly(node, _ref12) {\n  var refKey = _ref12.refKey;\n\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: The ref prop \\\"\" + refKey + \"\\\" from getMenuProps was not applied correctly on your menu element.\");\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, _ref13) {\n  var refKey = _ref13.refKey;\n  var refKeySpecified = refKey !== 'ref';\n  var isComposite = !isDOMElement(element);\n\n  if (isComposite && !refKeySpecified && !reactIs.isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \\\"\" + refKey + \"\\\"\");\n  }\n\n  if (!reactIs.isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You must apply the ref prop \\\"\" + refKey + \"\\\" from getRootProps onto your root element.\");\n  }\n}\n\nfunction validateControlledUnchanged(prevProps, nextProps) {\n  var warningDescription = \"This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props\";\n  ['selectedItem', 'isOpen', 'inputValue', 'highlightedIndex'].forEach(function (propKey) {\n    if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.error(\"downshift: A component has changed the controlled prop \\\"\" + propKey + \"\\\" to be uncontrolled. \" + warningDescription);\n    } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {\n      // eslint-disable-next-line no-console\n      console.error(\"downshift: A component has changed the uncontrolled prop \\\"\" + propKey + \"\\\" to be controlled. \" + warningDescription);\n    }\n  });\n}\n\nexports.default = Downshift;\nexports.resetIdCounter = resetIdCounter;\n"],"sourceRoot":""}