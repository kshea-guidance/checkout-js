{"version":3,"sources":["webpack://checkout/../src/backend.ts","webpack://checkout/../src/client.ts","webpack://checkout/../src/eventbuilder.ts","webpack://checkout/../src/exports.ts","webpack://checkout/../src/helpers.ts","webpack://checkout/../src/index.ts","webpack://checkout/../src/integrations/breadcrumbs.ts","webpack://checkout/../src/integrations/globalhandlers.ts","webpack://checkout/../src/integrations/index.ts","webpack://checkout/../src/integrations/linkederrors.ts","webpack://checkout/../src/integrations/trycatch.ts","webpack://checkout/../src/integrations/useragent.ts","webpack://checkout/../src/parsers.ts","webpack://checkout/../src/sdk.ts","webpack://checkout/../src/tracekit.ts","webpack://checkout/../src/transports/base.ts","webpack://checkout/../src/transports/fetch.ts","webpack://checkout/../src/transports/index.ts","webpack://checkout/../src/transports/xhr.ts","webpack://checkout/../src/version.ts","webpack://checkout/../src/api.ts","webpack://checkout/../src/basebackend.ts","webpack://checkout/../src/baseclient.ts","webpack://checkout/../src/integration.ts","webpack://checkout/../src/integrations/functiontostring.ts","webpack://checkout/../src/integrations/inboundfilters.ts","webpack://checkout/../src/request.ts","webpack://checkout/../src/transports/noop.ts","webpack://checkout/../src/hub.ts","webpack://checkout/../src/scope.ts","webpack://checkout/../src/session.ts","webpack://checkout/../src/angular.ts","webpack://checkout/../src/captureconsole.ts","webpack://checkout/../src/debug.ts","webpack://checkout/../src/dedupe.ts","webpack://checkout/../src/ember.ts","webpack://checkout/../src/extraerrordata.ts","webpack://checkout/../src/offline.ts","webpack://checkout/../src/reportingobserver.ts","webpack://checkout/../src/rewriteframes.ts","webpack://checkout/../src/sessiontiming.ts","webpack://checkout/../src/transaction.ts","webpack://checkout/../src/vue.ts","webpack://checkout/../src/loglevel.ts","webpack://checkout/../src/severity.ts","webpack://checkout/../src/status.ts","webpack://checkout/../src/async.ts","webpack://checkout/../src/browser.ts","webpack://checkout/../src/dsn.ts","webpack://checkout/../src/error.ts","webpack://checkout/../src/instrument.ts","webpack://checkout/../src/is.ts","webpack://checkout/../src/logger.ts","webpack://checkout/../src/memo.ts","webpack://checkout/../src/misc.ts","webpack://checkout/../src/node.ts","webpack://checkout/../src/object.ts","webpack://checkout/../src/path.ts","webpack://checkout/../src/polyfill.ts","webpack://checkout/../src/promisebuffer.ts","webpack://checkout/../src/stacktrace.ts","webpack://checkout/../src/string.ts","webpack://checkout/../src/supports.ts","webpack://checkout/../src/syncpromise.ts","webpack://checkout/../src/time.ts"],"names":["eventFromException","exception","hint","this","_options","eventFromMessage","message","level","Severity","Info","_setupTransport","dsn","transportOptions","transport","supportsFetch","FetchTransport","XHRTransport","BaseBackend","BrowserBackend","options","showReportDialog","getGlobalObject","document","_isEnabled","injectReportDialog","getDsn","logger","error","_prepareEvent","event","scope","platform","sdk","name","SDK_NAME","packages","version","SDK_VERSION","_sendEvent","integration","getIntegration","Breadcrumbs","addSentryBreadcrumb","BaseClient","BrowserClient","eventFromUnknownInput","syntheticException","isErrorEvent","eventFromStacktrace","computeStackTrace","isDOMError","isDOMException","domException","eventFromString","addExceptionTypeValue","tags","code","isError","isPlainObject","isEvent","objectException","eventFromPlainObject","rejection","addExceptionMechanism","synthetic","undefined","input","attachStacktrace","stacktrace","prepareFramesForEvent","stack","frames","handled","type","Error","event_id","SyncPromise","resolve","Status","addGlobalEventProcessor","addBreadcrumb","captureException","captureEvent","captureMessage","configureScope","getHubFromCarrier","getCurrentHub","Hub","makeMain","Scope","startTransaction","setContext","setExtra","setExtras","setTag","setTags","setUser","withScope","defaultIntegrations","forceLoad","init","lastEventId","onLoad","flush","close","wrap","ignoreOnError","ignoreNextOnError","setTimeout","fn","before","__sentry__","__sentry_wrapped__","e","sentryWrapped","args","Array","prototype","slice","call","arguments","apply","wrappedArguments","map","arg","handleEvent","ex","addEventProcessor","processedEvent","mechanism","extra","property","Object","hasOwnProperty","_oO","defineProperty","enumerable","value","defineProperties","__sentry_original__","getOwnPropertyDescriptor","configurable","get","eventId","script","createElement","async","src","API","getReportDialogEndpoint","onload","head","body","appendChild","Transports","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS","BrowserIntegrations","id","console","dom","fetch","history","sentry","xhr","category","getEventDescription","setupOnce","addInstrumentationHandler","callback","_consoleBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","handlerData","breadcrumb","data","fromString","safeJoin","target","htmlTreeAsString","length","endTimestamp","__sentry_own_request__","method","url","status_code","fetchData","match","response","status","global","from","to","parsedLoc","parseUrl","location","href","parsedFrom","parsedTo","path","protocol","host","relative","GlobalHandlers","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","log","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","currentHub","hasIntegration","isFailedOwnDelivery","shouldIgnoreOnError","client","getClient","isPrimitive","_eventFromIncompleteOnError","msg","line","column","_enhanceEventWithInitialFrame","getOptions","originalException","reason","detail","_eventFromIncompleteRejection","isString","groups","values","colno","isNaN","parseInt","lineno","filename","getLocationHref","push","function","in_app","TryCatch","LinkedErrors","UserAgent","DEFAULT_KEY","DEFAULT_LIMIT","_key","key","_limit","limit","self","_handler","isInstanceOf","linkedErrors","_walkErrorTree","exceptionFromStacktrace","DEFAULT_EVENT_TARGET","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","fill","_wrapTimeFunction","bind","_wrapRAF","_wrapXHR","isArray","forEach","_wrapEventTarget","original","originalCallback","getFunctionName","handler","proto","eventName","err","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","originalSend","xmlHttpRequestProps","prop","wrapOptions","navigator","request","referrer","userAgent","headers","Referer","STACKTRACE_LIMIT","localStack","firstFrameFunction","func","lastFrameFunction","indexOf","frame","reverse","constructor","extractExceptionKeysForMessage","__serialized__","normalizeToSize","InboundFilters","FunctionToString","release","SENTRY_RELEASE","autoSessionTracking","initAndBind","window","hub","loadResolved","readyState","fcpResolved","possiblyEndSession","endSession","startSession","addEventListener","resolveWindowLoaded","removeEventListener","po","PerformanceObserver","entryList","getEntries","entry","startTime","disconnect","visibilityState","Infinity","Math","min","timeStamp","once","observe","buffered","startSessionTracking","timeout","reject","UNKNOWN_FUNCTION","chrome","gecko","winjs","geckoEval","chromeEval","reactMinifiedRegexp","popFrames","popSize","extractMessage","framesToPop","test","parts","opera10Regex","opera11Regex","lines","split","element","exec","computeStackTraceFromStacktraceProp","submatch","i","isNative","substr","columnNumber","computeStackTraceFromStackProp","failed","_buffer","PromiseBuffer","_rateLimits","_api","getStoreEndpointWithUrlEncodedAuth","sendEvent","_","SentryError","drain","_handleResponse","requestType","fromHttpCode","_handleRateLimit","warn","_disabledUntil","Success","all","_isRateLimited","Date","now","rlHeader","raHeader","trim","parameters","headerDelay","delay","parseRetryAfterHeader","BaseTransport","_sendRequest","eventToSentryRequest","sendSession","session","sessionToSentryRequest","sentryRequest","originalPayload","Promise","referrerPolicy","supportsReferrerPolicy","fetchParameters","assign","add","then","catch","header","onreadystatechange","getResponseHeader","open","setRequestHeader","send","_dsnObject","Dsn","getBaseApiEndpoint","port","getStoreEndpoint","_getIngestEndpoint","_encodedAuth","getEnvelopeEndpointWithUrlEncodedAuth","_getEnvelopeEndpoint","getStoreEndpointPath","projectId","getRequestHeaders","clientName","clientVersion","user","pass","join","dialogOptions","endpoint","encodedOptions","toString","encodeURIComponent","email","auth","sentry_key","sentry_version","urlEncode","_transport","_exception","_hint","_message","_level","getTransport","NoopTransport","backendClass","_integrations","_processing","_backend","_dsn","_process","_getBackend","_captureEvent","result","promisedEvent","captureSession","_sendSession","_isClientProcessing","ready","transportFlushed","enabled","setupIntegrations","_updateSessionFromEvent","crashed","errored","exceptions","toLowerCase","update","SessionStatus","Crashed","errors","Number","ticked","interval","clearInterval","normalizeDepth","prepared","uuid4","timestamp","dateTimestampInSeconds","_applyClientOptions","_applyIntegrationsMetadata","finalScope","captureContext","clone","applyToEvent","evt","_normalizeEvent","depth","normalized","breadcrumbs","b","normalize","contexts","trace","environment","dist","maxValueLength","truncate","sdkInfo","integrationsArray","keys","integrations","_processEvent","finalEvent","beforeSend","sampleRate","isTransaction","random","beforeSendResult","isThenable","getSession","promise","getIntegrationsToSetup","userIntegrations","defaultIntegration","userIntegration","integrationsNames","splice","setupIntegration","installedIntegrations","originalFunctionToString","Function","context","DEFAULT_IGNORE_ERRORS","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","pattern","isMatchingPattern","denyUrls","allowUrls","whitelistUrls","blacklistUrls","oO","api","JSON","stringify","sent_at","toISOString","useEnvelope","req","envelope","Skipped","API_VERSION","_version","_stack","getStackTop","bindClient","isOlderThan","pushScope","getScope","getStack","popScope","pop","_lastEventId","finalHint","_invokeClient","beforeBreadcrumb","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","consoleSandbox","extras","run","oldHub","startSpan","_callExtensionMethod","customSamplingContext","traceHeaders","Session","getUser","setSession","carrier","getMainCarrier","__SENTRY__","extensions","registry","setHubOnCarrier","getActiveDomain","domain","active","hasHubOnCarrier","isNodeEnv","activeDomain","registryHubTopStack","_Oo","getHubFromActiveDomain","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","newScope","_span","_session","_transactionName","_fingerprint","addScopeListener","_notifyScopeListeners","setFingerprint","fingerprint","setLevel","setTransactionName","setTransaction","setSpan","span","getSpan","getTransaction","transaction","spanRecorder","spans","updatedScope","clear","clearBreadcrumbs","getTraceContext","transactionName","_applyFingerprint","_notifyEventProcessors","getGlobalEventProcessors","processors","index","processor","final","concat","globalEventProcessors","sid","started","duration","Ok","ip_address","ipAddress","did","username","Exited","toJSON","dropUndefinedKeys","attrs","user_agent","angularPattern","Angular","_angular","angular","_module","module","moduleName","_getCurrentHub","config","$provide","decorator","_$exceptionHandlerDecorator","$delegate","cause","matches","angularDocs","CaptureConsole","_levels","levels","originalConsoleLevel","Debug","debugger","Dedupe","currentEvent","_previousEvent","previousEvent","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_getFramesFromEvent","currentFrames","previousFrames","frameA","frameB","_getExceptionFromEvent","previousException","currentException","currentFingerprint","previousFingerprint","Ember","_Ember","oldOnError","testing","RSVP","on","ExtraErrorData","enhanceEventWithErrorData","errorData","_extractErrorData","normalizedErrorData","errorKeys","getOwnPropertyNames","filter","extraErrorInfo","localForage","Offline","maxStoredEvents","offlineEventStore","createInstance","_sendEvents","onLine","_cacheEvent","_event","_error","setItem","_enforceMaxEvents","events","iterate","cacheKey","_index","_purgeEvents","sort","a","_purgeEvent","removeItem","cacheKeys","ReportTypes","types","Crash","Deprecation","Intervention","ReportingObserver","supportsReportingObserver","reports","report","label","details","plainBody","crashId","RewriteFrames","_iteratee","isWindowsFrame","startsWithSlash","replace","base","_root","basename","root","iteratee","process","_processExceptionsEvent","_processStacktraceEvent","_processStacktrace","f","SessionTiming","_startTime","Transaction","_getTransaction","TRACING_GETTER","BROWSER_TRACING_GETTER","HOOKS","activate","create","destroy","mount","COMPONENT_NAME_REGEXP","ROOT_COMPONENT_NAME","Vue","_componentsCache","_applyTracingHooks","vm","$options","$_sentryPerfHook","_getComponentName","rootMount","rootHandler","hook","timestampWithMs","_rootSpan","_finishRootSpan","$once","tracingIntegration","_tracingActivity","pushActivity","startChild","description","op","activeTransaction","getActiveTransaction","childHandler","operation","shouldTrack","tracingOptions","trackComponents","finish","hooks","internalHooks","internalHook","currentValue","attachProps","logErrors","tracing","_attachErrorHandler","_startTracing","$root","_componentTag","__file","unifiedFile","c","toUpperCase","_rootSpanTimer","clearTimeout","popActivity","applyTracingHooks","mixin","beforeCreate","currentErrorHandler","errorHandler","info","metadata","componentName","propsData","lifecycleHook","util","LogLevel","Warning","Fatal","Critical","Log","RateLimit","Invalid","Failed","Unknown","_htmlElementAsString","el","className","classes","attr","elem","out","tagName","allowedAttrs","getAttribute","currentElem","height","len","sepLength","nextStr","parentNode","DSN_REGEX","_fromString","_fromComponents","_validate","withPassword","str","projectMatch","components","component","ERROR_MESSAGE","setPrototypeOf","lastHref","handlers","instrumented","instrument","triggerHandlers","instrumentConsole","domEventHandler","keypressEventHandler","innerOriginal","instrumentDOM","requestKeys","requestValues","xhrproto","originalOpen","__sentry_xhr__","onreadystatechangeHandler","requestPos","startTimestamp","readyStateArgs","instrumentXHR","supportsNativeFetch","originalFetch","getFetchMethod","getFetchUrl","instrumentFetch","supportsHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","String","instrumentHistory","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","fetchArgs","Request","keypressTimeout","lastCapturedEvent","debounceDuration","debounceTimer","debounce","isContentEditable","wat","_e","Event","Element","Boolean","PREFIX","_enabled","disable","enable","Logger","_hasWeakSet","WeakSet","_inner","memoize","obj","has","unmemoize","delete","Memo","fallbackGlobalObject","g","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","r","query","fragment","originalConsole","wrappedLevels","SEMVER_REGEXP","major","minor","patch","buildmetadata","prerelease","defaultRetryAfter","headerDate","parse","linesOfContext","maxLines","sourceLine","max","pre_context","snipLine","context_line","post_context","urlPath","dynamicRequire","mod","require","DEFAULT_REQUEST_KEYS","requestData","hostname","secure","socket","encrypted","originalUrl","absoluteUrl","cookies","cookie","query_string","getWalkSource","source","isElement","currentTarget","CustomEvent","jsonSize","encodeURI","utf8Length","normalizeValue","_events","isSyntheticEvent","walk","memo","serializeValue","acc","innerKey","replacement","wrapped","object","maxSize","serialized","maxLength","includedKeys","val","rv","normalizeArray","allowAboveRoot","up","last","unshift","splitPathRe","splitPath","resolvedPath","resolvedAbsolute","charAt","p","start","end","normalizePath","isPathAbsolute","isAbsolute","trailingSlash","normalizedPath","fromParts","toParts","samePartsLength","outputParts","dir","ext","__proto__","isReady","task","remove","capturedSetTimeout","defaultFunctionName","newLine","ll","delimiter","output","isRegExp","Headers","Response","isNativeFetch","ErrorEvent","DOMError","DOMException","doc","sandbox","hidden","contentWindow","removeChild","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","States","executor","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","REJECTED","state","_value","_executeHandlers","_attachHandler","cachedHandlers","done","onfulfilled","onrejected","collection","counter","resolvedCollection","item","TypeError","finally","onfinally","isRejected","dateTimestampSource","nowSeconds","platformPerformance","performance","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","timestampInSeconds","usingPerformanceAPI","browserPerformanceTimeOrigin","timing","navigationStart"],"mappings":"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","file":"35-3708ed88.js","sourcesContent":["import { BaseBackend } from '@sentry/core';\nimport { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { supportsFetch } from '@sentry/utils';\n\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see BrowserClient for more information.\n */\nexport interface BrowserOptions extends Options {\n  /**\n   * A pattern for error URLs which should exclusively be sent to Sentry.\n   * This is the opposite of {@link Options.denyUrls}.\n   * By default, all errors will be sent.\n   */\n  allowUrls?: Array<string | RegExp>;\n\n  /**\n   * A pattern for error URLs which should not be sent to Sentry.\n   * To allow certain errors instead, use {@link Options.allowUrls}.\n   * By default, all errors will be sent.\n   */\n  denyUrls?: Array<string | RegExp>;\n\n  /** @deprecated use {@link Options.allowUrls} instead. */\n  whitelistUrls?: Array<string | RegExp>;\n\n  /** @deprecated use {@link Options.denyUrls} instead. */\n  blacklistUrls?: Array<string | RegExp>;\n\n  /**\n   * A flag enabling Sessions Tracking feature.\n   * By default Sessions Tracking is disabled.\n   */\n  autoSessionTracking?: boolean;\n}\n\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nexport class BrowserBackend extends BaseBackend<BrowserOptions> {\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options, exception, hint);\n  }\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(message: string, level: Severity = Severity.Info, hint?: EventHint): PromiseLike<Event> {\n    return eventFromMessage(this._options, message, level, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _setupTransport(): Transport {\n    if (!this._options.dsn) {\n      // We return the noop transport here in case there is no Dsn.\n      return super._setupTransport();\n    }\n\n    const transportOptions = {\n      ...this._options.transportOptions,\n      dsn: this._options.dsn,\n    };\n\n    if (this._options.transport) {\n      return new this._options.transport(transportOptions);\n    }\n    if (supportsFetch()) {\n      return new FetchTransport(transportOptions);\n    }\n    return new XHRTransport(transportOptions);\n  }\n}\n","import { BaseClient, Scope } from '@sentry/core';\nimport { Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { injectReportDialog, ReportDialogOptions } from './helpers';\nimport { Breadcrumbs } from './integrations';\nimport { SDK_NAME, SDK_VERSION } from './version';\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client disabled');\n      return;\n    }\n\n    injectReportDialog({\n      ...options,\n      dsn: options.dsn || this.getDsn(),\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    event.sdk = {\n      ...event.sdk,\n      name: SDK_NAME,\n      packages: [\n        ...((event.sdk && event.sdk.packages) || []),\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _sendEvent(event: Event): void {\n    const integration = this.getIntegration(Breadcrumbs);\n    if (integration) {\n      integration.addSentryBreadcrumb(event);\n    }\n    super._sendEvent(event);\n  }\n}\n","import { Event, EventHint, Options, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isPlainObject,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nexport function eventFromException(options: Options, exception: unknown, hint?: EventHint): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(exception, syntheticException, {\n    attachStacktrace: options.attachStacktrace,\n  });\n  addExceptionMechanism(event, {\n    handled: true,\n    type: 'generic',\n  });\n  event.level = Severity.Error;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return SyncPromise.resolve(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  options: Options,\n  message: string,\n  level: Severity = Severity.Info,\n  hint?: EventHint,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(message, syntheticException, {\n    attachStacktrace: options.attachStacktrace,\n  });\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return SyncPromise.resolve(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  exception: unknown,\n  syntheticException?: Error,\n  options: {\n    rejection?: boolean;\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    // eslint-disable-next-line no-param-reassign\n    exception = errorEvent.error;\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n    // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n    // then we just extract the name, code, and message, as they don't provide anything else\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n    const domException = exception as DOMException;\n    const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n    const message = domException.message ? `${name}: ${domException.message}` : name;\n\n    event = eventFromString(message, syntheticException, options);\n    addExceptionTypeValue(event, message);\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception as Error)) {\n    // we have a real Error object, do nothing\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it is plain Object or Event, serialize it manually and extract options\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(exception as string, syntheticException, options);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  input: string,\n  syntheticException?: Error,\n  options: {\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  const event: Event = {\n    message: input,\n  };\n\n  if (options.attachStacktrace && syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n","export {\n  Breadcrumb,\n  BreadcrumbHint,\n  Request,\n  SdkInfo,\n  Event,\n  EventHint,\n  Exception,\n  Response,\n  Severity,\n  StackFrame,\n  Stacktrace,\n  Status,\n  Thread,\n  User,\n} from '@sentry/types';\n\nexport {\n  addGlobalEventProcessor,\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  getHubFromCarrier,\n  getCurrentHub,\n  Hub,\n  makeMain,\n  Scope,\n  startTransaction,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  withScope,\n} from '@sentry/core';\n\nexport { BrowserOptions } from './backend';\nexport { BrowserClient } from './client';\nexport { injectReportDialog, ReportDialogOptions } from './helpers';\nexport { eventFromException, eventFromMessage } from './eventbuilder';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\n","import { API, captureException, withScope } from '@sentry/core';\nimport { DsnLike, Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, logger } from '@sentry/utils';\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: args,\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    logger.error(`Missing eventId option in showReportDialog call`);\n    return;\n  }\n  if (!options.dsn) {\n    logger.error(`Missing dsn option in showReportDialog call`);\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.async = true;\n  script.src = new API(options.dsn).getReportDialogEndpoint(options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  (document.head || document.body).appendChild(script);\n}\n","export * from './exports';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nconst _window = getGlobalObject<Window>();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Transports };\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable max-lines */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport {\n  addInstrumentationHandler,\n  getEventDescription,\n  getGlobalObject,\n  htmlTreeAsString,\n  parseUrl,\n  safeJoin,\n} from '@sentry/utils';\n\n/** JSDoc */\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom: boolean;\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Breadcrumbs';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /** JSDoc */\n  private readonly _options: BreadcrumbsOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<BreadcrumbsOptions>) {\n    this._options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Create a breadcrumb of `sentry` from the events themselves\n   */\n  public addSentryBreadcrumb(event: Event): void {\n    if (!this._options.sentry) {\n      return;\n    }\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this._options.console) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._consoleBreadcrumb(...args);\n        },\n        type: 'console',\n      });\n    }\n    if (this._options.dom) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._domBreadcrumb(...args);\n        },\n        type: 'dom',\n      });\n    }\n    if (this._options.xhr) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._xhrBreadcrumb(...args);\n        },\n        type: 'xhr',\n      });\n    }\n    if (this._options.fetch) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._fetchBreadcrumb(...args);\n        },\n        type: 'fetch',\n      });\n    }\n    if (this._options.history) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._historyBreadcrumb(...args);\n        },\n        type: 'history',\n      });\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from console API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _consoleBreadcrumb(handlerData: { [key: string]: any }): void {\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: Severity.fromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    getCurrentHub().addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  }\n\n  /**\n   * Creates breadcrumbs from DOM API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _domBreadcrumb(handlerData: { [key: string]: any }): void {\n    let target;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target as Node)\n        : htmlTreeAsString((handlerData.event as unknown) as Node);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n      },\n    );\n  }\n\n  /**\n   * Creates breadcrumbs from XHR API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _xhrBreadcrumb(handlerData: { [key: string]: any }): void {\n    if (handlerData.endTimestamp) {\n      // We only capture complete, non-sentry requests\n      if (handlerData.xhr.__sentry_own_request__) {\n        return;\n      }\n\n      const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'xhr',\n          data: {\n            method,\n            url,\n            status_code,\n          },\n          type: 'http',\n        },\n        {\n          xhr: handlerData.xhr,\n          input: body,\n        },\n      );\n\n      return;\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from fetch API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _fetchBreadcrumb(handlerData: { [key: string]: any }): void {\n    // We only capture complete fetch requests\n    if (!handlerData.endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: handlerData.fetchData,\n          level: Severity.Error,\n          type: 'http',\n        },\n        {\n          data: handlerData.error,\n          input: handlerData.args,\n        },\n      );\n    } else {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: {\n            ...handlerData.fetchData,\n            status_code: handlerData.response.status,\n          },\n          type: 'http',\n        },\n        {\n          input: handlerData.args,\n          response: handlerData.response,\n        },\n      );\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from history API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _historyBreadcrumb(handlerData: { [key: string]: any }): void {\n    const global = getGlobalObject<Window>();\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(global.location.href);\n    let parsedFrom = parseUrl(from);\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    getCurrentHub().addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\n/** JSDoc */\ninterface GlobalHandlersIntegrations {\n  onerror: boolean;\n  onunhandledrejection: boolean;\n}\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /** JSDoc */\n  private _onErrorHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  private _onUnhandledRejectionHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      this._installGlobalOnErrorHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      this._installGlobalOnUnhandledRejectionHandler();\n    }\n  }\n\n  /** JSDoc */\n  private _installGlobalOnErrorHandler(): void {\n    if (this._onErrorHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (data: { msg: any; url: any; line: any; column: any; error: any }) => {\n        const error = data.error;\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return;\n        }\n\n        const client = currentHub.getClient();\n        const event = isPrimitive(error)\n          ? this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column)\n          : this._enhanceEventWithInitialFrame(\n              eventFromUnknownInput(error, undefined, {\n                attachStacktrace: client && client.getOptions().attachStacktrace,\n                rejection: false,\n              }),\n              data.url,\n              data.line,\n              data.column,\n            );\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onerror',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n      },\n      type: 'error',\n    });\n\n    this._onErrorHandlerInstalled = true;\n  }\n\n  /** JSDoc */\n  private _installGlobalOnUnhandledRejectionHandler(): void {\n    if (this._onUnhandledRejectionHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (e: any) => {\n        let error = e;\n\n        // dig the object of the rejection out of known event types\n        try {\n          // PromiseRejectionEvents store the object of the rejection under 'reason'\n          // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n          if ('reason' in e) {\n            error = e.reason;\n          }\n          // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n          // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n          // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n          // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n          // https://github.com/getsentry/sentry-javascript/issues/2380\n          else if ('detail' in e && 'reason' in e.detail) {\n            error = e.detail.reason;\n          }\n        } catch (_oO) {\n          // no-empty\n        }\n\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return true;\n        }\n\n        const client = currentHub.getClient();\n        const event = isPrimitive(error)\n          ? this._eventFromIncompleteRejection(error)\n          : eventFromUnknownInput(error, undefined, {\n              attachStacktrace: client && client.getOptions().attachStacktrace,\n              rejection: true,\n            });\n\n        event.level = Severity.Error;\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onunhandledrejection',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n\n        return;\n      },\n      type: 'unhandledrejection',\n    });\n\n    this._onUnhandledRejectionHandlerInstalled = true;\n  }\n\n  /**\n   * This function creates a stack from an old, error-less onerror handler.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n    const ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n    // If 'message' is ErrorEvent, get real message from inside\n    let message = isErrorEvent(msg) ? msg.message : msg;\n    let name;\n\n    if (isString(message)) {\n      const groups = message.match(ERROR_TYPES_RE);\n      if (groups) {\n        name = groups[1];\n        message = groups[2];\n      }\n    }\n\n    const event = {\n      exception: {\n        values: [\n          {\n            type: name || 'Error',\n            value: message,\n          },\n        ],\n      },\n    };\n\n    return this._enhanceEventWithInitialFrame(event, url, line, column);\n  }\n\n  /**\n   * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _eventFromIncompleteRejection(error: any): Event {\n    return {\n      exception: {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            value: `Non-Error promise rejection captured with value: ${error}`,\n          },\n        ],\n      },\n    };\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n    event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n\n    const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n    if (event.exception.values[0].stacktrace.frames.length === 0) {\n      event.exception.values[0].stacktrace.frames.push({\n        colno,\n        filename,\n        function: '?',\n        in_app: true,\n        lineno,\n      });\n    }\n\n    return event;\n  }\n}\n","export { GlobalHandlers } from './globalhandlers';\nexport { TryCatch } from './trycatch';\nexport { Breadcrumbs } from './breadcrumbs';\nexport { LinkedErrors } from './linkederrors';\nexport { UserAgent } from './useragent';\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        return self._handler(event, hint);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): Event | null {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return event;\n    }\n    const linkedErrors = this._walkErrorTree(hint.originalException as ExtendedError, this._key);\n    event.exception.values = [...linkedErrors, ...event.exception.values];\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Exception[] {\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    const stacktrace = computeStackTrace(error[key]);\n    const exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, [exception, ...stack]);\n  }\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\n/** JSDoc */\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /** JSDoc */\n  private readonly _options: TryCatchOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<TryCatchOptions>) {\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    const global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n    }\n\n    if (this._options.eventTarget) {\n      const eventTarget = Array.isArray(this._options.eventTarget) ? this._options.eventTarget : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(this._wrapEventTarget.bind(this));\n    }\n  }\n\n  /** JSDoc */\n  private _wrapTimeFunction(original: () => void): () => number {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: any, ...args: any[]): number {\n      const originalCallback = args[0];\n      args[0] = wrap(originalCallback, {\n        mechanism: {\n          data: { function: getFunctionName(original) },\n          handled: true,\n          type: 'instrument',\n        },\n      });\n      return original.apply(this, args);\n    };\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _wrapRAF(original: any): (callback: () => void) => any {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: any, callback: () => void): () => void {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return original.call(\n        this,\n        wrap(callback, {\n          mechanism: {\n            data: {\n              function: 'requestAnimationFrame',\n              handler: getFunctionName(original),\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n      );\n    };\n  }\n\n  /** JSDoc */\n  private _wrapEventTarget(target: string): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const global = getGlobalObject() as { [key: string]: any };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = global[target] && global[target].prototype;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (eventName: string, fn: EventListenerObject, options?: boolean | AddEventListenerOptions) => void {\n      return function(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n        try {\n          if (typeof fn.handleEvent === 'function') {\n            fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n              mechanism: {\n                data: {\n                  function: 'handleEvent',\n                  handler: getFunctionName(fn),\n                  target,\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            });\n          }\n        } catch (err) {\n          // can sometimes get 'Permission denied to access property \"handle Event'\n        }\n\n        return original.call(\n          this,\n          eventName,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          wrap((fn as any) as WrappedFunction, {\n            mechanism: {\n              data: {\n                function: 'addEventListener',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n          options,\n        );\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = (fn as unknown) as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler?.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    });\n  }\n\n  /** JSDoc */\n  private _wrapXHR(originalSend: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: XMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n      xmlHttpRequestProps.forEach(prop => {\n        if (prop in xhr && typeof xhr[prop] === 'function') {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fill(xhr, prop, function(original: WrappedFunction): () => any {\n            const wrapOptions = {\n              mechanism: {\n                data: {\n                  function: prop,\n                  handler: getFunctionName(original),\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            };\n\n            // If Instrument integration has been called before TryCatch, get the name of original function\n            if (original.__sentry_original__) {\n              wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n            }\n\n            // Otherwise wrap directly\n            return wrap(original, wrapOptions);\n          });\n        }\n      });\n\n      return originalSend.apply(this, args);\n    };\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** UserAgent */\nexport class UserAgent implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'UserAgent';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = UserAgent.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = event.request?.url || global.location?.href;\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        const headers = {\n          ...event.request?.headers,\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n","import { Event, Exception, StackFrame } from '@sentry/types';\nimport { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\n\nimport { computeStackTrace, StackFrame as TraceKitStackFrame, StackTrace as TraceKitStackTrace } from './tracekit';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace: TraceKitStackTrace): Exception {\n  const frames = prepareFramesForEvent(stacktrace.stack);\n\n  const exception: Exception = {\n    type: stacktrace.name,\n    value: stacktrace.message,\n  };\n\n  if (frames && frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  rejection?: boolean,\n): Event {\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            rejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace: TraceKitStackTrace): Event {\n  const exception = exceptionFromStacktrace(stacktrace);\n\n  return {\n    exception: {\n      values: [exception],\n    },\n  };\n}\n\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack: TraceKitStackFrame[]): StackFrame[] {\n  if (!stack || !stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].func || '';\n  const lastFrameFunction = localStack[localStack.length - 1].func || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(\n      (frame: TraceKitStackFrame): StackFrame => ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n      }),\n    )\n    .reverse();\n}\n","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\n\nimport { BrowserOptions } from './backend';\nimport { BrowserClient } from './client';\nimport { ReportDialogOptions, wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new UserAgent(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = false;\n  }\n\n  initAndBind(BrowserClient, options);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    options.eventId = getCurrentHub().lastEventId();\n  }\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  const window = getGlobalObject<Window>();\n  const hub = getCurrentHub();\n\n  /**\n   * We should be using `Promise.all([windowLoaded, firstContentfulPaint])` here,\n   * but, as always, it's not available in the IE10-11. Thanks IE.\n   */\n  let loadResolved = document.readyState === 'complete';\n  let fcpResolved = false;\n  const possiblyEndSession = (): void => {\n    if (fcpResolved && loadResolved) {\n      hub.endSession();\n    }\n  };\n  const resolveWindowLoaded = (): void => {\n    loadResolved = true;\n    possiblyEndSession();\n    window.removeEventListener('load', resolveWindowLoaded);\n  };\n\n  hub.startSession();\n\n  if (!loadResolved) {\n    // IE doesn't support `{ once: true }` for event listeners, so we have to manually\n    // attach and then detach it once completed.\n    window.addEventListener('load', resolveWindowLoaded);\n  }\n\n  try {\n    const po = new PerformanceObserver((entryList, po) => {\n      entryList.getEntries().forEach(entry => {\n        if (entry.name === 'first-contentful-paint' && entry.startTime < firstHiddenTime) {\n          po.disconnect();\n          fcpResolved = true;\n          possiblyEndSession();\n        }\n      });\n    });\n\n    // There's no need to even attach this listener if `PerformanceObserver` constructor will fail,\n    // so we do it below here.\n    let firstHiddenTime = document.visibilityState === 'hidden' ? 0 : Infinity;\n    document.addEventListener(\n      'visibilitychange',\n      event => {\n        firstHiddenTime = Math.min(firstHiddenTime, event.timeStamp);\n      },\n      { once: true },\n    );\n\n    po.observe({\n      type: 'paint',\n      buffered: true,\n    });\n  } catch (e) {\n    fcpResolved = true;\n    possiblyEndSession();\n  }\n}\n","/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/**\n * An object representing a single stack frame.\n * {Object} StackFrame\n * {string} url The JavaScript or HTML file URL.\n * {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * {string[]?} args The arguments passed to the function, if known.\n * {number=} line The line number, if known.\n * {number=} column The column number, if known.\n * {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n */\nexport interface StackFrame {\n  url: string;\n  func: string;\n  args: string[];\n  line: number | null;\n  column: number | null;\n}\n\n/**\n * An object representing a JavaScript stack trace.\n * {Object} StackTrace\n * {string} name The name of the thrown exception.\n * {string} message The exception error message.\n * {TraceKit.StackFrame[]} stack An array of stack frames.\n */\nexport interface StackTrace {\n  name: string;\n  message: string;\n  mechanism?: string;\n  stack: StackFrame[];\n  failed?: boolean;\n}\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nconst geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nconst chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function computeStackTrace(ex: any): StackTrace {\n  let stack = null;\n  let popSize = 0;\n\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      popSize = ex.framesToPop;\n    } else if (reactMinifiedRegexp.test(ex.message)) {\n      popSize = 1;\n    }\n  }\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex && ex.name,\n    stack: [],\n    failed: true,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\nfunction computeStackTraceFromStackProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stack) {\n    return null;\n  }\n\n  const stack = [];\n  const lines = ex.stack.split('\\n');\n  let isEval;\n  let submatch;\n  let parts;\n  let element;\n\n  for (let i = 0; i < lines.length; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n      element = {\n        // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n        // prefix here seems like the quickest solution for now.\n        url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = gecko.exec(lines[i]))) {\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || `eval`;\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = ''; // no column when eval\n      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = (ex.columnNumber as number) + 1;\n      }\n      element = {\n        url: parts[3],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null,\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction computeStackTraceFromStacktraceProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stacktrace) {\n    return null;\n  }\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace;\n  const opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  const opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  const lines = stacktrace.split('\\n');\n  const stack = [];\n  let parts;\n\n  for (let line = 0; line < lines.length; line += 2) {\n    let element = null;\n    if ((parts = opera10Regex.exec(lines[line]))) {\n      element = {\n        url: parts[2],\n        func: parts[3],\n        args: [],\n        line: +parts[1],\n        column: null,\n      };\n    } else if ((parts = opera11Regex.exec(lines[line]))) {\n      element = {\n        url: parts[6],\n        func: parts[3] || parts[4],\n        args: parts[5] ? parts[5].split(',') : [],\n        line: +parts[1],\n        column: +parts[2],\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace: StackTrace, popSize: number): StackTrace {\n  try {\n    return {\n      ...stacktrace,\n      stack: stacktrace.stack.slice(popSize),\n    };\n  } catch (e) {\n    return stacktrace;\n  }\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractMessage(ex: any): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n","import { API } from '@sentry/core';\nimport {\n  Event,\n  Response as SentryResponse,\n  SentryRequestType,\n  Status,\n  Transport,\n  TransportOptions,\n} from '@sentry/types';\nimport { logger, parseRetryAfterHeader, PromiseBuffer, SentryError } from '@sentry/utils';\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @deprecated\n   */\n  public url: string;\n\n  /** Helper to get Sentry API endpoints. */\n  protected readonly _api: API;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<SentryResponse> = new PromiseBuffer(30);\n\n  /** Locks transport after receiving rate limits in a response */\n  protected readonly _rateLimits: Record<string, Date> = {};\n\n  public constructor(public options: TransportOptions) {\n    this._api = new API(this.options.dsn);\n    // eslint-disable-next-line deprecation/deprecation\n    this.url = this._api.getStoreEndpointWithUrlEncodedAuth();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<SentryResponse> {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n\n  /**\n   * Handle Sentry repsonse for promise-based transports.\n   */\n  protected _handleResponse({\n    requestType,\n    response,\n    headers,\n    resolve,\n    reject,\n  }: {\n    requestType: SentryRequestType;\n    response: Response | XMLHttpRequest;\n    headers: Record<string, string | null>;\n    resolve: (value?: SentryResponse | PromiseLike<SentryResponse> | null | undefined) => void;\n    reject: (reason?: unknown) => void;\n  }): void {\n    const status = Status.fromHttpCode(response.status);\n    /**\n     * \"The name is case-insensitive.\"\n     * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n     */\n    const limited = this._handleRateLimit(headers);\n    if (limited) logger.warn(`Too many requests, backing off till: ${this._disabledUntil(requestType)}`);\n\n    if (status === Status.Success) {\n      resolve({ status });\n      return;\n    }\n\n    reject(response);\n  }\n\n  /**\n   * Gets the time that given category is disabled until for rate limiting\n   */\n  protected _disabledUntil(category: string): Date {\n    return this._rateLimits[category] || this._rateLimits.all;\n  }\n\n  /**\n   * Checks if a category is rate limited\n   */\n  protected _isRateLimited(category: string): boolean {\n    return this._disabledUntil(category) > new Date(Date.now());\n  }\n\n  /**\n   * Sets internal _rateLimits from incoming headers. Returns true if headers contains a non-empty rate limiting header.\n   */\n  protected _handleRateLimit(headers: Record<string, string | null>): boolean {\n    const now = Date.now();\n    const rlHeader = headers['x-sentry-rate-limits'];\n    const raHeader = headers['retry-after'];\n\n    if (rlHeader) {\n      for (const limit of rlHeader.trim().split(',')) {\n        const parameters = limit.split(':', 2);\n        const headerDelay = parseInt(parameters[0], 10);\n        const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n        for (const category of parameters[1].split(';')) {\n          this._rateLimits[category || 'all'] = new Date(now + delay);\n        }\n      }\n      return true;\n    } else if (raHeader) {\n      this._rateLimits.all = new Date(now + parseRetryAfterHeader(now, raHeader));\n      return true;\n    }\n    return false;\n  }\n}\n","import { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Event, Response, SentryRequest, Session } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\nconst global = getGlobalObject<Window>();\n\n/** `fetch` based transport */\nexport class FetchTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    return this._sendRequest(eventToSentryRequest(event, this._api), event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): PromiseLike<Response> {\n    return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n  }\n\n  /**\n   * @param sentryRequest Prepared SentryRequest to be delivered\n   * @param originalPayload Original payload used to create SentryRequest\n   */\n  private _sendRequest(sentryRequest: SentryRequest, originalPayload: Event | Session): PromiseLike<Response> {\n    if (this._isRateLimited(sentryRequest.type)) {\n      return Promise.reject({\n        event: originalPayload,\n        type: sentryRequest.type,\n        reason: `Transport locked till ${this._disabledUntil(sentryRequest.type)} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    const options: RequestInit = {\n      body: sentryRequest.body,\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n    };\n    if (this.options.fetchParameters !== undefined) {\n      Object.assign(options, this.options.fetchParameters);\n    }\n    if (this.options.headers !== undefined) {\n      options.headers = this.options.headers;\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        global\n          .fetch(sentryRequest.url, options)\n          .then(response => {\n            const headers = {\n              'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n              'retry-after': response.headers.get('Retry-After'),\n            };\n            this._handleResponse({ requestType: sentryRequest.type, response, headers, resolve, reject });\n          })\n          .catch(reject);\n      }),\n    );\n  }\n}\n","export { BaseTransport } from './base';\nexport { FetchTransport } from './fetch';\nexport { XHRTransport } from './xhr';\n","import { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Event, Response, SentryRequest, Session } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    return this._sendRequest(eventToSentryRequest(event, this._api), event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): PromiseLike<Response> {\n    return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n  }\n\n  /**\n   * @param sentryRequest Prepared SentryRequest to be delivered\n   * @param originalPayload Original payload used to create SentryRequest\n   */\n  private _sendRequest(sentryRequest: SentryRequest, originalPayload: Event | Session): PromiseLike<Response> {\n    if (this._isRateLimited(sentryRequest.type)) {\n      return Promise.reject({\n        event: originalPayload,\n        type: sentryRequest.type,\n        reason: `Transport locked till ${this._disabledUntil(sentryRequest.type)} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = (): void => {\n          if (request.readyState === 4) {\n            const headers = {\n              'x-sentry-rate-limits': request.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': request.getResponseHeader('Retry-After'),\n            };\n            this._handleResponse({ requestType: sentryRequest.type, response: request, headers, resolve, reject });\n          }\n        };\n\n        request.open('POST', sentryRequest.url);\n        for (const header in this.options.headers) {\n          if (this.options.headers.hasOwnProperty(header)) {\n            request.setRequestHeader(header, this.options.headers[header]);\n          }\n        }\n        request.send(sentryRequest.body);\n      }),\n    );\n  }\n}\n","export const SDK_NAME = 'sentry.javascript.browser';\nexport const SDK_VERSION = '5.27.4';\n","import { DsnLike } from '@sentry/types';\nimport { Dsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Helper class to provide urls to different Sentry endpoints. */\nexport class API {\n  /** The internally used Dsn object. */\n  private readonly _dsnObject: Dsn;\n  /** Create a new instance of API */\n  public constructor(public dsn: DsnLike) {\n    this._dsnObject = new Dsn(dsn);\n  }\n\n  /** Returns the Dsn object. */\n  public getDsn(): Dsn {\n    return this._dsnObject;\n  }\n\n  /** Returns the prefix to construct Sentry ingestion API endpoints. */\n  public getBaseApiEndpoint(): string {\n    const dsn = this._dsnObject;\n    const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n    const port = dsn.port ? `:${dsn.port}` : '';\n    return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n  }\n\n  /** Returns the store endpoint URL. */\n  public getStoreEndpoint(): string {\n    return this._getIngestEndpoint('store');\n  }\n\n  /**\n   * Returns the store endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getStoreEndpointWithUrlEncodedAuth(): string {\n    return `${this.getStoreEndpoint()}?${this._encodedAuth()}`;\n  }\n\n  /**\n   * Returns the envelope endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getEnvelopeEndpointWithUrlEncodedAuth(): string {\n    return `${this._getEnvelopeEndpoint()}?${this._encodedAuth()}`;\n  }\n\n  /** Returns only the path component for the store endpoint. */\n  public getStoreEndpointPath(): string {\n    const dsn = this._dsnObject;\n    return `${dsn.path ? `/${dsn.path}` : ''}/api/${dsn.projectId}/store/`;\n  }\n\n  /**\n   * Returns an object that can be used in request headers.\n   * This is needed for node and the old /store endpoint in sentry\n   */\n  public getRequestHeaders(clientName: string, clientVersion: string): { [key: string]: string } {\n    const dsn = this._dsnObject;\n    const header = [`Sentry sentry_version=${SENTRY_API_VERSION}`];\n    header.push(`sentry_client=${clientName}/${clientVersion}`);\n    header.push(`sentry_key=${dsn.user}`);\n    if (dsn.pass) {\n      header.push(`sentry_secret=${dsn.pass}`);\n    }\n    return {\n      'Content-Type': 'application/json',\n      'X-Sentry-Auth': header.join(', '),\n    };\n  }\n\n  /** Returns the url to the report dialog endpoint. */\n  public getReportDialogEndpoint(\n    dialogOptions: {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      user?: { name?: string; email?: string };\n    } = {},\n  ): string {\n    const dsn = this._dsnObject;\n    const endpoint = `${this.getBaseApiEndpoint()}embed/error-page/`;\n\n    const encodedOptions = [];\n    encodedOptions.push(`dsn=${dsn.toString()}`);\n    for (const key in dialogOptions) {\n      if (key === 'user') {\n        if (!dialogOptions.user) {\n          continue;\n        }\n        if (dialogOptions.user.name) {\n          encodedOptions.push(`name=${encodeURIComponent(dialogOptions.user.name)}`);\n        }\n        if (dialogOptions.user.email) {\n          encodedOptions.push(`email=${encodeURIComponent(dialogOptions.user.email)}`);\n        }\n      } else {\n        encodedOptions.push(`${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`);\n      }\n    }\n    if (encodedOptions.length) {\n      return `${endpoint}?${encodedOptions.join('&')}`;\n    }\n\n    return endpoint;\n  }\n\n  /** Returns the envelope endpoint URL. */\n  private _getEnvelopeEndpoint(): string {\n    return this._getIngestEndpoint('envelope');\n  }\n\n  /** Returns the ingest API endpoint for target. */\n  private _getIngestEndpoint(target: 'store' | 'envelope'): string {\n    const base = this.getBaseApiEndpoint();\n    const dsn = this._dsnObject;\n    return `${base}${dsn.projectId}/${target}/`;\n  }\n\n  /** Returns a URL-encoded string with auth config suitable for a query string. */\n  private _encodedAuth(): string {\n    const dsn = this._dsnObject;\n    const auth = {\n      // We send only the minimum set of required information. See\n      // https://github.com/getsentry/sentry-javascript/issues/2572.\n      sentry_key: dsn.user,\n      sentry_version: SENTRY_API_VERSION,\n    };\n    return urlEncode(auth);\n  }\n}\n","import { Event, EventHint, Options, Session, Severity, Transport } from '@sentry/types';\nimport { logger, SentryError } from '@sentry/utils';\n\nimport { NoopTransport } from './transports/noop';\n\n/**\n * Internal platform-dependent Sentry SDK Backend.\n *\n * While {@link Client} contains business logic specific to an SDK, the\n * Backend offers platform specific implementations for low-level operations.\n * These are persisting and loading information, sending events, and hooking\n * into the environment.\n *\n * Backends receive a handle to the Client in their constructor. When a\n * Backend automatically generates events, it must pass them to\n * the Client for validation and processing first.\n *\n * Usually, the Client will be of corresponding type, e.g. NodeBackend\n * receives NodeClient. However, higher-level SDKs can choose to instantiate\n * multiple Backends and delegate tasks between them. In this case, an event\n * generated by one backend might very well be sent by another one.\n *\n * The client also provides access to options via {@link Client.getOptions}.\n * @hidden\n */\nexport interface Backend {\n  /** Creates a {@link Event} from an exception. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  eventFromException(exception: any, hint?: EventHint): PromiseLike<Event>;\n\n  /** Creates a {@link Event} from a plain message. */\n  eventFromMessage(message: string, level?: Severity, hint?: EventHint): PromiseLike<Event>;\n\n  /** Submits the event to Sentry */\n  sendEvent(event: Event): void;\n\n  /** Submits the session to Sentry */\n  sendSession(session: Session): void;\n\n  /**\n   * Returns the transport that is used by the backend.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   *\n   * @returns The transport.\n   */\n  getTransport(): Transport;\n}\n\n/**\n * A class object that can instantiate Backend objects.\n * @hidden\n */\nexport type BackendClass<B extends Backend, O extends Options> = new (options: O) => B;\n\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nexport abstract class BaseBackend<O extends Options> implements Backend {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** Cached transport used internally. */\n  protected _transport: Transport;\n\n  /** Creates a new backend instance. */\n  public constructor(options: O) {\n    this._options = options;\n    if (!this._options.dsn) {\n      logger.warn('No DSN provided, backend will not do anything.');\n    }\n    this._transport = this._setupTransport();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromException` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(_message: string, _level?: Severity, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromMessage` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): void {\n    this._transport.sendEvent(event).then(null, reason => {\n      logger.error(`Error while sending event: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): void {\n    if (!this._transport.sendSession) {\n      logger.warn(\"Dropping session because custom transport doesn't implement sendSession\");\n      return;\n    }\n\n    this._transport.sendSession(session).then(null, reason => {\n      logger.error(`Error while sending session: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport {\n    return this._transport;\n  }\n\n  /**\n   * Sets up the transport so it can be used later to send requests.\n   */\n  protected _setupTransport(): Transport {\n    return new NoopTransport();\n  }\n}\n","/* eslint-disable max-lines */\nimport { Scope, Session } from '@sentry/hub';\nimport {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  Options,\n  SessionStatus,\n  Severity,\n} from '@sentry/types';\nimport {\n  dateTimestampInSeconds,\n  Dsn,\n  isPrimitive,\n  isThenable,\n  logger,\n  normalize,\n  SentryError,\n  SyncPromise,\n  truncate,\n  uuid4,\n} from '@sentry/utils';\n\nimport { Backend, BackendClass } from './basebackend';\nimport { IntegrationIndex, setupIntegrations } from './integration';\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<B extends Backend, O extends Options> implements Client<O> {\n  /**\n   * The backend used to physically interact in the environment. Usually, this\n   * will correspond to the client. When composing SDKs, however, the Backend\n   * from the root SDK will be used.\n   */\n  protected readonly _backend: B;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: Dsn;\n\n  /** Array of used integrations. */\n  protected _integrations: IntegrationIndex = {};\n\n  /** Number of call being processed */\n  protected _processing: number = 0;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param backendClass A constructor function to create the backend.\n   * @param options Options for the client.\n   */\n  protected constructor(backendClass: BackendClass<B, O>, options: O) {\n    this._backend = new backendClass(options);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = new Dsn(options.dsn);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._getBackend()\n        .eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this._getBackend().eventFromMessage(`${message}`, level, hint)\n      : this._getBackend().eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!session.release) {\n      logger.warn('Discarded session because of missing release');\n    } else {\n      this._sendSession(session);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): Dsn | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    return this._isClientProcessing(timeout).then(ready => {\n      return this._getBackend()\n        .getTransport()\n        .close(timeout)\n        .then(transportFlushed => ready && transportFlushed);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n  public setupIntegrations(): void {\n    if (this._isEnabled()) {\n      this._integrations = setupIntegrations(this._options);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    let userAgent;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    const user = event.user;\n    if (!session.userAgent) {\n      const headers = event.request ? event.request.headers : {};\n      for (const key in headers) {\n        if (key.toLowerCase() === 'user-agent') {\n          userAgent = headers[key];\n          break;\n        }\n      }\n    }\n\n    session.update({\n      ...(crashed && { status: SessionStatus.Crashed }),\n      user,\n      userAgent,\n      errors: session.errors + Number(errored || crashed),\n    });\n  }\n\n  /** Deliver captured session to Sentry */\n  protected _sendSession(session: Session): void {\n    this._getBackend().sendSession(session);\n  }\n\n  /** Waits for the client to be done with processing. */\n  protected _isClientProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._processing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Returns the current backend. */\n  protected _getBackend(): B {\n    return this._backend;\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    const { normalizeDepth = 3 } = this.getOptions();\n    const prepared: Event = {\n      ...event,\n      event_id: event.event_id || (hint && hint.event_id ? hint.event_id : uuid4()),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint && hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = SyncPromise.resolve<Event | null>(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n  protected _normalizeEvent(event: Event | null, depth: number): Event | null {\n    if (!event) {\n      return null;\n    }\n\n    const normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth),\n      }),\n    };\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      normalized.contexts.trace = event.contexts.trace;\n    }\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n  protected _applyClientOptions(event: Event): void {\n    const options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    const request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n   */\n  protected _applyIntegrationsMetadata(event: Event): void {\n    const sdkInfo = event.sdk;\n    const integrationsArray = Object.keys(this._integrations);\n    if (sdkInfo && integrationsArray.length > 0) {\n      sdkInfo.integrations = integrationsArray;\n    }\n  }\n\n  /**\n   * Tells the backend to send this event\n   * @param event The Sentry event to send\n   */\n  protected _sendEvent(event: Event): void {\n    this._getBackend().sendEvent(event);\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        logger.error(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<Event> {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return SyncPromise.reject(new SentryError('SDK not enabled, will not send event.'));\n    }\n\n    const isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      return SyncPromise.reject(new SentryError('This event has been sampled, will not send event.'));\n    }\n\n    return this._prepareEvent(event, scope, hint)\n      .then(prepared => {\n        if (prepared === null) {\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        const isInternalException = hint && hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        const beforeSendResult = beforeSend(prepared, hint);\n        if (typeof beforeSendResult === 'undefined') {\n          throw new SentryError('`beforeSend` method has to return `null` or a valid event.');\n        } else if (isThenable(beforeSendResult)) {\n          return (beforeSendResult as PromiseLike<Event | null>).then(\n            event => event,\n            e => {\n              throw new SentryError(`beforeSend rejected with ${e}`);\n            },\n          );\n        }\n        return beforeSendResult;\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        const session = scope && scope.getSession && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this._sendEvent(processedEvent);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason as Error,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._processing += 1;\n    promise.then(\n      value => {\n        this._processing -= 1;\n        return value;\n      },\n      reason => {\n        this._processing -= 1;\n        return reason;\n      },\n    );\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport interface IntegrationIndex {\n  [key: string]: Integration;\n}\n\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  const userIntegrations = options.integrations;\n  let integrations: Integration[] = [];\n  if (Array.isArray(userIntegrations)) {\n    const userIntegrationsNames = userIntegrations.map(i => i.name);\n    const pickedIntegrationsNames: string[] = [];\n\n    // Leave only unique default integrations, that were not overridden with provided user integrations\n    defaultIntegrations.forEach(defaultIntegration => {\n      if (\n        userIntegrationsNames.indexOf(defaultIntegration.name) === -1 &&\n        pickedIntegrationsNames.indexOf(defaultIntegration.name) === -1\n      ) {\n        integrations.push(defaultIntegration);\n        pickedIntegrationsNames.push(defaultIntegration.name);\n      }\n    });\n\n    // Don't add same user integration twice\n    userIntegrations.forEach(userIntegration => {\n      if (pickedIntegrationsNames.indexOf(userIntegration.name) === -1) {\n        integrations.push(userIntegration);\n        pickedIntegrationsNames.push(userIntegration.name);\n      }\n    });\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  } else {\n    integrations = [...defaultIntegrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  const integrationsNames = integrations.map(i => i.name);\n  const alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/** Setup given integration */\nexport function setupIntegration(integration: Integration): void {\n  if (installedIntegrations.indexOf(integration.name) !== -1) {\n    return;\n  }\n  integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n  installedIntegrations.push(integration.name);\n  logger.log(`Integration installed: ${integration.name}`);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations<O extends Options>(options: O): IntegrationIndex {\n  const integrations: IntegrationIndex = {};\n  getIntegrationsToSetup(options).forEach(integration => {\n    integrations[integration.name] = integration;\n    setupIntegration(integration);\n  });\n  return integrations;\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function(this: WrappedFunction, ...args: any[]): string {\n      const context = this.__sentry_original__ || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n\n  /** @deprecated use {@link InboundFiltersOptions.allowUrls} instead. */\n  whitelistUrls: Array<string | RegExp>;\n  /** @deprecated use {@link InboundFiltersOptions.denyUrls} instead. */\n  blacklistUrls: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isDeniedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.denyUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isAllowedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.allowUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: Partial<InboundFiltersOptions> = {}): Partial<InboundFiltersOptions> {\n    return {\n      allowUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.whitelistUrls || []),\n        ...(this._options.allowUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.whitelistUrls || []),\n        ...(clientOptions.allowUrls || []),\n      ],\n      denyUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.blacklistUrls || []),\n        ...(this._options.denyUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.blacklistUrls || []),\n        ...(clientOptions.denyUrls || []),\n      ],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n","import { Event, SentryRequest, Session } from '@sentry/types';\n\nimport { API } from './api';\n\n/** Creates a SentryRequest from an event. */\nexport function sessionToSentryRequest(session: Session, api: API): SentryRequest {\n  const envelopeHeaders = JSON.stringify({\n    sent_at: new Date().toISOString(),\n  });\n  const itemHeaders = JSON.stringify({\n    type: 'session',\n  });\n\n  return {\n    body: `${envelopeHeaders}\\n${itemHeaders}\\n${JSON.stringify(session)}`,\n    type: 'session',\n    url: api.getEnvelopeEndpointWithUrlEncodedAuth(),\n  };\n}\n\n/** Creates a SentryRequest from an event. */\nexport function eventToSentryRequest(event: Event, api: API): SentryRequest {\n  const useEnvelope = event.type === 'transaction';\n\n  const req: SentryRequest = {\n    body: JSON.stringify(event),\n    type: event.type || 'event',\n    url: useEnvelope ? api.getEnvelopeEndpointWithUrlEncodedAuth() : api.getStoreEndpointWithUrlEncodedAuth(),\n  };\n\n  // https://develop.sentry.dev/sdk/envelopes/\n\n  // Since we don't need to manipulate envelopes nor store them, there is no\n  // exported concept of an Envelope with operations including serialization and\n  // deserialization. Instead, we only implement a minimal subset of the spec to\n  // serialize events inline here.\n  if (useEnvelope) {\n    const envelopeHeaders = JSON.stringify({\n      event_id: event.event_id,\n      // We need to add * 1000 since we divide it by 1000 by default but JS works with ms precision\n      // The reason we use timestampWithMs here is that all clocks across the SDK use the same clock\n      sent_at: new Date().toISOString(),\n    });\n    const itemHeaders = JSON.stringify({\n      type: event.type,\n      // The content-type is assumed to be 'application/json' and not part of\n      // the current spec for transaction items, so we don't bloat the request\n      // body with it.\n      //\n      // content_type: 'application/json',\n      //\n      // The length is optional. It must be the number of bytes in req.Body\n      // encoded as UTF-8. Since the server can figure this out and would\n      // otherwise refuse events that report the length incorrectly, we decided\n      // not to send the length to avoid problems related to reporting the wrong\n      // size and to reduce request body size.\n      //\n      // length: new TextEncoder().encode(req.body).length,\n    });\n    // The trailing newline is optional. We intentionally don't send it to avoid\n    // sending unnecessary bytes.\n    //\n    // const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}\\n`;\n    const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}`;\n    req.body = envelope;\n  }\n\n  return req;\n}\n","import { Event, Response, Status, Transport } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\n/** Noop transport */\nexport class NoopTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    return SyncPromise.resolve({\n      reason: `NoopTransport: Event has been skipped because no Dsn is configured.`,\n      status: Status.Skipped,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(_?: number): PromiseLike<boolean> {\n    return SyncPromise.resolve(true);\n  }\n}\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  SessionContext,\n  Severity,\n  Span,\n  SpanContext,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, DomainAsCarrier, Layer } from './interfaces';\nimport { Scope } from './scope';\nimport { Session } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    this.bindClient(client);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(context: SpanContext): Span {\n    return this._callExtensionMethod('startSpan', context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    // End existing session if there's one\n    this.endSession();\n\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n    const session = new Session({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...context,\n    });\n    if (scope) {\n      scope.setSession(session);\n    }\n    return session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession && scope.getSession();\n    if (session) {\n      session.close();\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n      scope.setSession();\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const { scope, client } = this.getStackTop();\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (client as any)[method](...args, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Returns the active domain, if one exists\n *\n * @returns The domain, or undefined if there is no active domain\n */\nexport function getActiveDomain(): DomainAsCarrier | undefined {\n  const sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const activeDomain = getActiveDomain();\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) return carrier.__SENTRY__.hub;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  CaptureContext,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Scope as ScopeInterface,\n  ScopeContext,\n  Severity,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, getGlobalObject, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n\nimport { Session } from './session';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifiying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: string } = {};\n\n  /** Extra */\n  protected _extra: Extras = {};\n\n  /** Contexts */\n  protected _contexts: Contexts = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction Name */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = user || {};\n    if (this._session) {\n      this._session.update({ user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Can be removed in major version.\n   * @deprecated in favor of {@link this.setTransactionName}\n   */\n  public setTransaction(name?: string): this {\n    return this.setTransactionName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransaction(): Transaction | undefined {\n    // often, this span will be a transaction, but it's not guaranteed to be\n    const span = this.getSpan() as undefined | (Span & { spanRecorder: { spans: Span[] } });\n\n    // try it the new way first\n    if (span?.transaction) {\n      return span?.transaction;\n    }\n\n    // fallback to the old way (known bug: this only finds transactions with sampled = true)\n    if (span?.spanRecorder?.spans[0]) {\n      return span.spanRecorder.spans[0] as Transaction;\n    }\n\n    // neither way found a transaction\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext as <T>(scope: T) => T)(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    this._breadcrumbs =\n      maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n        ? [...this._breadcrumbs, mergedBreadcrumb].slice(-maxBreadcrumbs)\n        : [...this._breadcrumbs, mergedBreadcrumb];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relys on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction?.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          (result as PromiseLike<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      setTimeout(() => {\n        this._scopeListeners.forEach(callback => {\n          callback(this);\n        });\n        this._notifyingListeners = false;\n      });\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access  */\n  const global = getGlobalObject<any>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","import { Session as SessionInterface, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, uuid4 } from '@sentry/utils';\n\n/**\n * @inheritdoc\n */\nexport class Session implements SessionInterface {\n  public userAgent?: string;\n  public errors: number = 0;\n  public release?: string;\n  public sid: string = uuid4();\n  public did?: string;\n  public timestamp: number = Date.now();\n  public started: number = Date.now();\n  public duration: number = 0;\n  public status: SessionStatus = SessionStatus.Ok;\n  public environment?: string;\n  public ipAddress?: string;\n\n  constructor(context?: Omit<SessionContext, 'started' | 'status'>) {\n    if (context) {\n      this.update(context);\n    }\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  update(context: SessionContext = {}): void {\n    if (context.user) {\n      if (context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n\n      if (!context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n\n    this.timestamp = context.timestamp || Date.now();\n\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.did) {\n      this.did = `${context.did}`;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      this.duration = this.timestamp - this.started;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  }\n\n  /** JSDoc */\n  close(status?: Exclude<SessionStatus, SessionStatus.Ok>): void {\n    if (status) {\n      this.update({ status });\n    } else if (this.status === SessionStatus.Ok) {\n      this.update({ status: SessionStatus.Exited });\n    } else {\n      this.update();\n    }\n  }\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  } {\n    return dropUndefinedKeys({\n      sid: `${this.sid}`,\n      init: true,\n      started: new Date(this.started).toISOString(),\n      timestamp: new Date(this.timestamp).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? `${this.did}` : undefined,\n      duration: this.duration,\n      attrs: dropUndefinedKeys({\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent,\n      }),\n    });\n  }\n}\n","import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\n// See https://github.com/angular/angular.js/blob/v1.4.7/src/minErr.js\nconst angularPattern = /^\\[((?:[$a-zA-Z0-9]+:)?(?:[$a-zA-Z0-9]+))\\] (.*?)\\n?(\\S+)$/;\n\n/**\n * AngularJS integration\n *\n * Provides an $exceptionHandler for AngularJS\n */\nexport class Angular implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'AngularJS';\n\n  /**\n   * moduleName used in Angular's DI resolution algorithm\n   */\n  public static moduleName: string = 'ngSentry';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Angular.id;\n\n  /**\n   * Angular's instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly _angular: any;\n\n  /**\n   * ngSentry module instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly _module: any;\n\n  /**\n   * Returns current hub.\n   */\n  private _getCurrentHub?: () => Hub;\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public constructor(options: { angular?: any } = {}) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    this._angular = options.angular || getGlobalObject<any>().angular;\n\n    if (!this._angular) {\n      logger.error('AngularIntegration is missing an Angular instance');\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this._module = this._angular.module(Angular.moduleName, []);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!this._module) {\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this._module.config([\n      '$provide',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ($provide: any): void => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        $provide.decorator('$exceptionHandler', ['$delegate', this._$exceptionHandlerDecorator.bind(this)]);\n      },\n    ]);\n  }\n\n  /**\n   * Angular's exceptionHandler for Sentry integration\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _$exceptionHandlerDecorator($delegate: any): any {\n    return (exception: Error, cause?: string): void => {\n      const hub = this._getCurrentHub && this._getCurrentHub();\n\n      if (hub && hub.getIntegration(Angular)) {\n        hub.withScope(scope => {\n          if (cause) {\n            scope.setExtra('cause', cause);\n          }\n\n          scope.addEventProcessor((event: Event) => {\n            const ex = event.exception && event.exception.values && event.exception.values[0];\n\n            if (ex) {\n              const matches = angularPattern.exec(ex.value || '');\n\n              if (matches) {\n                // This type now becomes something like: $rootScope:inprog\n                ex.type = matches[1];\n                ex.value = matches[2];\n                event.message = `${ex.type}: ${ex.value}`;\n                // auto set a new tag specifically for the angular error url\n                event.extra = {\n                  ...event.extra,\n                  angularDocs: matches[3].substr(0, 250),\n                };\n              }\n            }\n\n            return event;\n          });\n\n          hub.captureException(exception);\n        });\n      }\n      $delegate(exception, cause);\n    };\n  }\n}\n","import { EventProcessor, Hub, Integration, Severity } from '@sentry/types';\nimport { fill, getGlobalObject, safeJoin } from '@sentry/utils';\n\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Send Console API calls as Sentry Events */\nexport class CaptureConsole implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'CaptureConsole';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = CaptureConsole.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _levels: string[] = ['log', 'info', 'warn', 'error', 'debug', 'assert'];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { levels?: string[] } = {}) {\n    if (options.levels) {\n      this._levels = options.levels;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!('console' in global)) {\n      return;\n    }\n\n    this._levels.forEach((level: string) => {\n      if (!(level in global.console)) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      fill(global.console, level, (originalConsoleLevel: () => any) => (...args: any[]): void => {\n        const hub = getCurrentHub();\n\n        if (hub.getIntegration(CaptureConsole)) {\n          hub.withScope(scope => {\n            scope.setLevel(Severity.fromString(level));\n            scope.setExtra('arguments', args);\n            scope.addEventProcessor(event => {\n              event.logger = 'console';\n              return event;\n            });\n\n            let message = safeJoin(args, ' ');\n            if (level === 'assert') {\n              if (args[0] === false) {\n                message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n                scope.setExtra('arguments', args.slice(1));\n                hub.captureMessage(message);\n              }\n            } else {\n              hub.captureMessage(message);\n            }\n          });\n        }\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      });\n    });\n  }\n}\n","import { Event, EventHint, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { consoleSandbox } from '@sentry/utils';\n\n/** JSDoc */\ninterface DebugOptions {\n  stringify?: boolean;\n  debugger?: boolean;\n}\n\n/** JSDoc */\nexport class Debug implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Debug';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Debug.id;\n\n  /** JSDoc */\n  private readonly _options: DebugOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: DebugOptions) {\n    this._options = {\n      debugger: false,\n      stringify: false,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(Debug);\n      if (self) {\n        if (self._options.debugger) {\n          // eslint-disable-next-line no-debugger\n          debugger;\n        }\n\n        /* eslint-disable no-console */\n        consoleSandbox(() => {\n          if (self._options.stringify) {\n            console.log(JSON.stringify(event, null, 2));\n            if (hint) {\n              console.log(JSON.stringify(hint, null, 2));\n            }\n          } else {\n            console.log(event);\n            if (hint) {\n              console.log(hint);\n            }\n          }\n        });\n        /* eslint-enable no-console */\n      }\n      return event;\n    });\n  }\n}\n","import { Event, EventProcessor, Exception, Hub, Integration, StackFrame } from '@sentry/types';\n\n/** Deduplication filter */\nexport class Dedupe implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Dedupe';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Dedupe.id;\n\n  /**\n   * @inheritDoc\n   */\n  private _previousEvent?: Event;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((currentEvent: Event) => {\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (self._shouldDropEvent(currentEvent, self._previousEvent)) {\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n    if (!previousEvent) {\n      return false;\n    }\n\n    if (this._isSameMessageEvent(currentEvent, previousEvent)) {\n      return true;\n    }\n\n    if (this._isSameExceptionEvent(currentEvent, previousEvent)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n    const currentMessage = currentEvent.message;\n    const previousMessage = previousEvent.message;\n\n    // If neither event has a message property, they were both exceptions, so bail out\n    if (!currentMessage && !previousMessage) {\n      return false;\n    }\n\n    // If only one event has a stacktrace, but not the other one, they are not the same\n    if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n      return false;\n    }\n\n    if (currentMessage !== previousMessage) {\n      return false;\n    }\n\n    if (!this._isSameFingerprint(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    if (!this._isSameStacktrace(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** JSDoc */\n  private _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n    const exception = event.exception;\n\n    if (exception) {\n      try {\n        // @ts-ignore Object could be undefined\n        return exception.values[0].stacktrace.frames;\n      } catch (_oO) {\n        return undefined;\n      }\n    } else if (event.stacktrace) {\n      return event.stacktrace.frames;\n    }\n    return undefined;\n  }\n\n  /** JSDoc */\n  private _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n    let currentFrames = this._getFramesFromEvent(currentEvent);\n    let previousFrames = this._getFramesFromEvent(previousEvent);\n\n    // If neither event has a stacktrace, they are assumed to be the same\n    if (!currentFrames && !previousFrames) {\n      return true;\n    }\n\n    // If only one event has a stacktrace, but not the other one, they are not the same\n    if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n      return false;\n    }\n\n    currentFrames = currentFrames as StackFrame[];\n    previousFrames = previousFrames as StackFrame[];\n\n    // If number of frames differ, they are not the same\n    if (previousFrames.length !== currentFrames.length) {\n      return false;\n    }\n\n    // Otherwise, compare the two\n    for (let i = 0; i < previousFrames.length; i++) {\n      const frameA = previousFrames[i];\n      const frameB = currentFrames[i];\n\n      if (\n        frameA.filename !== frameB.filename ||\n        frameA.lineno !== frameB.lineno ||\n        frameA.colno !== frameB.colno ||\n        frameA.function !== frameB.function\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /** JSDoc */\n  private _getExceptionFromEvent(event: Event): Exception | undefined {\n    return event.exception && event.exception.values && event.exception.values[0];\n  }\n\n  /** JSDoc */\n  private _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n    const previousException = this._getExceptionFromEvent(previousEvent);\n    const currentException = this._getExceptionFromEvent(currentEvent);\n\n    if (!previousException || !currentException) {\n      return false;\n    }\n\n    if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n      return false;\n    }\n\n    if (!this._isSameFingerprint(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    if (!this._isSameStacktrace(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** JSDoc */\n  private _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n    let currentFingerprint = currentEvent.fingerprint;\n    let previousFingerprint = previousEvent.fingerprint;\n\n    // If neither event has a fingerprint, they are assumed to be the same\n    if (!currentFingerprint && !previousFingerprint) {\n      return true;\n    }\n\n    // If only one event has a fingerprint, but not the other one, they are not the same\n    if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n      return false;\n    }\n\n    currentFingerprint = currentFingerprint as string[];\n    previousFingerprint = previousFingerprint as string[];\n\n    // Otherwise, compare the two\n    try {\n      return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n    } catch (_oO) {\n      return false;\n    }\n  }\n}\n","import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, isInstanceOf, logger } from '@sentry/utils';\n\n/** JSDoc */\nexport class Ember implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Ember';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Ember.id;\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-explicit-any\n  private readonly _Ember: any;\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public constructor(options: { Ember?: any } = {}) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    this._Ember = options.Ember || getGlobalObject<any>().Ember;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!this._Ember) {\n      logger.error('EmberIntegration is missing an Ember instance');\n      return;\n    }\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    const oldOnError = this._Ember.onerror;\n\n    this._Ember.onerror = (error: Error): void => {\n      if (getCurrentHub().getIntegration(Ember)) {\n        getCurrentHub().captureException(error, { originalException: error });\n      }\n\n      if (typeof oldOnError === 'function') {\n        oldOnError.call(this._Ember, error);\n      } else if (this._Ember.testing) {\n        throw error;\n      }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._Ember.RSVP.on('error', (reason: unknown): void => {\n      if (getCurrentHub().getIntegration(Ember)) {\n        getCurrentHub().withScope(scope => {\n          if (isInstanceOf(reason, Error)) {\n            scope.setExtra('context', 'Unhandled Promise error detected');\n            getCurrentHub().captureException(reason, { originalException: reason as Error });\n          } else {\n            scope.setExtra('reason', reason);\n            getCurrentHub().captureMessage('Unhandled Promise error detected');\n          }\n        });\n      }\n    });\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n}\n","import { Event, EventHint, EventProcessor, ExtendedError, Hub, Integration } from '@sentry/types';\nimport { isError, isPlainObject, logger, normalize } from '@sentry/utils';\n\n/** JSDoc */\ninterface ExtraErrorDataOptions {\n  depth?: number;\n}\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class ExtraErrorData implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'ExtraErrorData';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = ExtraErrorData.id;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(private readonly _options: ExtraErrorDataOptions = { depth: 3 }) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(ExtraErrorData);\n      if (!self) {\n        return event;\n      }\n      return self.enhanceEventWithErrorData(event, hint);\n    });\n  }\n\n  /**\n   * Attaches extracted information from the Error object to extra field in the Event\n   */\n  public enhanceEventWithErrorData(event: Event, hint?: EventHint): Event {\n    if (!hint || !hint.originalException || !isError(hint.originalException)) {\n      return event;\n    }\n    const name = (hint.originalException as ExtendedError).name || hint.originalException.constructor.name;\n\n    const errorData = this._extractErrorData(hint.originalException as ExtendedError);\n\n    if (errorData) {\n      let contexts = {\n        ...event.contexts,\n      };\n\n      const normalizedErrorData = normalize(errorData, this._options.depth);\n      if (isPlainObject(normalizedErrorData)) {\n        contexts = {\n          ...event.contexts,\n          [name]: {\n            ...normalizedErrorData,\n          },\n        };\n      }\n\n      return {\n        ...event,\n        contexts,\n      };\n    }\n\n    return event;\n  }\n\n  /**\n   * Extract extra information from the Error object\n   */\n  private _extractErrorData(error: ExtendedError): { [key: string]: unknown } | null {\n    let result = null;\n    // We are trying to enhance already existing event, so no harm done if it won't succeed\n    try {\n      const nativeKeys = ['name', 'message', 'stack', 'line', 'column', 'fileName', 'lineNumber', 'columnNumber'];\n      const errorKeys = Object.getOwnPropertyNames(error).filter(key => nativeKeys.indexOf(key) === -1);\n\n      if (errorKeys.length) {\n        const extraErrorInfo: { [key: string]: unknown } = {};\n        for (const key of errorKeys) {\n          let value = error[key];\n          if (isError(value)) {\n            value = (value as Error).toString();\n          }\n          extraErrorInfo[key] = value;\n        }\n        result = extraErrorInfo;\n      }\n    } catch (oO) {\n      logger.error('Unable to extract extra data from the Error object:', oO);\n    }\n\n    return result;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, logger, uuid4 } from '@sentry/utils';\nimport * as localForageType from 'localforage';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst localForage = require('localforage');\n/**\n * cache offline errors and send when connected\n */\nexport class Offline implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Offline';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = Offline.id;\n\n  /**\n   * the global instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public global: any;\n\n  /**\n   * the current hub instance\n   */\n  public hub?: Hub;\n\n  /**\n   * maximum number of events to store while offline\n   */\n  public maxStoredEvents: number;\n\n  /**\n   * event cache\n   */\n  public offlineEventStore: typeof localForageType; // type imported from localforage\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { maxStoredEvents?: number } = {}) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.global = getGlobalObject<any>();\n    this.maxStoredEvents = options.maxStoredEvents || 30; // set a reasonable default\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this.offlineEventStore = localForage.createInstance({\n      name: 'sentry/offlineEventStore',\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this.hub = getCurrentHub();\n\n    if ('addEventListener' in this.global) {\n      this.global.addEventListener('online', () => {\n        this._sendEvents().catch(() => {\n          logger.warn('could not send cached events');\n        });\n      });\n    }\n\n    addGlobalEventProcessor((event: Event) => {\n      if (this.hub && this.hub.getIntegration(Offline)) {\n        // cache if we are positively offline\n        if ('navigator' in this.global && 'onLine' in this.global.navigator && !this.global.navigator.onLine) {\n          this._cacheEvent(event)\n            .then((_event: Event): Promise<void> => this._enforceMaxEvents())\n            .catch((_error): void => {\n              logger.warn('could not cache event while offline');\n            });\n\n          // return null on success or failure, because being offline will still result in an error\n          return null;\n        }\n      }\n\n      return event;\n    });\n\n    // if online now, send any events stored in a previous offline session\n    if ('navigator' in this.global && 'onLine' in this.global.navigator && this.global.navigator.onLine) {\n      this._sendEvents().catch(() => {\n        logger.warn('could not send cached events');\n      });\n    }\n  }\n\n  /**\n   * cache an event to send later\n   * @param event an event\n   */\n  private async _cacheEvent(event: Event): Promise<Event> {\n    return this.offlineEventStore.setItem<Event>(uuid4(), event);\n  }\n\n  /**\n   * purge excess events if necessary\n   */\n  private async _enforceMaxEvents(): Promise<void> {\n    const events: Array<{ event: Event; cacheKey: string }> = [];\n\n    return this.offlineEventStore\n      .iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n        // aggregate events\n        events.push({ cacheKey, event });\n      })\n      .then(\n        (): Promise<void> =>\n          // this promise resolves when the iteration is finished\n          this._purgeEvents(\n            // purge all events past maxStoredEvents in reverse chronological order\n            events\n              .sort((a, b) => (b.event.timestamp || 0) - (a.event.timestamp || 0))\n              .slice(this.maxStoredEvents < events.length ? this.maxStoredEvents : events.length)\n              .map(event => event.cacheKey),\n          ),\n      )\n      .catch((_error): void => {\n        logger.warn('could not enforce max events');\n      });\n  }\n\n  /**\n   * purge event from cache\n   */\n  private async _purgeEvent(cacheKey: string): Promise<void> {\n    return this.offlineEventStore.removeItem(cacheKey);\n  }\n\n  /**\n   * purge events from cache\n   */\n  private async _purgeEvents(cacheKeys: string[]): Promise<void> {\n    // trail with .then to ensure the return type as void and not void|void[]\n    return Promise.all(cacheKeys.map(cacheKey => this._purgeEvent(cacheKey))).then();\n  }\n\n  /**\n   * send all events\n   */\n  private async _sendEvents(): Promise<void> {\n    return this.offlineEventStore.iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n      if (this.hub) {\n        this.hub.captureEvent(event);\n\n        this._purgeEvent(cacheKey).catch((_error): void => {\n          logger.warn('could not purge event from cache');\n        });\n      } else {\n        logger.warn('no hub found - could not send cached event');\n      }\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, supportsReportingObserver } from '@sentry/utils';\n\n/** JSDoc */\ninterface Report {\n  [key: string]: any;\n  type: ReportTypes;\n  url: string;\n  body?: ReportBody;\n}\n\n/** JSDoc */\nenum ReportTypes {\n  /** JSDoc */\n  Crash = 'crash',\n  /** JSDoc */\n  Deprecation = 'deprecation',\n  /** JSDoc */\n  Intervention = 'intervention',\n}\n\n/** JSDoc */\ntype ReportBody = CrashReportBody | DeprecationReportBody | InterventionReportBody;\n\n/** JSDoc */\ninterface CrashReportBody {\n  [key: string]: any;\n  crashId: string;\n  reason?: string;\n}\n\n/** JSDoc */\ninterface DeprecationReportBody {\n  [key: string]: any;\n  id: string;\n  anticipatedRemoval?: Date;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\n/** JSDoc */\ninterface InterventionReportBody {\n  [key: string]: any;\n  id: string;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\n/** Reporting API integration - https://w3c.github.io/reporting/ */\nexport class ReportingObserver implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'ReportingObserver';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = ReportingObserver.id;\n\n  /**\n   * Returns current hub.\n   */\n  private _getCurrentHub?: () => Hub;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    private readonly _options: {\n      types?: ReportTypes[];\n    } = {\n      types: [ReportTypes.Crash, ReportTypes.Deprecation, ReportTypes.Intervention],\n    },\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!supportsReportingObserver()) {\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const observer = new (getGlobalObject<any>().ReportingObserver)(this.handler.bind(this), {\n      buffered: true,\n      types: this._options.types,\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    observer.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public handler(reports: Report[]): void {\n    const hub = this._getCurrentHub && this._getCurrentHub();\n    if (!hub || !hub.getIntegration(ReportingObserver)) {\n      return;\n    }\n    for (const report of reports) {\n      hub.withScope(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inheirted\n          const plainBody: {\n            [key: string]: any;\n          } = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === ReportTypes.Crash) {\n            const body = report.body as CrashReportBody;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body as DeprecationReportBody | InterventionReportBody;\n            details = body.message || details;\n          }\n        }\n\n        hub.captureMessage(`${label}: ${details}`);\n      });\n    }\n  }\n}\n","import { Event, EventProcessor, Hub, Integration, StackFrame, Stacktrace } from '@sentry/types';\nimport { basename, relative } from '@sentry/utils';\n\ntype StackFrameIteratee = (frame: StackFrame) => StackFrame;\n\n/** Rewrite event frames paths */\nexport class RewriteFrames implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'RewriteFrames';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = RewriteFrames.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _root?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { root?: string; iteratee?: StackFrameIteratee } = {}) {\n    if (options.root) {\n      this._root = options.root;\n    }\n    if (options.iteratee) {\n      this._iteratee = options.iteratee;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(RewriteFrames);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  public process(event: Event): Event {\n    if (event.exception && Array.isArray(event.exception.values)) {\n      return this._processExceptionsEvent(event);\n    }\n\n    if (event.stacktrace) {\n      return this._processStacktraceEvent(event);\n    }\n\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _iteratee: StackFrameIteratee = (frame: StackFrame) => {\n    if (!frame.filename) {\n      return frame;\n    }\n    // Check if the frame filename begins with `/` or a Windows-style prefix such as `C:\\`\n    const isWindowsFrame = /^[A-Z]:\\\\/.test(frame.filename);\n    const startsWithSlash = /^\\//.test(frame.filename);\n    if (isWindowsFrame || startsWithSlash) {\n      const filename = isWindowsFrame\n        ? frame.filename\n            .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n            .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n        : frame.filename;\n      const base = this._root ? relative(this._root, filename) : basename(filename);\n      frame.filename = `app:///${base}`;\n    }\n    return frame;\n  };\n\n  /** JSDoc */\n  private _processExceptionsEvent(event: Event): Event {\n    try {\n      return {\n        ...event,\n        exception: {\n          ...event.exception,\n          // The check for this is performed inside `process` call itself, safe to skip here\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          values: event.exception!.values!.map(value => ({\n            ...value,\n            stacktrace: this._processStacktrace(value.stacktrace),\n          })),\n        },\n      };\n    } catch (_oO) {\n      return event;\n    }\n  }\n\n  /** JSDoc */\n  private _processStacktraceEvent(event: Event): Event {\n    try {\n      return {\n        ...event,\n        stacktrace: this._processStacktrace(event.stacktrace),\n      };\n    } catch (_oO) {\n      return event;\n    }\n  }\n\n  /** JSDoc */\n  private _processStacktrace(stacktrace?: Stacktrace): Stacktrace {\n    return {\n      ...stacktrace,\n      frames: stacktrace && stacktrace.frames && stacktrace.frames.map(f => this._iteratee(f)),\n    };\n  }\n}\n","import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\n\n/** This function adds duration since Sentry was initialized till the time event was sent */\nexport class SessionTiming implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'SessionTiming';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = SessionTiming.id;\n\n  /** Exact time Client was initialized expressed in milliseconds since Unix Epoch. */\n  protected readonly _startTime: number = Date.now();\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(SessionTiming);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const now = Date.now();\n\n    return {\n      ...event,\n      extra: {\n        ...event.extra,\n        ['session:start']: this._startTime,\n        ['session:duration']: now - this._startTime,\n        ['session:end']: now,\n      },\n    };\n  }\n}\n","import { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\n\n/** Add node transaction to the event */\nexport class Transaction implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Transaction';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Transaction.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(Transaction);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const frames = this._getFramesFromEvent(event);\n\n    // use for loop so we don't have to reverse whole frames array\n    for (let i = frames.length - 1; i >= 0; i--) {\n      const frame = frames[i];\n\n      if (frame.in_app === true) {\n        event.transaction = this._getTransaction(frame);\n        break;\n      }\n    }\n\n    return event;\n  }\n\n  /** JSDoc */\n  private _getFramesFromEvent(event: Event): StackFrame[] {\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    return (exception && exception.stacktrace && exception.stacktrace.frames) || [];\n  }\n\n  /** JSDoc */\n  private _getTransaction(frame: StackFrame): string {\n    return frame.module || frame.function ? `${frame.module || '?'}/${frame.function || '?'}` : '<unknown>';\n  }\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventProcessor, Hub, Integration, IntegrationClass, Scope, Span, Transaction } from '@sentry/types';\nimport { basename, getGlobalObject, logger, timestampWithMs } from '@sentry/utils';\n\n/**\n * Used to extract Tracing integration from the current client,\n * without the need to import `Tracing` itself from the @sentry/apm package.\n * @deprecated as @sentry/tracing should be used over @sentry/apm.\n */\nconst TRACING_GETTER = ({\n  id: 'Tracing',\n} as any) as IntegrationClass<Integration>;\n\n/**\n * Used to extract BrowserTracing integration from @sentry/tracing\n */\nconst BROWSER_TRACING_GETTER = ({\n  id: 'BrowserTracing',\n} as any) as IntegrationClass<Integration>;\n\n/** Global Vue object limited to the methods/attributes we require */\ninterface VueInstance {\n  config: {\n    errorHandler?(error: Error, vm?: ViewModel, info?: string): void;\n  };\n  util?: {\n    warn(...input: any): void;\n  };\n  mixin(hooks: { [key: string]: () => void }): void;\n}\n\n/** Representation of Vue component internals */\ninterface ViewModel {\n  [key: string]: any;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  $root: object;\n  $options: {\n    [key: string]: any;\n    name?: string;\n    propsData?: { [key: string]: any };\n    _componentTag?: string;\n    __file?: string;\n    $_sentryPerfHook?: boolean;\n  };\n  $once(hook: string, cb: () => void): void;\n}\n\n/** Vue Integration configuration */\ninterface IntegrationOptions {\n  /** Vue instance to be used inside the integration */\n  Vue: VueInstance;\n\n  /**\n   * When set to `false`, Sentry will suppress reporting of all props data\n   * from your Vue components for privacy concerns.\n   */\n  attachProps: boolean;\n  /**\n   * When set to `true`, original Vue's `logError` will be called as well.\n   * https://github.com/vuejs/vue/blob/c2b1cfe9ccd08835f2d99f6ce60f67b4de55187f/src/core/util/error.js#L38-L48\n   */\n  logErrors: boolean;\n\n  /**\n   * When set to `true`, enables tracking of components lifecycle performance.\n   * It requires `Tracing` integration to be also enabled.\n   */\n  tracing: boolean;\n\n  /** {@link TracingOptions} */\n  tracingOptions: TracingOptions;\n}\n\n/** Vue specific configuration for Tracing Integration  */\ninterface TracingOptions {\n  /**\n   * Decides whether to track components by hooking into its lifecycle methods.\n   * Can be either set to `boolean` to enable/disable tracking for all of them.\n   * Or to an array of specific component names (case-sensitive).\n   */\n  trackComponents: boolean | string[];\n  /** How long to wait until the tracked root activity is marked as finished and sent of to Sentry */\n  timeout: number;\n  /**\n   * List of hooks to keep track of during component lifecycle.\n   * Available hooks: 'activate' | 'create' | 'destroy' | 'mount' | 'update'\n   * Based on https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\n   */\n  hooks: Operation[];\n}\n\n/** Optional metadata attached to Sentry Event */\ninterface Metadata {\n  [key: string]: any;\n  componentName?: string;\n  propsData?: { [key: string]: any };\n  lifecycleHook?: string;\n}\n\n// https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\ntype Hook =\n  | 'activated'\n  | 'beforeCreate'\n  | 'beforeDestroy'\n  | 'beforeMount'\n  | 'beforeUpdate'\n  | 'created'\n  | 'deactivated'\n  | 'destroyed'\n  | 'mounted'\n  | 'updated';\n\ntype Operation = 'activate' | 'create' | 'destroy' | 'mount' | 'update';\n\n// Mappings from operation to corresponding lifecycle hook.\nconst HOOKS: { [key in Operation]: Hook[] } = {\n  activate: ['activated', 'deactivated'],\n  create: ['beforeCreate', 'created'],\n  destroy: ['beforeDestroy', 'destroyed'],\n  mount: ['beforeMount', 'mounted'],\n  update: ['beforeUpdate', 'updated'],\n};\n\nconst COMPONENT_NAME_REGEXP = /(?:^|[-_/])(\\w)/g;\nconst ROOT_COMPONENT_NAME = 'root';\nconst ANONYMOUS_COMPONENT_NAME = 'anonymous component';\n\n/** JSDoc */\nexport class Vue implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Vue';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Vue.id;\n\n  private readonly _options: IntegrationOptions;\n\n  /**\n   * Cache holding already processed component names\n   */\n  private readonly _componentsCache: { [key: string]: string } = {};\n  private _rootSpan?: Span;\n  private _rootSpanTimer?: ReturnType<typeof setTimeout>;\n  private _tracingActivity?: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    options: Partial<Omit<IntegrationOptions, 'tracingOptions'> & { tracingOptions: Partial<TracingOptions> }>,\n  ) {\n    this._options = {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      Vue: getGlobalObject<any>().Vue,\n      attachProps: true,\n      logErrors: false,\n      tracing: false,\n      ...options,\n      tracingOptions: {\n        hooks: ['mount', 'update'],\n        timeout: 2000,\n        trackComponents: false,\n        ...options.tracingOptions,\n      },\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!this._options.Vue) {\n      logger.error('Vue integration is missing a Vue instance');\n      return;\n    }\n\n    this._attachErrorHandler(getCurrentHub);\n\n    if (this._options.tracing) {\n      this._startTracing(getCurrentHub);\n    }\n  }\n\n  /**\n   * Extract component name from the ViewModel\n   */\n  private _getComponentName(vm: ViewModel): string {\n    // Such level of granularity is most likely not necessary, but better safe than sorry. — Kamil\n    if (!vm) {\n      return ANONYMOUS_COMPONENT_NAME;\n    }\n\n    if (vm.$root === vm) {\n      return ROOT_COMPONENT_NAME;\n    }\n\n    if (!vm.$options) {\n      return ANONYMOUS_COMPONENT_NAME;\n    }\n\n    if (vm.$options.name) {\n      return vm.$options.name;\n    }\n\n    if (vm.$options._componentTag) {\n      return vm.$options._componentTag;\n    }\n\n    // injected by vue-loader\n    if (vm.$options.__file) {\n      const unifiedFile = vm.$options.__file.replace(/^[a-zA-Z]:/, '').replace(/\\\\/g, '/');\n      const filename = basename(unifiedFile, '.vue');\n      return (\n        this._componentsCache[filename] ||\n        (this._componentsCache[filename] = filename.replace(COMPONENT_NAME_REGEXP, (_, c: string) =>\n          c ? c.toUpperCase() : '',\n        ))\n      );\n    }\n\n    return ANONYMOUS_COMPONENT_NAME;\n  }\n\n  /** Keep it as attribute function, to keep correct `this` binding inside the hooks callbacks  */\n  // eslint-disable-next-line @typescript-eslint/typedef\n  private readonly _applyTracingHooks = (vm: ViewModel, getCurrentHub: () => Hub): void => {\n    // Don't attach twice, just in case\n    if (vm.$options.$_sentryPerfHook) {\n      return;\n    }\n    vm.$options.$_sentryPerfHook = true;\n\n    const name = this._getComponentName(vm);\n    const rootMount = name === ROOT_COMPONENT_NAME;\n    const spans: { [key: string]: Span } = {};\n\n    // Render hook starts after once event is emitted,\n    // but it ends before the second event of the same type.\n    //\n    // Because of this, we start measuring inside the first event,\n    // but finish it before it triggers, to skip the event emitter timing itself.\n    const rootHandler = (hook: Hook): void => {\n      const now = timestampWithMs();\n\n      // On the first handler call (before), it'll be undefined, as `$once` will add it in the future.\n      // However, on the second call (after), it'll be already in place.\n      if (this._rootSpan) {\n        this._finishRootSpan(now, getCurrentHub);\n      } else {\n        vm.$once(`hook:${hook}`, () => {\n          // Create an activity on the first event call. There'll be no second call, as rootSpan will be in place,\n          // thus new event handler won't be attached.\n\n          // We do this whole dance with `TRACING_GETTER` to prevent `@sentry/apm` from becoming a peerDependency.\n          // We also need to ask for the `.constructor`, as `pushActivity` and `popActivity` are static, not instance methods.\n          /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n          // eslint-disable-next-line deprecation/deprecation\n          const tracingIntegration = getCurrentHub().getIntegration(TRACING_GETTER);\n          if (tracingIntegration) {\n            this._tracingActivity = (tracingIntegration as any).constructor.pushActivity('Vue Application Render');\n            const transaction = (tracingIntegration as any).constructor.getTransaction();\n            if (transaction) {\n              this._rootSpan = transaction.startChild({\n                description: 'Application Render',\n                op: 'Vue',\n              });\n            }\n            // Use functionality from @sentry/tracing\n          } else {\n            const activeTransaction = getActiveTransaction(getCurrentHub());\n            if (activeTransaction) {\n              this._rootSpan = activeTransaction.startChild({\n                description: 'Application Render',\n                op: 'Vue',\n              });\n            }\n          }\n          /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n        });\n      }\n    };\n\n    const childHandler = (hook: Hook, operation: Operation): void => {\n      // Skip components that we don't want to track to minimize the noise and give a more granular control to the user\n      const shouldTrack = Array.isArray(this._options.tracingOptions.trackComponents)\n        ? this._options.tracingOptions.trackComponents.indexOf(name) > -1\n        : this._options.tracingOptions.trackComponents;\n\n      if (!this._rootSpan || !shouldTrack) {\n        return;\n      }\n\n      const now = timestampWithMs();\n      const span = spans[operation];\n\n      // On the first handler call (before), it'll be undefined, as `$once` will add it in the future.\n      // However, on the second call (after), it'll be already in place.\n      if (span) {\n        span.finish();\n        this._finishRootSpan(now, getCurrentHub);\n      } else {\n        vm.$once(`hook:${hook}`, () => {\n          if (this._rootSpan) {\n            spans[operation] = this._rootSpan.startChild({\n              description: `Vue <${name}>`,\n              op: operation,\n            });\n          }\n        });\n      }\n    };\n\n    // Each component has it's own scope, so all activities are only related to one of them\n    this._options.tracingOptions.hooks.forEach(operation => {\n      // Retrieve corresponding hooks from Vue lifecycle.\n      // eg. mount => ['beforeMount', 'mounted']\n      const internalHooks = HOOKS[operation];\n\n      if (!internalHooks) {\n        logger.warn(`Unknown hook: ${operation}`);\n        return;\n      }\n\n      internalHooks.forEach(internalHook => {\n        const handler = rootMount\n          ? rootHandler.bind(this, internalHook)\n          : childHandler.bind(this, internalHook, operation);\n        const currentValue = vm.$options[internalHook];\n\n        if (Array.isArray(currentValue)) {\n          vm.$options[internalHook] = [handler, ...currentValue];\n        } else if (typeof currentValue === 'function') {\n          vm.$options[internalHook] = [handler, currentValue];\n        } else {\n          vm.$options[internalHook] = [handler];\n        }\n      });\n    });\n  };\n\n  /** Finish top-level span and activity with a debounce configured using `timeout` option */\n  private _finishRootSpan(timestamp: number, getCurrentHub: () => Hub): void {\n    if (this._rootSpanTimer) {\n      clearTimeout(this._rootSpanTimer);\n    }\n\n    this._rootSpanTimer = setTimeout(() => {\n      if (this._tracingActivity) {\n        // We do this whole dance with `TRACING_GETTER` to prevent `@sentry/apm` from becoming a peerDependency.\n        // We also need to ask for the `.constructor`, as `pushActivity` and `popActivity` are static, not instance methods.\n        // eslint-disable-next-line deprecation/deprecation\n        const tracingIntegration = getCurrentHub().getIntegration(TRACING_GETTER);\n        if (tracingIntegration) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          (tracingIntegration as any).constructor.popActivity(this._tracingActivity);\n        }\n      }\n\n      // We should always finish the span, only should pop activity if using @sentry/apm\n      if (this._rootSpan) {\n        this._rootSpan.finish(timestamp);\n      }\n    }, this._options.tracingOptions.timeout);\n  }\n\n  /** Inject configured tracing hooks into Vue's component lifecycles */\n  private _startTracing(getCurrentHub: () => Hub): void {\n    const applyTracingHooks = this._applyTracingHooks;\n\n    this._options.Vue.mixin({\n      beforeCreate(this: ViewModel): void {\n        // eslint-disable-next-line deprecation/deprecation\n        if (getCurrentHub().getIntegration(TRACING_GETTER) || getCurrentHub().getIntegration(BROWSER_TRACING_GETTER)) {\n          // `this` points to currently rendered component\n          applyTracingHooks(this, getCurrentHub);\n        } else {\n          logger.error('Vue integration has tracing enabled, but Tracing integration is not configured');\n        }\n      },\n    });\n  }\n\n  /** Inject Sentry's handler into owns Vue's error handler  */\n  private _attachErrorHandler(getCurrentHub: () => Hub): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const currentErrorHandler = this._options.Vue.config.errorHandler;\n\n    this._options.Vue.config.errorHandler = (error: Error, vm?: ViewModel, info?: string): void => {\n      const metadata: Metadata = {};\n\n      if (vm) {\n        try {\n          metadata.componentName = this._getComponentName(vm);\n\n          if (this._options.attachProps) {\n            metadata.propsData = vm.$options.propsData;\n          }\n        } catch (_oO) {\n          logger.warn('Unable to extract metadata from Vue component.');\n        }\n      }\n\n      if (info) {\n        metadata.lifecycleHook = info;\n      }\n\n      if (getCurrentHub().getIntegration(Vue)) {\n        // Capture exception in the next event loop, to make sure that all breadcrumbs are recorded in time.\n        setTimeout(() => {\n          getCurrentHub().withScope(scope => {\n            scope.setContext('vue', metadata);\n            getCurrentHub().captureException(error);\n          });\n        });\n      }\n\n      if (typeof currentErrorHandler === 'function') {\n        currentErrorHandler.call(this._options.Vue, error, vm, info);\n      }\n\n      if (this._options.logErrors) {\n        if (this._options.Vue.util) {\n          this._options.Vue.util.warn(`Error in ${info}: \"${error.toString()}\"`, vm);\n        }\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    };\n  }\n}\n\ninterface HubType extends Hub {\n  getScope?(): Scope | undefined;\n}\n\n/** Grabs active transaction off scope */\nexport function getActiveTransaction<T extends Transaction>(hub: HubType): T | undefined {\n  if (hub && hub.getScope) {\n    const scope = hub.getScope() as Scope;\n    if (scope) {\n      return scope.getTransaction() as T | undefined;\n    }\n  }\n\n  return undefined;\n}\n","/** Console logging verbosity for the SDK. */\nexport enum LogLevel {\n  /** No logs will be generated. */\n  None = 0,\n  /** Only SDK internal errors will be logged. */\n  Error = 1,\n  /** Information useful for debugging the SDK will be logged. */\n  Debug = 2,\n  /** All SDK actions will be logged. */\n  Verbose = 3,\n}\n","/** JSDoc */\n// eslint-disable-next-line import/export\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Severity {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  export function fromString(level: string): Severity {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n      case 'info':\n        return Severity.Info;\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n      case 'error':\n        return Severity.Error;\n      case 'fatal':\n        return Severity.Fatal;\n      case 'critical':\n        return Severity.Critical;\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n}\n","/** The status of an event. */\n// eslint-disable-next-line import/export\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent to Sentry successfully. */\n  Success = 'success',\n  /** The client is currently rate limited and will try again later. */\n  RateLimit = 'rate_limit',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error ocurred during submission. */\n  Failed = 'failed',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Status {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  export function fromHttpCode(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n","/**\n * Consumes the promise and logs the error when it rejects.\n * @param promise A promise to forget.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function forget(promise: PromiseLike<any>): void {\n  promise.then(null, e => {\n    // TODO: Use a better logging mechanism\n    // eslint-disable-next-line no-console\n    console.error(e);\n  });\n}\n","import { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push(`#${elem.id}`);\n  }\n\n  // eslint-disable-next-line prefer-const\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push(`.${classes[i]}`);\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\n/** Error message */\nconst ERROR_MESSAGE = 'Invalid Dsn';\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport class Dsn implements DsnComponents {\n  /** Protocol used to connect to Sentry. */\n  public protocol!: DsnProtocol;\n  /** Public authorization key. */\n  public user!: string;\n  /** Private authorization key (deprecated, optional). */\n  public pass!: string;\n  /** Hostname of the Sentry instance. */\n  public host!: string;\n  /** Port of the Sentry instance. */\n  public port!: string;\n  /** Path */\n  public path!: string;\n  /** Project ID */\n  public projectId!: string;\n\n  /** Creates a new Dsn component */\n  public constructor(from: DsnLike) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n  public toString(withPassword: boolean = false): string {\n    const { host, path, pass, port, projectId, protocol, user } = this;\n    return (\n      `${protocol}://${user}${withPassword && pass ? `:${pass}` : ''}` +\n      `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n    );\n  }\n\n  /** Parses a string into this Dsn. */\n  private _fromString(str: string): void {\n    const match = DSN_REGEX.exec(str);\n\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    const [protocol, user, pass = '', host, port = '', lastPath] = match.slice(1);\n    let path = '';\n    let projectId = lastPath;\n\n    const split = projectId.split('/');\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop() as string;\n    }\n\n    if (projectId) {\n      const projectMatch = projectId.match(/^\\d+/);\n      if (projectMatch) {\n        projectId = projectMatch[0];\n      }\n    }\n\n    this._fromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, user });\n  }\n\n  /** Maps Dsn components into this instance. */\n  private _fromComponents(components: DsnComponents): void {\n    this.protocol = components.protocol;\n    this.user = components.user;\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  }\n\n  /** Validates this Dsn and throws on error. */\n  private _validate(): void {\n    ['protocol', 'user', 'host', 'projectId'].forEach(component => {\n      if (!this[component as keyof DsnComponents]) {\n        throw new SentryError(`${ERROR_MESSAGE}: ${component} missing`);\n      }\n    });\n\n    if (!this.projectId.match(/^\\d+$/)) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid projectId ${this.projectId}`);\n    }\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid protocol ${this.protocol}`);\n    }\n\n    if (this.port && isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid port ${this.port}`);\n    }\n  }\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\n\nconst global = getGlobalObject<Window>();\n\n/** Object describing handler that will be triggered for a given `type` of instrumentation */\ninterface InstrumentHandler {\n  type: InstrumentHandlerType;\n  callback: InstrumentHandlerCallback;\n}\ntype InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\ntype InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      logger.warn('unknown instrumentation type:', type);\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler: InstrumentHandler): void {\n  if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n    return;\n  }\n  handlers[handler.type] = handlers[handler.type] || [];\n  (handlers[handler.type] as InstrumentHandlerCallback[]).push(handler.callback);\n  instrument(handler.type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      logger.error(\n        `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(\n          handler,\n        )}\\nError: ${e}`,\n      );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in global)) {\n    return;\n  }\n\n  ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function(level: string): void {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function(originalConsoleLevel: () => any): Function {\n      return function(...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function(originalFetch: () => void): () => void {\n    return function(...args: any[]): void {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(global, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\ntype XHRSendInput = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\n/** JSDoc */\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n    body?: XHRSendInput;\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  // Poor man's implementation of ES6 `Map`, tracking and keeping in sync key and value separately.\n  const requestKeys: XMLHttpRequest[] = [];\n  const requestValues: Array<any>[] = [];\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function(originalOpen: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function(): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            if (xhr.__sentry_xhr__) {\n              xhr.__sentry_xhr__.status_code = xhr.status;\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          try {\n            const requestPos = requestKeys.indexOf(xhr);\n            if (requestPos !== -1) {\n              // Make sure to pop both key and value to keep it in sync.\n              requestKeys.splice(requestPos);\n              const args = requestValues.splice(requestPos)[0];\n              if (xhr.__sentry_xhr__ && args[0] !== undefined) {\n                xhr.__sentry_xhr__.body = args[0] as XHRSendInput;\n              }\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function(original: WrappedFunction): Function {\n          return function(...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function(originalSend: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      requestKeys.push(this);\n      requestValues.push(args);\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = global.onpopstate;\n  global.onpopstate = function(this: WindowEventHandlers, ...args: any[]): any {\n    const to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      return oldOnPopState.apply(this, args);\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function(this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n  // to the document. Do this before we instrument addEventListener.\n  global.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n  global.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false);\n\n  // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    const proto = (global as any)[target] && (global as any)[target].prototype;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (\n      eventName: string,\n      fn: EventListenerOrEventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ) => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerOrEventListenerObject, capture?: boolean, secure?: boolean) => void {\n        if (fn && (fn as EventListenerObject).handleEvent) {\n          if (eventName === 'click') {\n            fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n              return function(this: any, event: Event): (event: Event) => void {\n                domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                return innerOriginal.call(this, event);\n              };\n            });\n          }\n          if (eventName === 'keypress') {\n            fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n              return function(this: any, event: Event): (event: Event) => void {\n                keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                return innerOriginal.call(this, event);\n              };\n            });\n          }\n        } else {\n          if (eventName === 'click') {\n            domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n          }\n          if (eventName === 'keypress') {\n            keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n          }\n        }\n\n        return original.call(this, eventName, fn, options);\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      original: () => void,\n    ): (\n      this: any,\n      eventName: string,\n      fn: EventListenerOrEventListenerObject,\n      options?: boolean | EventListenerOptions,\n    ) => () => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        try {\n          original.call(this, eventName, ((fn as unknown) as WrappedFunction).__sentry_wrapped__, options);\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return original.call(this, eventName, fn, options);\n      };\n    });\n  });\n}\n\nconst debounceDuration: number = 1000;\nlet debounceTimer: number = 0;\nlet keypressTimeout: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param name the event name (e.g. \"click\")\n * @param handler function that will be triggered\n * @param debounce decides whether it should wait till another event loop\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction domEventHandler(name: string, handler: Function, debounce: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // reset keypress timeout; e.g. triggering a 'click' after\n    // a 'keypress' will reset the keypress debounce so that a new\n    // set of keypresses can be recorded\n    keypressTimeout = undefined;\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors). Ignore if we've\n    // already captured the event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    lastCapturedEvent = event;\n\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n\n    if (debounce) {\n      debounceTimer = setTimeout(() => {\n        handler({ event, name });\n      });\n    } else {\n      handler({ event, name });\n    }\n  };\n}\n\n/**\n * Wraps addEventListener to capture keypress UI events\n * @param handler function that will be triggered\n * @returns wrapped keypress events handler\n * @hidden\n */\nfunction keypressEventHandler(handler: Function): (event: Event) => void {\n  // TODO: if somehow user switches keypress target before\n  //       debounce timeout is triggered, we will only capture\n  //       a single breadcrumb from the FIRST target (acceptable?)\n  return (event: Event): void => {\n    let target;\n\n    try {\n      target = event.target;\n    } catch (e) {\n      // just accessing event properties can throw an exception in some rare circumstances\n      // see: https://github.com/getsentry/raven-js/issues/838\n      return;\n    }\n\n    const tagName = target && (target as HTMLElement).tagName;\n\n    // only consider keypress events on actual input elements\n    // this will disregard keypresses targeting body (e.g. tabbing\n    // through elements, hotkeys, etc)\n    if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !(target as HTMLElement).isContentEditable)) {\n      return;\n    }\n\n    // record first keypress in a series, but ignore subsequent\n    // keypresses until debounce clears\n    if (!keypressTimeout) {\n      domEventHandler('input', handler)(event);\n    }\n    clearTimeout(keypressTimeout);\n\n    keypressTimeout = (setTimeout(() => {\n      keypressTimeout = undefined;\n    }, debounceDuration) as any) as number;\n  };\n}\n\nlet _oldOnErrorHandler: OnErrorEventHandler = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function(msg: any, url: any, line: any, column: any, error: any): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function(e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): boolean {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: any): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: any): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`);\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Integration, StackFrame, WrappedFunction } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\nimport { snipLine } from './string';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtractedNodeRequestData } from '@sentry/types';\n\nimport { isString } from './is';\nimport { normalize } from './object';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/** Default request keys that'll be used to extract data from the request */\nconst DEFAULT_REQUEST_KEYS = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\n\n/**\n * Normalizes data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param keys An optional array of keys to include in the normalized data. Defaults to DEFAULT_REQUEST_KEYS if not\n * provided.\n * @returns An object containing normalized request data\n */\nexport function extractNodeRequestData(\n  req: { [key: string]: any },\n  keys: string[] = DEFAULT_REQUEST_KEYS,\n): ExtractedNodeRequestData {\n  // make sure we can safely use dynamicRequire below\n  if (!isNodeEnv()) {\n    throw new Error(\"Can't get node request data outside of a node environment\");\n  }\n\n  const requestData: { [key: string]: any } = {};\n\n  // headers:\n  //   node, express: req.headers\n  //   koa: req.header\n  const headers = (req.headers || req.header || {}) as {\n    host?: string;\n    cookie?: string;\n  };\n  // method:\n  //   node, express, koa: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node: <n/a>\n  //   express, koa: req.protocol\n  const protocol =\n    req.protocol === 'https' || req.secure || ((req.socket || {}) as { encrypted?: boolean }).encrypted\n      ? 'https'\n      : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa: req.url\n  const originalUrl = (req.originalUrl || req.url || '') as string;\n  // absolute url\n  const absoluteUrl = `${protocol}://${host}${originalUrl}`;\n\n  keys.forEach(key => {\n    switch (key) {\n      case 'headers':\n        requestData.headers = headers;\n        break;\n      case 'method':\n        requestData.method = method;\n        break;\n      case 'url':\n        requestData.url = absoluteUrl;\n        break;\n      case 'cookies':\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware): req.cookies\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.cookies = req.cookies || dynamicRequire(module, 'cookie').parse(headers.cookie || '');\n        break;\n      case 'query_string':\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = dynamicRequire(module, 'url').parse(originalUrl || '', false).query;\n        break;\n      case 'data':\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   node, express, koa: req.body\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      default:\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req as { [key: string]: any })[key];\n        }\n    }\n  });\n\n  return requestData;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName } from './stacktrace';\nimport { truncate } from './string';\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacement: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacement(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all it's attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order to be usable by the serializer\n */\nfunction getWalkSource(\n  value: any,\n): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      [key: string]: any;\n      stack: string | undefined;\n      message: string;\n      name: string;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    source.type = event.type;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      source.detail = event.detail;\n    }\n\n    for (const i in event) {\n      if (Object.prototype.hasOwnProperty.call(event, i)) {\n        source[i] = event;\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${getFunctionName(value)}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // If value implements `toJSON` method, call it and return early\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function normalize(input: any, depth?: number): any {\n  try {\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const obj = val as { [key: string]: any };\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(obj)) {\n      if (typeof obj[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(obj[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return val.map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n","// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://raw.githubusercontent.com/calvinmetcalf/rollup-plugin-node-builtins/master/src/es6/path.js\n\n/** JSDoc */\nfunction normalizeArray(parts: string[], allowAboveRoot?: boolean): string[] {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      // eslint-disable-next-line no-plusplus\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      // eslint-disable-next-line no-plusplus\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    // eslint-disable-next-line no-plusplus\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^/]+?|)(\\.[^./]*|))(?:[/]*)$/;\n/** JSDoc */\nfunction splitPath(filename: string): string[] {\n  const parts = splitPathRe.exec(filename);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nexport function resolve(...args: string[]): string {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr: string[]): string[] {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nexport function relative(from: string, to: string): string {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nexport function normalizePath(path: string): string {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.substr(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nexport function isAbsolute(path: string): boolean {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nexport function join(...args: string[]): string {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nexport function dirname(path: string): string {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nexport function basename(path: string, ext?: string): string {\n  let f = splitPath(path)[2];\n  if (ext && f.substr(ext.length * -1) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n\n/** A simple queue that holds promises. */\nexport class PromiseBuffer<T> {\n  /** Internal set of queued Promises */\n  private readonly _buffer: Array<PromiseLike<T>> = [];\n\n  public constructor(protected _limit?: number) {}\n\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n  public isReady(): boolean {\n    return this._limit === undefined || this.length() < this._limit;\n  }\n\n  /**\n   * Add a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns The original promise.\n   */\n  public add(task: PromiseLike<T>): PromiseLike<T> {\n    if (!this.isReady()) {\n      return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n    task\n      .then(() => this.remove(task))\n      .then(null, () =>\n        this.remove(task).then(null, () => {\n          // We have to add this catch here otherwise we have an unhandledPromiseRejection\n          // because it's a new Promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Remove a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  public remove(task: PromiseLike<T>): PromiseLike<T> {\n    const removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n    return removedTask;\n  }\n\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n  public length(): number {\n    return this._buffer.length;\n  }\n\n  /**\n   * This will drain the whole queue, returns true if queue is empty or drained.\n   * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n   *\n   * @param timeout Number in ms to wait until it resolves with false.\n   */\n  public drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>(resolve => {\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n      SyncPromise.all(this._buffer)\n        .then(() => {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        })\n        .then(null, () => {\n          resolve(true);\n        });\n    });\n  }\n}\n","const defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n","import { isRegExp, isString } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const ll = newLine.length;\n  if (ll <= 150) {\n    return newLine;\n  }\n  if (colno > ll) {\n    // eslint-disable-next-line no-param-reassign\n    colno = ll;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, ll);\n  if (end > ll - 5) {\n    end = ll;\n  }\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return (pattern as RegExp).test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === `function`) {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (global as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import { getGlobalObject } from './misc';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance) {\n    return undefined;\n  }\n  if (performance.timeOrigin) {\n    return performance.timeOrigin;\n  }\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  return (performance.timing && performance.timing.navigationStart) || Date.now();\n})();\n"],"sourceRoot":""}